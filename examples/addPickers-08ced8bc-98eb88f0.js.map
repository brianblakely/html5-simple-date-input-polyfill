{"version":3,"file":"addPickers-08ced8bc-98eb88f0.js","sources":["../node_modules/core-js/internals/array-method-is-strict.js","../node_modules/core-js/internals/array-method-uses-to-length.js","../node_modules/core-js/modules/es.array.index-of.js","../node_modules/core-js/internals/object-keys.js","../node_modules/core-js/internals/object-define-properties.js","../node_modules/core-js/internals/object-create.js","../node_modules/core-js/internals/add-to-unscopables.js","../node_modules/core-js/internals/to-object.js","../node_modules/core-js/internals/correct-prototype-getter.js","../node_modules/core-js/internals/object-get-prototype-of.js","../node_modules/core-js/internals/iterators-core.js","../node_modules/core-js/internals/create-iterator-constructor.js","../node_modules/core-js/internals/a-possible-prototype.js","../node_modules/core-js/internals/object-set-prototype-of.js","../node_modules/core-js/internals/define-iterator.js","../node_modules/core-js/modules/es.array.iterator.js","../node_modules/core-js/internals/is-array.js","../node_modules/core-js/internals/create-property.js","../node_modules/core-js/internals/array-method-has-species-support.js","../node_modules/core-js/modules/es.array.slice.js","../node_modules/core-js/internals/object-assign.js","../node_modules/core-js/modules/es.object.assign.js","../node_modules/core-js/internals/inherit-if-required.js","../node_modules/core-js/internals/is-regexp.js","../node_modules/core-js/internals/regexp-flags.js","../node_modules/core-js/internals/regexp-sticky-helpers.js","../node_modules/core-js/modules/es.regexp.constructor.js","../node_modules/core-js/modules/es.regexp.to-string.js","../node_modules/core-js/internals/not-a-regexp.js","../node_modules/core-js/internals/correct-is-regexp-logic.js","../node_modules/core-js/modules/es.string.includes.js","../node_modules/core-js/internals/string-repeat.js","../node_modules/core-js/internals/string-pad.js","../node_modules/core-js/internals/string-pad-webkit-bug.js","../node_modules/core-js/modules/es.string.pad-start.js","../node_modules/core-js/internals/regexp-exec.js","../node_modules/core-js/modules/es.regexp.exec.js","../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","../node_modules/core-js/internals/string-multibyte.js","../node_modules/core-js/internals/advance-string-index.js","../node_modules/core-js/internals/regexp-exec-abstract.js","../node_modules/core-js/modules/es.string.replace.js","../node_modules/core-js/modules/es.string.split.js","../node_modules/core-js/internals/dom-iterables.js","../node_modules/core-js/modules/web.dom-collections.iterator.js","../dist/addPickers-08ced8bc.mjs"],"sourcesContent":["'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('../internals/to-length');\nvar repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = String(requireObjectCoercible($this));\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : String(fillString);\n    var intMaxLength = toLength(maxLength);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n","// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/engine-user-agent');\n\n// eslint-disable-next-line unicorn/no-unsafe-regex\nmodule.exports = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/string-pad-webkit-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","import { a as pickerAppliedAttr, d as dateInputIsSupported, F as FindInputsHelper } from './polyfill-date-if-required-dynamic-import-3d89b165.mjs';\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"date-input-polyfill {\\n  background: #fff;\\n  color: #000;\\n  text-shadow: none;\\n  border: 0;\\n  padding: 0;\\n  height: auto;\\n  width: auto;\\n  line-height: normal;\\n  border-radius: 0;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n  position: absolute !important;\\n  text-align: center;\\n  box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 12px 17px 2px rgba(0, 0, 0, 0.14), 0 5px 22px 4px rgba(0, 0, 0, 0.12);\\n  cursor: default;\\n  z-index: 1; }\\n  date-input-polyfill[data-open=\\\"false\\\"] {\\n    display: none; }\\n  date-input-polyfill[data-open=\\\"true\\\"] {\\n    display: block; }\\n  date-input-polyfill select, date-input-polyfill table, date-input-polyfill th, date-input-polyfill td {\\n    background: #fff;\\n    color: #000;\\n    text-shadow: none;\\n    border: 0;\\n    padding: 0;\\n    height: auto;\\n    width: auto;\\n    line-height: normal;\\n    border-radius: 0;\\n    font-family: sans-serif;\\n    font-size: 14px;\\n    box-shadow: none; }\\n  date-input-polyfill select, date-input-polyfill button {\\n    border: 0;\\n    border-bottom: 1px solid #E0E0E0;\\n    height: 24px;\\n    vertical-align: top; }\\n  date-input-polyfill select {\\n    width: 50%; }\\n    date-input-polyfill select:first-of-type {\\n      border-right: 1px solid #E0E0E0;\\n      width: 30%; }\\n  date-input-polyfill button {\\n    padding: 0;\\n    width: 20%;\\n    background: #E0E0E0; }\\n  date-input-polyfill table {\\n    border-collapse: collapse; }\\n  date-input-polyfill th, date-input-polyfill td {\\n    width: 32px;\\n    padding: 4px;\\n    text-align: center; }\\n  date-input-polyfill td[data-day] {\\n    cursor: pointer; }\\n    date-input-polyfill td[data-day]:hover {\\n      background: #E0E0E0; }\\n  date-input-polyfill [data-selected] {\\n    font-weight: bold;\\n    background: #D8EAF6; }\\n\\ninput[data-has-picker]::-ms-clear {\\n  display: none; }\\n\";\nstyleInject(css_248z);\n\nclass Picker {\r\n  constructor() {\r\n    // This is a singleton.\r\n    if(Picker.instance) {\r\n      return Picker.instance;\r\n    }\r\n\r\n    const passiveOpt = { passive: true };\r\n\r\n    this.date = new Date();\r\n    this.input = null;\r\n    this.isOpen = false;\r\n\r\n    // The picker element. Unique tag name attempts to protect against\r\n    // generic selectors.\r\n    this.container = document.createElement(`date-input-polyfill`);\r\n\r\n    // Add controls.\r\n    // Year picker.\r\n    this.year = document.createElement(`select`);\r\n    Picker.createRangeSelect(\r\n      this.year,\r\n      this.date.getFullYear() - 80,\r\n      this.date.getFullYear() + 20\r\n    );\r\n    this.year.className = `yearSelect`;\r\n    this.year.addEventListener(`change`, ()=> {\r\n      this.date.setYear(this.year.value);\r\n      this.refreshDaysMatrix();\r\n    }, passiveOpt);\r\n    this.container.appendChild(this.year);\r\n\r\n    // Month picker.\r\n    this.month = document.createElement(`select`);\r\n    this.month.className = `monthSelect`;\r\n    this.month.addEventListener(`change`, ()=> {\r\n      this.date.setMonth(this.month.value);\r\n      this.refreshDaysMatrix();\r\n    }, passiveOpt);\r\n    this.container.appendChild(this.month);\r\n\r\n    // Today button.\r\n    this.today = document.createElement(`button`);\r\n    this.today.textContent = `Today`;\r\n    this.today.addEventListener(`click`, ()=> {\r\n      this.date = new Date();\r\n      this.setInput();\r\n    }, passiveOpt);\r\n    this.container.appendChild(this.today);\r\n\r\n    // Setup unchanging DOM for days matrix.\r\n    const daysMatrix = document.createElement(`table`);\r\n    this.daysHead = document.createElement(`thead`);\r\n    this.days = document.createElement(`tbody`);\r\n\r\n    // THIS IS THE BIG PART.\r\n    // When the user clicks a day, set that day as the date.\r\n    // Uses event delegation.\r\n    this.days.addEventListener(`click`, e=> {\r\n      const tgt = e.target;\r\n\r\n      if(!tgt.hasAttribute(`data-day`)) {\r\n        return false;\r\n      }\r\n\r\n      const curSel = this.days.querySelector(`[data-selected]`);\r\n      if(curSel) {\r\n        curSel.removeAttribute(`data-selected`);\r\n      }\r\n      tgt.setAttribute(`data-selected`, '');\r\n\r\n      this.date.setDate(parseInt(tgt.textContent));\r\n      this.setInput();\r\n    }, passiveOpt);\r\n\r\n    daysMatrix.appendChild(this.daysHead);\r\n    daysMatrix.appendChild(this.days);\r\n    this.container.appendChild(daysMatrix);\r\n\r\n    this.hide();\r\n    document.body.appendChild(this.container);\r\n\r\n    // Close the picker when clicking outside of a date input or picker.\r\n    document.addEventListener('click', e=> {\r\n      let el = e.target;\r\n      let isPicker = el === this.container;\r\n\r\n      while(!isPicker && (el = el.parentNode)) {\r\n        isPicker = el === this.container;\r\n      }\r\n\r\n      const attr = e.target.getAttribute('type');\r\n      if (attr !== 'date' && attr !== 'date-polyfill' && !isPicker) {\r\n        this.hide();\r\n      }\r\n    }, passiveOpt);\r\n  }\r\n\r\n  // Hide.\r\n  hide() {\r\n    this.container.setAttribute('data-open', this.isOpen = false);\r\n  }\r\n\r\n  // Show.\r\n  show() {\r\n    this.container.setAttribute('data-open', this.isOpen = true);\r\n  }\r\n\r\n  // Position picker below element. Align to element's left edge.\r\n  goto(element) {\r\n    const rekt = element.getBoundingClientRect();\r\n    this.container.style.top = `${\r\n      rekt.top + rekt.height\r\n      + (document.documentElement.scrollTop || document.body.scrollTop)\r\n    }px`;\r\n    this.container.style.left = `${\r\n      rekt.left\r\n      + (document.documentElement.scrollLeft || document.body.scrollLeft)\r\n    }px`;\r\n\r\n    this.show();\r\n  }\r\n\r\n  // Initiate I/O with given date input.\r\n  attachTo(input) {\r\n    if(\r\n      input === this.input\r\n      && this.isOpen\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    this.input = input;\r\n    this.sync();\r\n    this.goto(this.input.element);\r\n  }\r\n\r\n  // Match picker date with input date.\r\n  sync() {\r\n    if(this.input.element.valueAsDate) {\r\n      this.date = Picker.absoluteDate(this.input.element.valueAsDate);\r\n    } else {\r\n      this.date = new Date();\r\n    }\r\n\r\n    this.year.value = this.date.getFullYear();\r\n    this.month.value = this.date.getMonth();\r\n    this.refreshDaysMatrix();\r\n  }\r\n\r\n  // Match input date with picker date.\r\n  setInput() {\r\n    this.input.element.value =\r\n      `${\r\n        this.date.getFullYear()\r\n      }-${\r\n        String(this.date.getMonth() + 1).padStart(2,'0')\r\n      }-${\r\n        String(this.date.getDate()).padStart(2,'0')\r\n      }`;\r\n\r\n    this.input.element.focus();\r\n    setTimeout(()=> { // IE wouldn't hide, so in a timeout you go.\r\n      this.hide();\r\n    }, 100);\r\n\r\n    this.pingInput();\r\n  }\r\n\r\n  refreshLocale() {\r\n    if(this.locale === this.input.locale) {\r\n      return false;\r\n    }\r\n\r\n    this.locale = this.input.locale;\r\n\r\n    const daysHeadHTML = [`<tr>`];\r\n    for(let i = 0, len = this.input.localeText.days.length; i < len; ++i) {\r\n      daysHeadHTML.push(`<th scope=\"col\">${this.input.localeText.days[i]}</th>`);\r\n    }\r\n    this.daysHead.innerHTML = daysHeadHTML.join('');\r\n\r\n    Picker.createRangeSelect(\r\n      this.month,\r\n      0,\r\n      11,\r\n      this.input.localeText.months,\r\n      this.date.getMonth()\r\n    );\r\n\r\n    this.today.textContent = this.input.localeText.today;\r\n  }\r\n\r\n  refreshDaysMatrix() {\r\n    this.refreshLocale();\r\n\r\n    // Determine days for this month and year,\r\n    // as well as on which weekdays they lie.\r\n    const year = this.date.getFullYear(); // Get the year (2016).\r\n    const month = this.date.getMonth(); // Get the month number (0-11).\r\n    const startDay = new Date(year, month, 1).getDay(); // First weekday of month (0-6).\r\n    const maxDays = new Date(\r\n      this.date.getFullYear(),\r\n      month + 1,\r\n      0\r\n    ).getDate(); // Get days in month (1-31).\r\n\r\n    // The input's current date.\r\n    const selDate = Picker.absoluteDate(this.input.element.valueAsDate) || false;\r\n\r\n    // Are we in the input's currently-selected month and year?\r\n    const selMatrix =\r\n      selDate\r\n      && year === selDate.getFullYear()\r\n      && month === selDate.getMonth();\r\n\r\n    // Populate days matrix.\r\n    const matrixHTML = [];\r\n    for(let i = 0; i < maxDays + startDay; ++i) {\r\n      // Add a row every 7 days.\r\n      if(i % 7 === 0) {\r\n        matrixHTML.push(`\r\n          ${i !== 0 ? `</tr>` : ''}\r\n          <tr>\r\n        `);\r\n      }\r\n\r\n      // Add new column.\r\n      // If no days from this month in this column, it will be empty.\r\n      if(i + 1 <= startDay) {\r\n        matrixHTML.push(`<td></td>`);\r\n        continue;\r\n      }\r\n\r\n      // Populate day number.\r\n      const dayNum = i + 1 - startDay;\r\n      const selected = selMatrix && selDate.getDate() === dayNum;\r\n\r\n      matrixHTML.push(\r\n        `<td data-day ${selected ? `data-selected` : ''}>\r\n          ${dayNum}\r\n        </td>`\r\n      );\r\n    }\r\n\r\n    this.days.innerHTML = matrixHTML.join('');\r\n  }\r\n\r\n  pingInput() {\r\n    // Dispatch DOM events to the input.\r\n    let inputEvent;\r\n    let changeEvent;\r\n\r\n    // Modern event creation.\r\n    try {\r\n      inputEvent = new Event(`input`);\r\n      changeEvent = new Event(`change`);\r\n    }\r\n    // Old-fashioned way.\r\n    catch(e) {\r\n      inputEvent = document.createEvent(`KeyboardEvent`);\r\n      inputEvent.initEvent(`input`, true, false);\r\n      changeEvent = document.createEvent(`KeyboardEvent`);\r\n      changeEvent.initEvent(`change`, true, false);\r\n    }\r\n\r\n    this.input.element.dispatchEvent(inputEvent);\r\n    this.input.element.dispatchEvent(changeEvent);\r\n  }\r\n\r\n  static createRangeSelect(theSelect, min, max, namesArray, selectedValue) {\r\n    theSelect.innerHTML = '';\r\n\r\n    for(let i = min; i <= max; ++i) {\r\n      const aOption = document.createElement(`option`);\r\n      theSelect.appendChild(aOption);\r\n\r\n      const theText = namesArray ? namesArray[i - min] : i;\r\n\r\n      aOption.text = theText;\r\n      aOption.value = i;\r\n\r\n      if(i === selectedValue) {\r\n        aOption.selected = `selected`;\r\n      }\r\n    }\r\n\r\n    return theSelect;\r\n  }\r\n\r\n  static absoluteDate(date) {\r\n    return date && new Date(date.getTime() + date.getTimezoneOffset()*60000);\r\n  }\r\n}\r\n\r\nPicker.instance = null;\n\n// Localizations for UI text.\r\nfunction getLocaleFormat(localeNames) {\r\n  const locales = [\r\n    [\"D. M. Y\",\r\n      '_dsb_dsb-de_hsb_hsb-de_sk_sk-sk_'],\r\n    [\"D.M.Y\",\r\n      '_az_az-cyrl_az-cyrl-az_az-latn_az-latn-az_ba_ba-ru_be_be-by_bs_bs-cyrl_bs-cyrl-ba_bs-latn_bs-latn-ba_cs_cs-cz_de_de-at_de-ch_de-de_de-li_de-lu_et_et-ee_fi_fi-fi_fr-ch_hy_hy-am_is_is-is_it-ch_ka_ka-ge_kk_kk-kz_ky_ky-kg_mk_mk-mk_nb_nb-no_nn_nn-no_no_ro_ro-ro_ru_ru-ru_se_se-fi_se-no_sl_sl-si_sma-no_smj-no_smn_smn-fi_sms_sms-fi_sr_sr-cyrl_sr-cyrl-ba_sr-cyrl-cs_sr-cyrl-me_sr-cyrl-rs_sr-latn_sr-latn-ba_sr-latn-cs_sr-latn-me_sr-latn-rs_sv-fi_tg_tg-cyrl_tg-cyrl-tj_tk_tk-tm_tr_tr-tr_tt_tt-ru_uk_uk-ua_uz-cyrl_uz-cyrl-uz_'],\r\n    [\"D.M.Y 'г.'\",\r\n      '_bg_bg-bg_'],\r\n    [\"D.M.Y.\",\r\n      '_hr_hr-ba_hr-hr_'],\r\n    [\"D/M Y\",\r\n      '_uz_uz-latn_uz-latn-uz_'],\r\n    [\"D/M/Y\",\r\n      '_am_am-et_ar_ar-ae_ar-bh_ar-eg_ar-iq_ar-jo_ar-kw_ar-lb_ar-ly_ar-om_ar-qa_ar-sa_ar-sy_ar-ye_br_br-fr_ca_ca-es_co_co-fr_cy_cy-gb_dv_dv-mv_el_el-gr_en-au_en-bz_en-ca_en-gb_en-ie_en-jm_en-my_en-nz_en-sg_en-tt_es_es-ar_es-bo_es-co_es-cr_es-do_es-ec_es-es_es-gt_es-hn_es-mx_es-ni_es-pe_es-pr_es-py_es-sv_es-uy_es-ve_fr_fr-be_fr-fr_fr-lu_fr-mc_ga_ga-ie_gd_gd-gb_gl_gl-es_gsw_gsw-fr_ha_ha-latn_ha-latn-ng_he_he-il_id_id-id_ig_ig-ng_it_it-it_iu_iu-cans_iu-cans-ca_iu-latn_iu-latn-ca_lb_lb-lu_lo_lo-la_mi_mi-nz_ms_ms-bn_ms-my_mt_mt-mt_nl-be_oc_oc-fr_prs_prs-af_ps_ps-af_pt_pt-br_qut_qut-gt_quz_quz-bo_quz-ec_quz-pe_rm_rm-ch_syr_syr-sy_th_th-th_ur_ur-pk_vi_vi-vn_wo_wo-sn_yo_yo-ng_zh-cht_zh-hant_zh-hk_zh-mo_zh-sg_'],\r\n    [\"D-M-Y\",\r\n      '_ar-dz_ar-ma_arn_arn-cl_ar-tn_as_as-in_bn_bn-bd_bn-in_da_da-dk_en-in_es-cl_fo_fo-fo_fy_fy-nl_gu_gu-in_hi_hi-in_kl_kl-gl_kn_kn-in_kok_kok-in_ml_ml-in_mr_mr-in_nl_nl-nl_or_or-in_pa_pa-in_pt-pt_sa_sa-in_ta_ta-in_te_te-in_tzm_tzm-latn_tzm-latn-dz_'],\r\n    [\"M.D.Y\",\r\n      '_sah_sah-ru_'],\r\n    [\"M/D/Y\",\r\n      '_en_en-029_en-ph_en-us_en-zw_es-pa_es-us_fa_fa-ir_fil_fil-ph_moh_moh-ca_ne_ne-np_rw_rw-rw_sw_sw-ke_'],\r\n    [\"Y.M.D\",\r\n      '_lt_lt-lt_mn_mn-cyrl_mn-mn_'],\r\n    [\"Y.M.D.\",\r\n      '_hu_hu-hu_lv_lv-lv_'],\r\n    [\"Y/M/D\",\r\n      '_af_af-za_bo_bo-cn_en-za_eu_eu-es_ii_ii-cn_ja_ja-jp_mn-mong_mn-mong-cn_nso_nso-za_tn_tn-za_xh_xh-za_zh_zh-chs_zh-cn_zh-hans_zh-tw_zu_zu-za_'],\r\n    [\"Y-M-D\",\r\n      '_fr-ca_km_km-kh_ko_ko-kr_pl_pl-pl_se-se_si_si-lk_sma_sma-se_smj_smj-se_sq_sq-al_sv_sv-se_ug_ug-cn_'],\r\n  ];\r\n  const localeCpy = localeNames.map((l) => l.toLowerCase());\r\n  for (let i = 0; i < localeCpy.length; ++i) {\r\n    const srchStr = '_' + localeCpy[i] + '_';\r\n    const found = locales.find((l) => l[1].includes(srchStr));\r\n    if (found) {\r\n      return { locale: localeCpy[i], format: found[0], parseLocale: parseFromFormat(found[0]) } ;\r\n    }\r\n    const decrSpec = decreaseLocaleSpecificity(localeCpy[i]);\r\n    if (decrSpec) {\r\n      localeCpy.push(decrSpec);\r\n    }\r\n  }\r\n  const format = \"Y-M-D\";\r\n  return { locale: \"en\", format, parseLocale: parseFromFormat(format) };\r\n}\r\n\r\nfunction decreaseLocaleSpecificity(localeName) {\r\n  const returnVar = localeName.replace(/-[a-z0-9]+$/, '');\r\n  if (!returnVar || returnVar === localeName) {\r\n    return null;\r\n  }\r\n  return returnVar;\r\n}\r\n\r\nfunction parseFromFormat(format) {\r\n  let yPos = format.indexOf('Y');\r\n  let mPos = format.indexOf('M');\r\n  let dPos;\r\n  // only 3 permutaions in use: DMY, YMD & MDY\r\n  if (yPos < mPos) {\r\n    yPos = 1;\r\n    mPos = 2;\r\n    dPos = 3;\r\n  } else {\r\n    yPos = 3;\r\n    dPos = format.indexOf('D');\r\n    if (dPos < mPos) {\r\n      dPos = 1;\r\n      mPos = 2;\r\n    } else {\r\n      mPos = 1;\r\n      dPos = 2;\r\n    }\r\n  }\r\n  format = format.replace(/\\./g, '\\\\.')\r\n    .replace('Y', '([12]\\\\d{3})')\r\n    .replace('M', '([01]?\\\\d)')\r\n    .replace('D', '([0-3]?\\\\d)');\r\n  const localeDtRx = new RegExp(format);\r\n  return (dtStr) => {\r\n    const dateMatch = localeDtRx.exec(dtStr);\r\n    if (!dateMatch) { return null; }\r\n    const yr = parseInt(dateMatch[yPos], 10);\r\n    const mth = parseInt(dateMatch[mPos], 10) - 1;\r\n    const dt = parseInt(dateMatch[dPos], 10);\r\n    const returnVar = new Date(yr, mth, dt);\r\n    if (returnVar.getFullYear() !== yr || returnVar.getMonth() !== mth || returnVar.getDate() !== dt) {\r\n      return null;\r\n    }\r\n    return returnVar;\r\n  }\r\n}\n\nfunction getLanguageInfo(localeNames) {\r\n    const languages = getLanguages();\r\n    const fmt = getLocaleFormat(localeNames);\r\n    let language;\r\n    let l = fmt.locale;\r\n    while (!(language = languages[l])) {\r\n        l = decreaseLocaleSpecificity(l);\r\n    }\r\n    if (!language) {\r\n        language = languages['en']; // shouldn't get to here - possibly throw an error?\r\n    }\r\n    return Object.assign(fmt, language);\r\n}\r\n\r\nfunction getLanguages() {\r\n    return {\r\n        ar: { // Arabic\r\n            today: \"اليوم\",\r\n            days: [\r\n                \"الأحد\",\r\n                \"الإثنين\",\r\n                \"الثلاثاء\",\r\n                \"الأربعاء\",\r\n                \"الخميس\",\r\n                \"الجمعة\",\r\n                \"السبت\"\r\n            ],\r\n            months: [\r\n                \"محرم\",\r\n                \"صفر\",\r\n                \"ربيع الأول\",\r\n                \"ربيع الثاني\",\r\n                \"جمادى الأولى\",\r\n                \"جمادى الثانية\",\r\n                \"رجب\",\r\n                \"شعبان\",\r\n                \"رمضان\",\r\n                \"شوال\",\r\n                \"ذو القعدة\",\r\n                \"ذو الحجة\"\r\n            ]\r\n        },\r\n        bg: { // Bulgarian\r\n            today: \"днес\",\r\n            days: [\r\n                \"нед\",\r\n                \"пон\",\r\n                \"вт\",\r\n                \"ср\",\r\n                \"четв\",\r\n                \"пет\",\r\n                \"съб\"\r\n            ],\r\n            months: [\r\n                \"януари\",\r\n                \"февруари\",\r\n                \"март\",\r\n                \"април\",\r\n                \"май\",\r\n                \"юни\",\r\n                \"юли\",\r\n                \"август\",\r\n                \"септември\",\r\n                \"октомври\",\r\n                \"ноември\",\r\n                \"декември\"\r\n            ]\r\n        },\r\n        ca: { // Catalan\r\n            today: \"avui\",\r\n            days: [\r\n                \"dg.\",\r\n                \"dl.\",\r\n                \"dt.\",\r\n                \"dc.\",\r\n                \"dj.\",\r\n                \"dv.\",\r\n                \"ds.\"\r\n            ],\r\n            months: [\r\n                \"gener\",\r\n                \"febrer\",\r\n                \"març\",\r\n                \"abril\",\r\n                \"maig\",\r\n                \"juny\",\r\n                \"juliol\",\r\n                \"agost\",\r\n                \"setembre\",\r\n                \"octubre\",\r\n                \"novembre\",\r\n                \"desembre\"\r\n            ]\r\n        },\r\n        cs: { // Czech\r\n            today: \"dnes\",\r\n            days: [\r\n                \"ne\",\r\n                \"po\",\r\n                \"út\",\r\n                \"st\",\r\n                \"čt\",\r\n                \"pá\",\r\n                \"so\"\r\n            ],\r\n            months: [\r\n                \"leden\",\r\n                \"únor\",\r\n                \"březen\",\r\n                \"duben\",\r\n                \"květen\",\r\n                \"červen\",\r\n                \"červenec\",\r\n                \"srpen\",\r\n                \"září\",\r\n                \"říjen\",\r\n                \"listopad\",\r\n                \"prosinec\"\r\n            ]\r\n        },\r\n        da: { // Danish\r\n            today: \"i dag\",\r\n            days: [\r\n                \"sø\",\r\n                \"ma\",\r\n                \"ti\",\r\n                \"on\",\r\n                \"to\",\r\n                \"fr\",\r\n                \"lø\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"marts\",\r\n                \"april\",\r\n                \"maj\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        de: { // German\r\n            today: \"heute\",\r\n            days: [\r\n                \"So\",\r\n                \"Mo\",\r\n                \"Di\",\r\n                \"Mi\",\r\n                \"Do\",\r\n                \"Fr\",\r\n                \"Sa\"\r\n            ],\r\n            months: [\r\n                \"Januar\",\r\n                \"Februar\",\r\n                \"März\",\r\n                \"April\",\r\n                \"Mai\",\r\n                \"Juni\",\r\n                \"Juli\",\r\n                \"August\",\r\n                \"September\",\r\n                \"Oktober\",\r\n                \"November\",\r\n                \"Dezember\"\r\n            ]\r\n        },\r\n        el: { // Greek\r\n            today: \"σήμερα\",\r\n            days: [\r\n                \"Κυρ\",\r\n                \"Δευ\",\r\n                \"Τρι\",\r\n                \"Τετ\",\r\n                \"Πεμ\",\r\n                \"Παρ\",\r\n                \"Σαβ\"\r\n            ],\r\n            months: [\r\n                \"Ιανουάριος\",\r\n                \"Φεβρουάριος\",\r\n                \"Μάρτιος\",\r\n                \"Απρίλιος\",\r\n                \"Μάιος\",\r\n                \"Ιούνιος\",\r\n                \"Ιούλιος\",\r\n                \"Αύγουστος\",\r\n                \"Σεπτέμβριος\",\r\n                \"Οκτώβριος\",\r\n                \"Νοέμβριος\",\r\n                \"Δεκέμβριος\"\r\n            ]\r\n        },\r\n        en: { // English\r\n            today: \"today\",\r\n            days: [\r\n                \"Sun\",\r\n                \"Mon\",\r\n                \"Tue\",\r\n                \"Wed\",\r\n                \"Thu\",\r\n                \"Fri\",\r\n                \"Sat\"\r\n            ],\r\n            months: [\r\n                \"January\",\r\n                \"February\",\r\n                \"March\",\r\n                \"April\",\r\n                \"May\",\r\n                \"June\",\r\n                \"July\",\r\n                \"August\",\r\n                \"September\",\r\n                \"October\",\r\n                \"November\",\r\n                \"December\"\r\n            ]\r\n        },\r\n        es: { // Spanish\r\n            today: \"hoy\",\r\n            days: [\r\n                \"dom\",\r\n                \"lun\",\r\n                \"mar\",\r\n                \"mié\",\r\n                \"jue\",\r\n                \"vie\",\r\n                \"sáb\"\r\n            ],\r\n            months: [\r\n                \"enero\",\r\n                \"febrero\",\r\n                \"marzo\",\r\n                \"abril\",\r\n                \"mayo\",\r\n                \"junio\",\r\n                \"julio\",\r\n                \"agosto\",\r\n                \"septiembre\",\r\n                \"octubre\",\r\n                \"noviembre\",\r\n                \"diciembre\"\r\n            ]\r\n        },\r\n        fi: { // Finnish\r\n            today: \"tänään\",\r\n            days: [\r\n                \"su\",\r\n                \"ma\",\r\n                \"ti\",\r\n                \"ke\",\r\n                \"to\",\r\n                \"pe\",\r\n                \"la\"\r\n            ],\r\n            months: [\r\n                \"tammikuu\",\r\n                \"helmikuu\",\r\n                \"maaliskuu\",\r\n                \"huhtikuu\",\r\n                \"toukokuu\",\r\n                \"kesäkuu\",\r\n                \"heinäkuu\",\r\n                \"elokuu\",\r\n                \"syyskuu\",\r\n                \"lokakuu\",\r\n                \"marraskuu\",\r\n                \"joulukuu\"\r\n            ]\r\n        },\r\n        fr: { // French\r\n            today: \"aujourd'hui\",\r\n            days: [\r\n                \"dim.\",\r\n                \"lun.\",\r\n                \"mar.\",\r\n                \"mer.\",\r\n                \"jeu.\",\r\n                \"ven.\",\r\n                \"sam.\"\r\n            ],\r\n            months: [\r\n                \"janvier\",\r\n                \"février\",\r\n                \"mars\",\r\n                \"avril\",\r\n                \"mai\",\r\n                \"juin\",\r\n                \"juillet\",\r\n                \"août\",\r\n                \"septembre\",\r\n                \"octobre\",\r\n                \"novembre\",\r\n                \"décembre\"\r\n            ]\r\n        },\r\n        he: { // Hebrew\r\n            today: \"היום\",\r\n            days: [\r\n                \"יום א\",\r\n                \"יום ב\",\r\n                \"יום ג\",\r\n                \"יום ד\",\r\n                \"יום ה\",\r\n                \"יום ו\",\r\n                \"שבת\"\r\n            ],\r\n            months: [\r\n                \"ינואר\",\r\n                \"פברואר\",\r\n                \"מרץ\",\r\n                \"אפריל\",\r\n                \"מאי\",\r\n                \"יוני\",\r\n                \"יולי\",\r\n                \"אוגוסט\",\r\n                \"ספטמבר\",\r\n                \"אוקטובר\",\r\n                \"נובמבר\",\r\n                \"דצמבר\"\r\n            ]\r\n        },\r\n        hu: { // Hungarian\r\n            today: \"Ma\",\r\n            days: [\r\n                \"V\",\r\n                \"H\",\r\n                \"K\",\r\n                \"Sze\",\r\n                \"Cs\",\r\n                \"P\",\r\n                \"Szo\"\r\n            ],\r\n            months: [\r\n                \"január\",\r\n                \"február\",\r\n                \"március\",\r\n                \"április\",\r\n                \"május\",\r\n                \"június\",\r\n                \"július\",\r\n                \"augusztus\",\r\n                \"szeptember\",\r\n                \"október\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        is: { // Icelandic\r\n            today: \"Í dag\",\r\n            days: [\r\n                \"sun.\",\r\n                \"mán.\",\r\n                \"þri.\",\r\n                \"mið.\",\r\n                \"fim.\",\r\n                \"fös.\",\r\n                \"lau.\"\r\n            ],\r\n            months: [\r\n                \"janúar\",\r\n                \"febrúar\",\r\n                \"mars\",\r\n                \"apríl\",\r\n                \"maí\",\r\n                \"júní\",\r\n                \"júlí\",\r\n                \"ágúst\",\r\n                \"september\",\r\n                \"október\",\r\n                \"nóvember\",\r\n                \"desember\"\r\n            ]\r\n        },\r\n        it: { // Italian\r\n            today: \"oggi\",\r\n            days: [\r\n                \"dom\",\r\n                \"lun\",\r\n                \"mar\",\r\n                \"mer\",\r\n                \"gio\",\r\n                \"ven\",\r\n                \"sab\"\r\n            ],\r\n            months: [\r\n                \"gennaio\",\r\n                \"febbraio\",\r\n                \"marzo\",\r\n                \"aprile\",\r\n                \"maggio\",\r\n                \"giugno\",\r\n                \"luglio\",\r\n                \"agosto\",\r\n                \"settembre\",\r\n                \"ottobre\",\r\n                \"novembre\",\r\n                \"dicembre\"\r\n            ]\r\n        },\r\n        ja: { // Japanese\r\n            today: \"今日\",\r\n            days: [\r\n                \"日\",\r\n                \"月\",\r\n                \"火\",\r\n                \"水\",\r\n                \"木\",\r\n                \"金\",\r\n                \"土\"\r\n            ],\r\n            months: [\r\n                \"1月\",\r\n                \"2月\",\r\n                \"3月\",\r\n                \"4月\",\r\n                \"5月\",\r\n                \"6月\",\r\n                \"7月\",\r\n                \"8月\",\r\n                \"9月\",\r\n                \"10月\",\r\n                \"11月\",\r\n                \"12月\"\r\n            ]\r\n        },\r\n        ko: { // Korean\r\n            today: \"오늘\",\r\n            days: [\r\n                \"일\",\r\n                \"월\",\r\n                \"화\",\r\n                \"수\",\r\n                \"목\",\r\n                \"금\",\r\n                \"토\"\r\n            ],\r\n            months: [\r\n                \"1월\",\r\n                \"2월\",\r\n                \"3월\",\r\n                \"4월\",\r\n                \"5월\",\r\n                \"6월\",\r\n                \"7월\",\r\n                \"8월\",\r\n                \"9월\",\r\n                \"10월\",\r\n                \"11월\",\r\n                \"12월\"\r\n            ]\r\n        },\r\n        nl: { // Dutch\r\n            today: \"vandaag\",\r\n            days: [\r\n                \"zo\",\r\n                \"ma\",\r\n                \"di\",\r\n                \"wo\",\r\n                \"do\",\r\n                \"vr\",\r\n                \"za\"\r\n            ],\r\n            months: [\r\n                \"januari\",\r\n                \"februari\",\r\n                \"maart\",\r\n                \"april\",\r\n                \"mei\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"augustus\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        no: { // Norwegian\r\n            today: \"i dag\",\r\n            days: [\r\n                \"sø\",\r\n                \"ma\",\r\n                \"ti\",\r\n                \"on\",\r\n                \"to\",\r\n                \"fr\",\r\n                \"lø\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mars\",\r\n                \"april\",\r\n                \"mai\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"desember\"\r\n            ]\r\n        },\r\n        pl: { // Polish\r\n            today: \"dzisiaj\",\r\n            days: [\r\n                \"N\",\r\n                \"Pn\",\r\n                \"Wt\",\r\n                \"Śr\",\r\n                \"Cz\",\r\n                \"Pt\",\r\n                \"So\"\r\n            ],\r\n            months: [\r\n                \"styczeń\",\r\n                \"luty\",\r\n                \"marzec\",\r\n                \"kwiecień\",\r\n                \"maj\",\r\n                \"czerwiec\",\r\n                \"lipiec\",\r\n                \"sierpień\",\r\n                \"wrzesień\",\r\n                \"październik\",\r\n                \"listopad\",\r\n                \"grudzień\"\r\n            ]\r\n        },\r\n        pt: { // Portuguese\r\n            today: \"hoje\",\r\n            days: [\r\n                \"dom\",\r\n                \"seg\",\r\n                \"ter\",\r\n                \"qua\",\r\n                \"qui\",\r\n                \"sex\",\r\n                \"sáb\"\r\n            ],\r\n            months: [\r\n                \"janeiro\",\r\n                \"fevereiro\",\r\n                \"março\",\r\n                \"abril\",\r\n                \"maio\",\r\n                \"junho\",\r\n                \"julho\",\r\n                \"agosto\",\r\n                \"setembro\",\r\n                \"outubro\",\r\n                \"novembro\",\r\n                \"dezembro\"\r\n            ]\r\n        },\r\n        rm: { // Romansh\r\n            today: \"oz\",\r\n            days: [\r\n                \"du\",\r\n                \"gli\",\r\n                \"ma\",\r\n                \"me\",\r\n                \"gie\",\r\n                \"ve\",\r\n                \"so\"\r\n            ],\r\n            months: [\r\n                \"schaner\",\r\n                \"favrer\",\r\n                \"mars\",\r\n                \"avrigl\",\r\n                \"matg\",\r\n                \"zercladur\",\r\n                \"fanadur\",\r\n                \"avust\",\r\n                \"settember\",\r\n                \"october\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        ro: { // Romanian\r\n            today: \"astăzi\",\r\n            days: [\r\n                \"D\",\r\n                \"L\",\r\n                \"Ma\",\r\n                \"Mi\",\r\n                \"J\",\r\n                \"V\",\r\n                \"S\"\r\n            ],\r\n            months: [\r\n                \"ianuarie\",\r\n                \"februarie\",\r\n                \"martie\",\r\n                \"aprilie\",\r\n                \"mai\",\r\n                \"iunie\",\r\n                \"iulie\",\r\n                \"august\",\r\n                \"septembrie\",\r\n                \"octombrie\",\r\n                \"noiembrie\",\r\n                \"decembrie\"\r\n            ]\r\n        },\r\n        ru: { // Russian\r\n            today: \"Cегодня\",\r\n            days: [\r\n                \"Вс\",\r\n                \"Пн\",\r\n                \"Вт\",\r\n                \"Ср\",\r\n                \"Чт\",\r\n                \"Пт\",\r\n                \"Сб\"\r\n            ],\r\n            months: [\r\n                \"Январь\",\r\n                \"Февраль\",\r\n                \"Март\",\r\n                \"Апрель\",\r\n                \"Май\",\r\n                \"Июнь\",\r\n                \"Июль\",\r\n                \"Август\",\r\n                \"Сентябрь\",\r\n                \"Октябрь\",\r\n                \"Ноябрь\",\r\n                \"Декабрь\"\r\n            ]\r\n        },\r\n        hr: { // Croatian\r\n            today: \"danas\",\r\n            days: [\r\n                \"ned\",\r\n                \"pon\",\r\n                \"uto\",\r\n                \"sri\",\r\n                \"čet\",\r\n                \"pet\",\r\n                \"sub\"\r\n            ],\r\n            months: [\r\n                \"siječanj\",\r\n                \"veljača\",\r\n                \"ožujak\",\r\n                \"travanj\",\r\n                \"svibanj\",\r\n                \"lipanj\",\r\n                \"srpanj\",\r\n                \"kolovoz\",\r\n                \"rujan\",\r\n                \"listopad\",\r\n                \"studeni\",\r\n                \"prosinac\"\r\n            ]\r\n        },\r\n        sk: { // Slovak\r\n            today: \"dnes\",\r\n            days: [\r\n                \"ne\",\r\n                \"po\",\r\n                \"ut\",\r\n                \"st\",\r\n                \"št\",\r\n                \"pi\",\r\n                \"so\"\r\n            ],\r\n            months: [\r\n                \"január\",\r\n                \"február\",\r\n                \"marec\",\r\n                \"apríl\",\r\n                \"máj\",\r\n                \"jún\",\r\n                \"júl\",\r\n                \"august\",\r\n                \"september\",\r\n                \"október\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        sq: { // Albanian\r\n            today: \"sot\",\r\n            days: [\r\n                \"Die\",\r\n                \"Hën\",\r\n                \"Mar\",\r\n                \"Mër\",\r\n                \"Enj\",\r\n                \"Pre\",\r\n                \"Sht\"\r\n            ],\r\n            months: [\r\n                \"janar\",\r\n                \"shkurt\",\r\n                \"mars\",\r\n                \"prill\",\r\n                \"maj\",\r\n                \"qershor\",\r\n                \"korrik\",\r\n                \"gusht\",\r\n                \"shtator\",\r\n                \"tetor\",\r\n                \"nëntor\",\r\n                \"dhjetor\"\r\n            ]\r\n        },\r\n        sv: { // Swedish\r\n            today: \"i dag\",\r\n            days: [\r\n                \"sö\",\r\n                \"må\",\r\n                \"ti\",\r\n                \"on\",\r\n                \"to\",\r\n                \"fr\",\r\n                \"lö\"\r\n            ],\r\n            months: [\r\n                \"januari\",\r\n                \"februari\",\r\n                \"mars\",\r\n                \"april\",\r\n                \"maj\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"augusti\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        th: { // Thai\r\n            today: \"ในวันนี้\",\r\n            days: [\r\n                \"อา.\",\r\n                \"จ.\",\r\n                \"อ.\",\r\n                \"พ.\",\r\n                \"พฤ.\",\r\n                \"ศ.\",\r\n                \"ส.\"\r\n            ],\r\n            months: [\r\n                \"มกราคม\",\r\n                \"กุมภาพันธ์\",\r\n                \"มีนาคม\",\r\n                \"เมษายน\",\r\n                \"พฤษภาคม\",\r\n                \"มิถุนายน\",\r\n                \"กรกฎาคม\",\r\n                \"สิงหาคม\",\r\n                \"กันยายน\",\r\n                \"ตุลาคม\",\r\n                \"พฤศจิกายน\",\r\n                \"ธันวาคม\"\r\n            ]\r\n        },\r\n        tr: { // Turkish\r\n            today: \"bugün\",\r\n            days: [\r\n                \"Paz\",\r\n                \"Pzt\",\r\n                \"Sal\",\r\n                \"Çar\",\r\n                \"Per\",\r\n                \"Cum\",\r\n                \"Cmt\"\r\n            ],\r\n            months: [\r\n                \"Ocak\",\r\n                \"Şubat\",\r\n                \"Mart\",\r\n                \"Nisan\",\r\n                \"Mayıs\",\r\n                \"Haziran\",\r\n                \"Temmuz\",\r\n                \"Ağustos\",\r\n                \"Eylül\",\r\n                \"Ekim\",\r\n                \"Kasım\",\r\n                \"Aralık\"\r\n            ]\r\n        },\r\n        ur: { // Urdu\r\n            today: \"آج\",\r\n            days: [\r\n                \"اتوار\",\r\n                \"پير\",\r\n                \"منگل\",\r\n                \"بدھ\",\r\n                \"جمعرات\",\r\n                \"جمعه\",\r\n                \"هفته\"\r\n            ],\r\n            months: [\r\n                \"جنوری\",\r\n                \"فروری\",\r\n                \"مارچ\",\r\n                \"اپریل\",\r\n                \"مئی\",\r\n                \"جون\",\r\n                \"جولائی\",\r\n                \"اگست\",\r\n                \"ستمبر\",\r\n                \"اکتوبر\",\r\n                \"نومبر\",\r\n                \"دسمبر\"\r\n            ]\r\n        },\r\n        id: { // Indonesian\r\n            today: \"hari ini\",\r\n            days: [\r\n                \"Minggu\",\r\n                \"Sen\",\r\n                \"Sel\",\r\n                \"Rabu\",\r\n                \"Kamis\",\r\n                \"Jumat\",\r\n                \"Sabtu\"\r\n            ],\r\n            months: [\r\n                \"Januari\",\r\n                \"Februari\",\r\n                \"Maret\",\r\n                \"April\",\r\n                \"Mei\",\r\n                \"Juni\",\r\n                \"Juli\",\r\n                \"Agustus\",\r\n                \"September\",\r\n                \"Oktober\",\r\n                \"Nopember\",\r\n                \"Desember\"\r\n            ]\r\n        },\r\n        uk: { // Ukrainian\r\n            today: \"сьогодні\",\r\n            days: [\r\n                \"Нд\",\r\n                \"Пн\",\r\n                \"Вт\",\r\n                \"Ср\",\r\n                \"Чт\",\r\n                \"Пт\",\r\n                \"Сб\"\r\n            ],\r\n            months: [\r\n                \"Січень\",\r\n                \"Лютий\",\r\n                \"Березень\",\r\n                \"Квітень\",\r\n                \"Травень\",\r\n                \"Червень\",\r\n                \"Липень\",\r\n                \"Серпень\",\r\n                \"Вересень\",\r\n                \"Жовтень\",\r\n                \"Листопад\",\r\n                \"Грудень\"\r\n            ]\r\n        },\r\n        be: { // Belarusian\r\n            today: \"сёння\",\r\n            days: [\r\n                \"нд\",\r\n                \"пн\",\r\n                \"аў\",\r\n                \"ср\",\r\n                \"чц\",\r\n                \"пт\",\r\n                \"сб\"\r\n            ],\r\n            months: [\r\n                \"Студзень\",\r\n                \"Люты\",\r\n                \"Сакавік\",\r\n                \"Красавік\",\r\n                \"Май\",\r\n                \"Чэрвень\",\r\n                \"Ліпень\",\r\n                \"Жнівень\",\r\n                \"Верасень\",\r\n                \"Кастрычнік\",\r\n                \"Лістапад\",\r\n                \"Снежань\"\r\n            ]\r\n        },\r\n        sl: { // Slovenian\r\n            today: \"danes\",\r\n            days: [\r\n                \"ned\",\r\n                \"pon\",\r\n                \"tor\",\r\n                \"sre\",\r\n                \"čet\",\r\n                \"pet\",\r\n                \"sob\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"marec\",\r\n                \"april\",\r\n                \"maj\",\r\n                \"junij\",\r\n                \"julij\",\r\n                \"avgust\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        et: { // Estonian\r\n            today: \"täna\",\r\n            days: [\r\n                \"P\",\r\n                \"E\",\r\n                \"T\",\r\n                \"K\",\r\n                \"N\",\r\n                \"R\",\r\n                \"L\"\r\n            ],\r\n            months: [\r\n                \"jaanuar\",\r\n                \"veebruar\",\r\n                \"märts\",\r\n                \"aprill\",\r\n                \"mai\",\r\n                \"juuni\",\r\n                \"juuli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktoober\",\r\n                \"november\",\r\n                \"detsember\"\r\n            ]\r\n        },\r\n        lv: { // Latvian\r\n            today: \"šodien\",\r\n            days: [\r\n                \"sv\",\r\n                \"pr\",\r\n                \"ot\",\r\n                \"tr\",\r\n                \"ce\",\r\n                \"pk\",\r\n                \"se\"\r\n            ],\r\n            months: [\r\n                \"janvāris\",\r\n                \"februāris\",\r\n                \"marts\",\r\n                \"aprīlis\",\r\n                \"maijs\",\r\n                \"jūnijs\",\r\n                \"jūlijs\",\r\n                \"augusts\",\r\n                \"septembris\",\r\n                \"oktobris\",\r\n                \"novembris\",\r\n                \"decembris\"\r\n            ]\r\n        },\r\n        lt: { // Lithuanian\r\n            today: \"šiandien\",\r\n            days: [\r\n                \"Sk\",\r\n                \"Pr\",\r\n                \"An\",\r\n                \"Tr\",\r\n                \"Kt\",\r\n                \"Pn\",\r\n                \"Št\"\r\n            ],\r\n            months: [\r\n                \"sausis\",\r\n                \"vasaris\",\r\n                \"kovas\",\r\n                \"balandis\",\r\n                \"gegužė\",\r\n                \"birželis\",\r\n                \"liepa\",\r\n                \"rugpjūtis\",\r\n                \"rugsėjis\",\r\n                \"spalis\",\r\n                \"lapkritis\",\r\n                \"gruodis\"\r\n            ]\r\n        },\r\n        tg: { // Tajik\r\n            today: \"имрӯз\",\r\n            days: [\r\n                \"Яш\",\r\n                \"Дш\",\r\n                \"Сш\",\r\n                \"Чш\",\r\n                \"Пш\",\r\n                \"Ҷм\",\r\n                \"Шн\"\r\n            ],\r\n            months: [\r\n                \"Январ\",\r\n                \"Феврал\",\r\n                \"Март\",\r\n                \"Апрел\",\r\n                \"Май\",\r\n                \"Июн\",\r\n                \"Июл\",\r\n                \"Август\",\r\n                \"Сентябр\",\r\n                \"Октябр\",\r\n                \"Ноябр\",\r\n                \"Декабр\"\r\n            ]\r\n        },\r\n        fa: { // Persian\r\n            today: \"امروز\",\r\n            days: [\r\n                \"الأحد\",\r\n                \"الإثنين\",\r\n                \"الثلاثاء\",\r\n                \"الأربعاء\",\r\n                \"الخميس\",\r\n                \"الجمعة\",\r\n                \"السبت\"\r\n            ],\r\n            months: [\r\n                \"جانفييه\",\r\n                \"فيفرييه\",\r\n                \"مارس\",\r\n                \"أفريل\",\r\n                \"مي\",\r\n                \"جوان\",\r\n                \"جوييه\",\r\n                \"أوت\",\r\n                \"سبتمبر\",\r\n                \"اكتوبر\",\r\n                \"نوفمبر\",\r\n                \"ديسمبر\"\r\n            ]\r\n        },\r\n        vi: { // Vietnamese\r\n            today: \"hôm nay\",\r\n            days: [\r\n                \"CN\",\r\n                \"Hai\",\r\n                \"Ba\",\r\n                \"Tư\",\r\n                \"Năm\",\r\n                \"Sáu\",\r\n                \"Bảy\"\r\n            ],\r\n            months: [\r\n                \"Tháng Giêng\",\r\n                \"Tháng Hai\",\r\n                \"Tháng Ba\",\r\n                \"Tháng Tư\",\r\n                \"Tháng Năm\",\r\n                \"Tháng Sáu\",\r\n                \"Tháng Bảy\",\r\n                \"Tháng Tám\",\r\n                \"Tháng Chín\",\r\n                \"Tháng Mười\",\r\n                \"Tháng Mười Một\",\r\n                \"Tháng Mười Hai\"\r\n            ]\r\n        },\r\n        hy: { // Armenian\r\n            today: \"այսօր\",\r\n            days: [\r\n                \"Կիր\",\r\n                \"Երկ\",\r\n                \"Երք\",\r\n                \"Չրք\",\r\n                \"Հնգ\",\r\n                \"ՈՒր\",\r\n                \"Շբթ\"\r\n            ],\r\n            months: [\r\n                \"Հունվար\",\r\n                \"Փետրվար\",\r\n                \"Մարտ\",\r\n                \"Ապրիլ\",\r\n                \"Մայիս\",\r\n                \"Հունիս\",\r\n                \"Հուլիս\",\r\n                \"Օգոստոս\",\r\n                \"Սեպտեմբեր\",\r\n                \"Հոկտեմբեր\",\r\n                \"Նոյեմբեր\",\r\n                \"Դեկտեմբեր\"\r\n            ]\r\n        },\r\n        az: { // Azeri\r\n            today: \"bugün\",\r\n            days: [\r\n                \"B\",\r\n                \"Be\",\r\n                \"Ça\",\r\n                \"Ç\",\r\n                \"Ca\",\r\n                \"C\",\r\n                \"Ş\"\r\n            ],\r\n            months: [\r\n                \"Yanvar\",\r\n                \"Fevral\",\r\n                \"Mart\",\r\n                \"Aprel\",\r\n                \"May\",\r\n                \"İyun\",\r\n                \"İyul\",\r\n                \"Avgust\",\r\n                \"Sentyabr\",\r\n                \"Oktyabr\",\r\n                \"Noyabr\",\r\n                \"Dekabr\"\r\n            ]\r\n        },\r\n        eu: { // Basque\r\n            today: \"gaur\",\r\n            days: [\r\n                \"ig.\",\r\n                \"al.\",\r\n                \"as.\",\r\n                \"az.\",\r\n                \"og.\",\r\n                \"or.\",\r\n                \"lr.\"\r\n            ],\r\n            months: [\r\n                \"urtarrila\",\r\n                \"otsaila\",\r\n                \"martxoa\",\r\n                \"apirila\",\r\n                \"maiatza\",\r\n                \"ekaina\",\r\n                \"uztaila\",\r\n                \"abuztua\",\r\n                \"iraila\",\r\n                \"urria\",\r\n                \"azaroa\",\r\n                \"abendua\"\r\n            ]\r\n        },\r\n        hsb: { // Upper Sorbian\r\n            today: \"dźensa\",\r\n            days: [\r\n                \"nje\",\r\n                \"pón\",\r\n                \"wut\",\r\n                \"srj\",\r\n                \"štw\",\r\n                \"pja\",\r\n                \"sob\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"měrc\",\r\n                \"apryl\",\r\n                \"meja\",\r\n                \"junij\",\r\n                \"julij\",\r\n                \"awgust\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"nowember\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        mk: { // Macedonian (FYROM)\r\n            today: \"денес\",\r\n            days: [\r\n                \"нед\",\r\n                \"пон\",\r\n                \"втр\",\r\n                \"срд\",\r\n                \"чет\",\r\n                \"пет\",\r\n                \"саб\"\r\n            ],\r\n            months: [\r\n                \"јануари\",\r\n                \"февруари\",\r\n                \"март\",\r\n                \"април\",\r\n                \"мај\",\r\n                \"јуни\",\r\n                \"јули\",\r\n                \"август\",\r\n                \"септември\",\r\n                \"октомври\",\r\n                \"ноември\",\r\n                \"декември\"\r\n            ]\r\n        },\r\n        tn: { // Setswana\r\n            today: \"Gompieno\",\r\n            days: [\r\n                \"Ltp.\",\r\n                \"Mos.\",\r\n                \"Lbd.\",\r\n                \"Lbr.\",\r\n                \"Lbn.\",\r\n                \"Lbt.\",\r\n                \"Lmt.\"\r\n            ],\r\n            months: [\r\n                \"Ferikgong\",\r\n                \"Tlhakole\",\r\n                \"Mopitloe\",\r\n                \"Moranang\",\r\n                \"Motsheganong\",\r\n                \"Seetebosigo\",\r\n                \"Phukwi\",\r\n                \"Phatwe\",\r\n                \"Lwetse\",\r\n                \"Diphalane\",\r\n                \"Ngwanatsele\",\r\n                \"Sedimothole\"\r\n            ]\r\n        },\r\n        xh: { // isiXhosa\r\n            today: \"namhlanje\",\r\n            days: [\r\n                \"Sun\",\r\n                \"Mon\",\r\n                \"Tue\",\r\n                \"Wed\",\r\n                \"Thu\",\r\n                \"Fri\",\r\n                \"Sat\"\r\n            ],\r\n            months: [\r\n                \"Mqungu\",\r\n                \"Mdumba\",\r\n                \"Kwindla\",\r\n                \"Tshazimpuzi\",\r\n                \"Canzibe\",\r\n                \"Silimela\",\r\n                \"Khala\",\r\n                \"Thupha\",\r\n                \"Msintsi\",\r\n                \"Dwarha\",\r\n                \"Nkanga\",\r\n                \"Mnga\"\r\n            ]\r\n        },\r\n        zu: { // isiZulu\r\n            today: \"namhlanje\",\r\n            days: [\r\n                \"Son.\",\r\n                \"Mso.\",\r\n                \"Bi.\",\r\n                \"Tha.\",\r\n                \"Ne.\",\r\n                \"Hla.\",\r\n                \"Mgq.\"\r\n            ],\r\n            months: [\r\n                \"uMasingana\",\r\n                \"uNhlolanja\",\r\n                \"uNdasa\",\r\n                \"uMbaso\",\r\n                \"uNhlaba\",\r\n                \"uNhlangulana\",\r\n                \"uNtulikazi\",\r\n                \"uNcwaba\",\r\n                \"uMandulo\",\r\n                \"uMfumfu\",\r\n                \"uLwezi\",\r\n                \"uZibandlela\"\r\n            ]\r\n        },\r\n        af: { // Afrikaans\r\n            today: \"vandag\",\r\n            days: [\r\n                \"Son\",\r\n                \"Maan\",\r\n                \"Dins\",\r\n                \"Woen\",\r\n                \"Dond\",\r\n                \"Vry\",\r\n                \"Sat\"\r\n            ],\r\n            months: [\r\n                \"Januarie\",\r\n                \"Februarie\",\r\n                \"Maart\",\r\n                \"April\",\r\n                \"Mei\",\r\n                \"Junie\",\r\n                \"Julie\",\r\n                \"Augustus\",\r\n                \"September\",\r\n                \"Oktober\",\r\n                \"November\",\r\n                \"Desember\"\r\n            ]\r\n        },\r\n        ka: { // Georgian\r\n            today: \"დღეს\",\r\n            days: [\r\n                \"კვირა\",\r\n                \"ორშაბათი\",\r\n                \"სამშაბათი\",\r\n                \"ოთხშაბათი\",\r\n                \"ხუთშაბათი\",\r\n                \"პარასკევი\",\r\n                \"შაბათი\"\r\n            ],\r\n            months: [\r\n                \"იანვარი\",\r\n                \"თებერვალი\",\r\n                \"მარტი\",\r\n                \"აპრილი\",\r\n                \"მაისი\",\r\n                \"ივნისი\",\r\n                \"ივლისი\",\r\n                \"აგვისტო\",\r\n                \"სექტემბერი\",\r\n                \"ოქტომბერი\",\r\n                \"ნოემბერი\",\r\n                \"დეკემბერი\"\r\n            ]\r\n        },\r\n        fo: { // Faroese\r\n            today: \"í dag\",\r\n            days: [\r\n                \"sun\",\r\n                \"mán\",\r\n                \"týs\",\r\n                \"mik\",\r\n                \"hós\",\r\n                \"frí\",\r\n                \"leyg\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mars\",\r\n                \"apríl\",\r\n                \"mai\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"desember\"\r\n            ]\r\n        },\r\n        hi: { // Hindi\r\n            today: \"आज\",\r\n            days: [\r\n                \"रवि.\",\r\n                \"सोम.\",\r\n                \"मंगल.\",\r\n                \"बुध.\",\r\n                \"गुरु.\",\r\n                \"शुक्र.\",\r\n                \"शनि.\"\r\n            ],\r\n            months: [\r\n                \"जनवरी\",\r\n                \"फरवरी\",\r\n                \"मार्च\",\r\n                \"अप्रैल\",\r\n                \"मई\",\r\n                \"जून\",\r\n                \"जुलाई\",\r\n                \"अगस्त\",\r\n                \"सितम्बर\",\r\n                \"अक्तूबर\",\r\n                \"नवम्बर\",\r\n                \"दिसम्बर\"\r\n            ]\r\n        },\r\n        mt: { // Maltese\r\n            today: \"illum\",\r\n            days: [\r\n                \"Ħad\",\r\n                \"Tne\",\r\n                \"Tli\",\r\n                \"Erb\",\r\n                \"Ħam\",\r\n                \"Ġim\",\r\n                \"Sib\"\r\n            ],\r\n            months: [\r\n                \"Jannar\",\r\n                \"Frar\",\r\n                \"Marzu\",\r\n                \"April\",\r\n                \"Mejju\",\r\n                \"Ġunju\",\r\n                \"Lulju\",\r\n                \"Awissu\",\r\n                \"Settembru\",\r\n                \"Ottubru\",\r\n                \"Novembru\",\r\n                \"Diċembru\"\r\n            ]\r\n        },\r\n        se: { // Sami (Northern)\r\n            today: \"odne\",\r\n            days: [\r\n                \"sotn\",\r\n                \"vuos\",\r\n                \"maŋ\",\r\n                \"gask\",\r\n                \"duor\",\r\n                \"bear\",\r\n                \"láv\"\r\n            ],\r\n            months: [\r\n                \"ođđajagemánnu\",\r\n                \"guovvamánnu\",\r\n                \"njukčamánnu\",\r\n                \"cuoŋománnu\",\r\n                \"miessemánnu\",\r\n                \"geassemánnu\",\r\n                \"suoidnemánnu\",\r\n                \"borgemánnu\",\r\n                \"čakčamánnu\",\r\n                \"golggotmánnu\",\r\n                \"skábmamánnu\",\r\n                \"juovlamánnu\"\r\n            ]\r\n        },\r\n        ga: { // Irish\r\n            today: \"inniu\",\r\n            days: [\r\n                \"Domh\",\r\n                \"Luan\",\r\n                \"Máir\",\r\n                \"Céad\",\r\n                \"Déar\",\r\n                \"Aoi\",\r\n                \"Sath\"\r\n            ],\r\n            months: [\r\n                \"Eanáir\",\r\n                \"Feabhra\",\r\n                \"Márta\",\r\n                \"Aibreán\",\r\n                \"Bealtaine\",\r\n                \"Meitheamh\",\r\n                \"Iúil\",\r\n                \"Lúnasa\",\r\n                \"Meán Fómhair\",\r\n                \"Deireadh Fómhair\",\r\n                \"Samhain\",\r\n                \"Nollaig\"\r\n            ]\r\n        },\r\n        ms: { // Malay\r\n            today: \"hari ini\",\r\n            days: [\r\n                \"Ahad\",\r\n                \"Isnin\",\r\n                \"Sel\",\r\n                \"Rabu\",\r\n                \"Khamis\",\r\n                \"Jumaat\",\r\n                \"Sabtu\"\r\n            ],\r\n            months: [\r\n                \"Januari\",\r\n                \"Februari\",\r\n                \"Mac\",\r\n                \"April\",\r\n                \"Mei\",\r\n                \"Jun\",\r\n                \"Julai\",\r\n                \"Ogos\",\r\n                \"September\",\r\n                \"Oktober\",\r\n                \"November\",\r\n                \"Disember\"\r\n            ]\r\n        },\r\n        kk: { // Kazakh\r\n            today: \"бүгін\",\r\n            days: [\r\n                \"Жк\",\r\n                \"Дс\",\r\n                \"Сс\",\r\n                \"Ср\",\r\n                \"Бс\",\r\n                \"Жм\",\r\n                \"Сн\"\r\n            ],\r\n            months: [\r\n                \"қаңтар\",\r\n                \"ақпан\",\r\n                \"наурыз\",\r\n                \"сәуір\",\r\n                \"мамыр\",\r\n                \"маусым\",\r\n                \"шілде\",\r\n                \"тамыз\",\r\n                \"қыркүйек\",\r\n                \"қазан\",\r\n                \"қараша\",\r\n                \"желтоқсан\"\r\n            ]\r\n        },\r\n        ky: { // Kyrgyz\r\n            today: \"бүгүн\",\r\n            days: [\r\n                \"Жш\",\r\n                \"Дш\",\r\n                \"Шш\",\r\n                \"Шр\",\r\n                \"Бш\",\r\n                \"Жм\",\r\n                \"Иш\"\r\n            ],\r\n            months: [\r\n                \"Январь\",\r\n                \"Февраль\",\r\n                \"Март\",\r\n                \"Апрель\",\r\n                \"Май\",\r\n                \"Июнь\",\r\n                \"Июль\",\r\n                \"Август\",\r\n                \"Сентябрь\",\r\n                \"Октябрь\",\r\n                \"Ноябрь\",\r\n                \"Декабрь\"\r\n            ]\r\n        },\r\n        sw: { // Kiswahili\r\n            today: \"leo\",\r\n            days: [\r\n                \"Jumap.\",\r\n                \"Jumat.\",\r\n                \"Juman.\",\r\n                \"Jumat.\",\r\n                \"Alh.\",\r\n                \"Iju.\",\r\n                \"Jumam.\"\r\n            ],\r\n            months: [\r\n                \"Januari\",\r\n                \"Februari\",\r\n                \"Machi\",\r\n                \"Aprili\",\r\n                \"Mei\",\r\n                \"Juni\",\r\n                \"Julai\",\r\n                \"Agosti\",\r\n                \"Septemba\",\r\n                \"Oktoba\",\r\n                \"Novemba\",\r\n                \"Decemba\"\r\n            ]\r\n        },\r\n        tk: { // Turkmen\r\n            today: \"bugün\",\r\n            days: [\r\n                \"Db\",\r\n                \"Sb\",\r\n                \"Çb\",\r\n                \"Pb\",\r\n                \"An\",\r\n                \"Şb\",\r\n                \"Ýb\"\r\n            ],\r\n            months: [\r\n                \"Ýanwar\",\r\n                \"Fewral\",\r\n                \"Mart\",\r\n                \"Aprel\",\r\n                \"Maý\",\r\n                \"lýun\",\r\n                \"lýul\",\r\n                \"Awgust\",\r\n                \"Sentýabr\",\r\n                \"Oktýabr\",\r\n                \"Noýabr\",\r\n                \"Dekabr\"\r\n            ]\r\n        },\r\n        uz: { // Uzbek\r\n            today: \"Bugun\",\r\n            days: [\r\n                \"yak.\",\r\n                \"dsh.\",\r\n                \"sesh.\",\r\n                \"chr.\",\r\n                \"psh.\",\r\n                \"jm.\",\r\n                \"sh.\"\r\n            ],\r\n            months: [\r\n                \"yanvar\",\r\n                \"fevral\",\r\n                \"mart\",\r\n                \"aprel\",\r\n                \"may\",\r\n                \"iyun\",\r\n                \"iyul\",\r\n                \"avgust\",\r\n                \"sentyabr\",\r\n                \"oktyabr\",\r\n                \"noyabr\",\r\n                \"dekabr\"\r\n            ]\r\n        },\r\n        tt: { // Tatar\r\n            today: \"бүген\",\r\n            days: [\r\n                \"Якш\",\r\n                \"Дүш\",\r\n                \"Сиш\",\r\n                \"Чәрш\",\r\n                \"Пәнҗ\",\r\n                \"Җом\",\r\n                \"Шим\"\r\n            ],\r\n            months: [\r\n                \"Гыйнвар\",\r\n                \"Февраль\",\r\n                \"Март\",\r\n                \"Апрель\",\r\n                \"Май\",\r\n                \"Июнь\",\r\n                \"Июль\",\r\n                \"Август\",\r\n                \"Сентябрь\",\r\n                \"Октябрь\",\r\n                \"Ноябрь\",\r\n                \"Декабрь\"\r\n            ]\r\n        },\r\n        bn: { // Bengali\r\n            today: \"আজ\",\r\n            days: [\r\n                \"রবি.\",\r\n                \"সোম.\",\r\n                \"মঙ্গল.\",\r\n                \"বুধ.\",\r\n                \"বৃহস্পতি.\",\r\n                \"শুক্র.\",\r\n                \"শনি.\"\r\n            ],\r\n            months: [\r\n                \"জানুয়ারী\",\r\n                \"ফেব্রুয়ারী\",\r\n                \"মার্চ\",\r\n                \"এপ্রিল\",\r\n                \"মে\",\r\n                \"জুন\",\r\n                \"জুলাই\",\r\n                \"আগস্ট\",\r\n                \"সেপ্টেম্বর\",\r\n                \"অক্টোবর\",\r\n                \"নভেম্বর\",\r\n                \"ডিসেম্বর\"\r\n            ]\r\n        },\r\n        pa: { // Punjabi\r\n            today: \"ਅੱਜ\",\r\n            days: [\r\n                \"ਐਤ.\",\r\n                \"ਸੋਮ.\",\r\n                \"ਮੰਗਲ.\",\r\n                \"ਬੁੱਧ.\",\r\n                \"ਵੀਰ.\",\r\n                \"ਸ਼ੁਕਰ.\",\r\n                \"ਸ਼ਨਿੱਚਰ.\"\r\n            ],\r\n            months: [\r\n                \"ਜਨਵਰੀ\",\r\n                \"ਫ਼ਰਵਰੀ\",\r\n                \"ਮਾਰਚ\",\r\n                \"ਅਪ੍ਰੈਲ\",\r\n                \"ਮਈ\",\r\n                \"ਜੂਨ\",\r\n                \"ਜੁਲਾਈ\",\r\n                \"ਅਗਸਤ\",\r\n                \"ਸਤੰਬਰ\",\r\n                \"ਅਕਤੂਬਰ\",\r\n                \"ਨਵੰਬਰ\",\r\n                \"ਦਸੰਬਰ\"\r\n            ]\r\n        },\r\n        gu: { // Gujarati\r\n            today: \"આજે\",\r\n            days: [\r\n                \"રવિ\",\r\n                \"સોમ\",\r\n                \"મંગળ\",\r\n                \"બુધ\",\r\n                \"ગુરુ\",\r\n                \"શુક્ર\",\r\n                \"શનિ\"\r\n            ],\r\n            months: [\r\n                \"જાન્યુઆરી\",\r\n                \"ફેબ્રુઆરી\",\r\n                \"માર્ચ\",\r\n                \"એપ્રિલ\",\r\n                \"મે\",\r\n                \"જૂન\",\r\n                \"જુલાઈ\",\r\n                \"ઑગસ્ટ\",\r\n                \"સપ્ટેમ્બર\",\r\n                \"ઑક્ટ્બર\",\r\n                \"નવેમ્બર\",\r\n                \"ડિસેમ્બર\"\r\n            ]\r\n        },\r\n        or: { // Oriya\r\n            today: \"ଆଜି\",\r\n            days: [\r\n                \"ରବି.\",\r\n                \"ସୋମ.\",\r\n                \"ମଙ୍ଗଳ.\",\r\n                \"ବୁଧ.\",\r\n                \"ଗୁରୁ.\",\r\n                \"ଶୁକ୍ର.\",\r\n                \"ଶନି.\"\r\n            ],\r\n            months: [\r\n                \"ଜାନୁୟାରୀ\",\r\n                \"ଫ୍ରେବୃୟାରୀ\",\r\n                \"ମାର୍ଚ୍ଚ\",\r\n                \"ଏପ୍ରିଲ୍‌\",\r\n                \"ମେ\",\r\n                \"ଜୁନ୍‌\",\r\n                \"ଜୁଲାଇ\",\r\n                \"ଅଗଷ୍ଟ\",\r\n                \"ସେପ୍ଟେମ୍ବର\",\r\n                \"ଅକ୍ଟୋବର\",\r\n                \"ନଭେମ୍ବର\",\r\n                \"(ଡିସେମ୍ବର\"\r\n            ]\r\n        },\r\n        ta: { // Tamil\r\n            today: \"இன்று\",\r\n            days: [\r\n                \"ஞாயிறு\",\r\n                \"திங்கள்\",\r\n                \"செவ்வாய்\",\r\n                \"புதன்\",\r\n                \"வியாழன்\",\r\n                \"வெள்ளி\",\r\n                \"சனி\"\r\n            ],\r\n            months: [\r\n                \"ஜனவரி\",\r\n                \"பிப்ரவரி\",\r\n                \"மார்ச்\",\r\n                \"ஏப்ரல்\",\r\n                \"மே\",\r\n                \"ஜூன்\",\r\n                \"ஜூலை\",\r\n                \"ஆகஸ்ட்\",\r\n                \"செப்டம்பர்\",\r\n                \"அக்டோபர்\",\r\n                \"நவம்பர்\",\r\n                \"டிசம்பர்\"\r\n            ]\r\n        },\r\n        te: { // Telugu\r\n            today: \"నేడు\",\r\n            days: [\r\n                \"ఆది.\",\r\n                \"సోమ.\",\r\n                \"మంగళ.\",\r\n                \"బుధ.\",\r\n                \"గురు.\",\r\n                \"శుక్ర.\",\r\n                \"శని.\"\r\n            ],\r\n            months: [\r\n                \"జనవరి\",\r\n                \"ఫిబ్రవరి\",\r\n                \"మార్చి\",\r\n                \"ఏప్రిల్\",\r\n                \"మే\",\r\n                \"జూన్\",\r\n                \"జూలై\",\r\n                \"ఆగస్టు\",\r\n                \"సెప్టెంబర్\",\r\n                \"అక్టోబర్\",\r\n                \"నవంబర్\",\r\n                \"డిసెంబర్\"\r\n            ]\r\n        },\r\n        kn: { // Kannada\r\n            today: \"ಇಂದು\",\r\n            days: [\r\n                \"ಭಾನು.\",\r\n                \"ಸೋಮ.\",\r\n                \"ಮಂಗಳ.\",\r\n                \"ಬುಧ.\",\r\n                \"ಗುರು.\",\r\n                \"ಶುಕ್ರ.\",\r\n                \"ಶನಿ.\"\r\n            ],\r\n            months: [\r\n                \"ಜನವರಿ\",\r\n                \"ಫೆಬ್ರವರಿ\",\r\n                \"ಮಾರ್ಚ್\",\r\n                \"ಎಪ್ರಿಲ್\",\r\n                \"ಮೇ\",\r\n                \"ಜೂನ್\",\r\n                \"ಜುಲೈ\",\r\n                \"ಆಗಸ್ಟ್\",\r\n                \"ಸೆಪ್ಟಂಬರ್\",\r\n                \"ಅಕ್ಟೋಬರ್\",\r\n                \"ನವೆಂಬರ್\",\r\n                \"ಡಿಸೆಂಬರ್\"\r\n            ]\r\n        },\r\n        ml: { // Malayalam\r\n            today: \"ഇന്ന്\",\r\n            days: [\r\n                \"ഞായർ.\",\r\n                \"തിങ്കൾ.\",\r\n                \"ചൊവ്വ.\",\r\n                \"ബുധൻ.\",\r\n                \"വ്യാഴം.\",\r\n                \"വെള്ളി.\",\r\n                \"ശനി.\"\r\n            ],\r\n            months: [\r\n                \"ജനുവരി\",\r\n                \"ഫെബ്റുവരി\",\r\n                \"മാറ്ച്ച്\",\r\n                \"ഏപ്റില്\",\r\n                \"മെയ്\",\r\n                \"ജൂണ്\",\r\n                \"ജൂലൈ\",\r\n                \"ഓഗസ്ററ്\",\r\n                \"സെപ്ററംബറ്\",\r\n                \"ഒക്ടോബറ്\",\r\n                \"നവംബറ്\",\r\n                \"ഡിസംബറ്\"\r\n            ]\r\n        },\r\n        as: { // Assamese\r\n            today: \"আজি\",\r\n            days: [\r\n                \"সোম.\",\r\n                \"মঙ্গল.\",\r\n                \"বুধ.\",\r\n                \"বৃহ.\",\r\n                \"শুক্র.\",\r\n                \"শনি.\",\r\n                \"ৰবি.\"\r\n            ],\r\n            months: [\r\n                \"জানুৱাৰী\",\r\n                \"ফেব্রুৱাৰী\",\r\n                \"মার্চ\",\r\n                \"এপ্রিল\",\r\n                \"মে\",\r\n                \"জুন\",\r\n                \"জুলাই\",\r\n                \"আগষ্ট\",\r\n                \"চেপ্টেম্বর\",\r\n                \"অক্টোবর\",\r\n                \"নবেম্বর\",\r\n                \"ডিচেম্বর\"\r\n            ]\r\n        },\r\n        mr: { // Marathi\r\n            today: \"आज\",\r\n            days: [\r\n                \"रवि.\",\r\n                \"सोम.\",\r\n                \"मंगळ.\",\r\n                \"बुध.\",\r\n                \"गुरु.\",\r\n                \"शुक्र.\",\r\n                \"शनि.\"\r\n            ],\r\n            months: [\r\n                \"जानेवारी\",\r\n                \"फेब्रुवारी\",\r\n                \"मार्च\",\r\n                \"एप्रिल\",\r\n                \"मे\",\r\n                \"जून\",\r\n                \"जुलै\",\r\n                \"ऑगस्ट\",\r\n                \"सप्टेंबर\",\r\n                \"ऑक्टोबर\",\r\n                \"नोव्हेंबर\",\r\n                \"डिसेंबर\"\r\n            ]\r\n        },\r\n        sa: { // Sanskrit\r\n            today: \"अद्य\",\r\n            days: [\r\n                \"रविवासरः\",\r\n                \"सोमवासरः\",\r\n                \"मङ्गलवासरः\",\r\n                \"बुधवासरः\",\r\n                \"गुरुवासरः\",\r\n                \"शुक्रवासरः\",\r\n                \"शनिवासरः\"\r\n            ],\r\n            months: [\r\n                \"जनवरी\",\r\n                \"फरवरी\",\r\n                \"मार्च\",\r\n                \"अप्रैल\",\r\n                \"मई\",\r\n                \"जून\",\r\n                \"जुलाई\",\r\n                \"अगस्त\",\r\n                \"सितम्बर\",\r\n                \"अक्तूबर\",\r\n                \"नवम्बर\",\r\n                \"दिसम्बर\"\r\n            ]\r\n        },\r\n        mn: { // Mongolian\r\n            today: \"өнөөдөр\",\r\n            days: [\r\n                \"Ня\",\r\n                \"Да\",\r\n                \"Мя\",\r\n                \"Лх\",\r\n                \"Пү\",\r\n                \"Ба\",\r\n                \"Бя\"\r\n            ],\r\n            months: [\r\n                \"1 дүгээр сар\",\r\n                \"2 дугаар сар\",\r\n                \"3 дугаар сар\",\r\n                \"4 дүгээр сар\",\r\n                \"5 дугаар сар\",\r\n                \"6 дугаар сар\",\r\n                \"7 дугаар сар\",\r\n                \"8 дугаар сар\",\r\n                \"9 дүгээр сар\",\r\n                \"10 дугаар сар\",\r\n                \"11 дүгээр сар\",\r\n                \"12 дугаар сар\"\r\n            ]\r\n        },\r\n        bo: { // Tibetan\r\n            today: \"ད་རིང\",\r\n            days: [\r\n                \"ཉི་མ།\",\r\n                \"ཟླ་བ།\",\r\n                \"མིག་དམར།\",\r\n                \"ལྷག་པ།\",\r\n                \"ཕུར་བུ།\",\r\n                \"པ་སངས།\",\r\n                \"སྤེན་པ།\"\r\n            ],\r\n            months: [\r\n                \"སྤྱི་ཟླ་དང་པོ།\",\r\n                \"སྤྱི་ཟླ་གཉིས་པ།\",\r\n                \"སྤྱི་ཟླ་གསུམ་པ།\",\r\n                \"སྤྱི་ཟླ་བཞི་པ།\",\r\n                \"སྤྱི་ཟླ་ལྔ་པ།\",\r\n                \"སྤྱི་ཟླ་དྲུག་པ།\",\r\n                \"སྤྱི་ཟླ་བདུན་པ།\",\r\n                \"སྤྱི་ཟླ་བརྒྱད་པ།\",\r\n                \"སྤྱི་ཟླ་དགུ་པ།\",\r\n                \"སྤྱི་ཟླ་བཅུ་པོ།\",\r\n                \"སྤྱི་ཟླ་བཅུ་གཅིག་པ།\",\r\n                \"སྤྱི་ཟླ་བཅུ་གཉིས་པ།\"\r\n            ]\r\n        },\r\n        cy: { // Welsh\r\n            today: \"heddiw\",\r\n            days: [\r\n                \"Sul\",\r\n                \"Llun\",\r\n                \"Maw\",\r\n                \"Mer\",\r\n                \"Iau\",\r\n                \"Gwe\",\r\n                \"Sad\"\r\n            ],\r\n            months: [\r\n                \"Ionawr\",\r\n                \"Chwefror\",\r\n                \"Mawrth\",\r\n                \"Ebrill\",\r\n                \"Mai\",\r\n                \"Mehefin\",\r\n                \"Gorffennaf\",\r\n                \"Awst\",\r\n                \"Medi\",\r\n                \"Hydref\",\r\n                \"Tachwedd\",\r\n                \"Rhagfyr\"\r\n            ]\r\n        },\r\n        km: { // Khmer\r\n            today: \"ថ្ងៃនេះ\",\r\n            days: [\r\n                \"អាទិ.\",\r\n                \"ច.\",\r\n                \"អ.\",\r\n                \"ពុ\",\r\n                \"ព្រហ.\",\r\n                \"សុ.\",\r\n                \"ស.\"\r\n            ],\r\n            months: [\r\n                \"មករា\",\r\n                \"កុម្ភៈ\",\r\n                \"មិនា\",\r\n                \"មេសា\",\r\n                \"ឧសភា\",\r\n                \"មិថុនា\",\r\n                \"កក្កដា\",\r\n                \"សីហា\",\r\n                \"កញ្ញា\",\r\n                \"តុលា\",\r\n                \"វិច្ឆិកា\",\r\n                \"ធ្នូ\"\r\n            ]\r\n        },\r\n        lo: { // Lao\r\n            today: \"ໃນມື້ນີ້\",\r\n            days: [\r\n                \"ອາທິດ\",\r\n                \"ຈັນ\",\r\n                \"ອັງຄານ\",\r\n                \"ພຸດ\",\r\n                \"ພະຫັດ\",\r\n                \"ສຸກ\",\r\n                \"ເສົາ\"\r\n            ],\r\n            months: [\r\n                \"ມັງກອນ\",\r\n                \"ກຸມພາ\",\r\n                \"ມີນາ\",\r\n                \"ເມສາ\",\r\n                \"ພຶດສະພາ\",\r\n                \"ມິຖຸນາ\",\r\n                \"ກໍລະກົດ\",\r\n                \"ສິງຫາ\",\r\n                \"ກັນຍາ\",\r\n                \"ຕຸລາ\",\r\n                \"ພະຈິກ\",\r\n                \"ທັນວາ\"\r\n            ]\r\n        },\r\n        gl: { // Galician\r\n            today: \"hoxe\",\r\n            days: [\r\n                \"dom\",\r\n                \"luns\",\r\n                \"mar\",\r\n                \"mér\",\r\n                \"xov\",\r\n                \"ven\",\r\n                \"sáb\"\r\n            ],\r\n            months: [\r\n                \"xaneiro\",\r\n                \"febreiro\",\r\n                \"marzo\",\r\n                \"abril\",\r\n                \"maio\",\r\n                \"xuño\",\r\n                \"xullo\",\r\n                \"agosto\",\r\n                \"setembro\",\r\n                \"outubro\",\r\n                \"novembro\",\r\n                \"decembro\"\r\n            ]\r\n        },\r\n        kok: { // Konkani\r\n            today: \"आजि\",\r\n            days: [\r\n                \"आय.\",\r\n                \"सोम.\",\r\n                \"मंगळ.\",\r\n                \"बुध.\",\r\n                \"बिरे.\",\r\n                \"सुक्र.\",\r\n                \"शेन.\"\r\n            ],\r\n            months: [\r\n                \"जानेवारी\",\r\n                \"फेब्रुवारी\",\r\n                \"मार्च\",\r\n                \"एप्रिल\",\r\n                \"मे\",\r\n                \"जून\",\r\n                \"जुलै\",\r\n                \"ऑगस्ट\",\r\n                \"सप्टेंबर\",\r\n                \"ऑक्टोबर\",\r\n                \"नोवेम्बर\",\r\n                \"डिसेंबर\"\r\n            ]\r\n        },\r\n        syr: { // Syriac\r\n            today: \"ܝܘܡܐ\",\r\n            days: [\r\n                \"܏ܐ ܏ܒܫ\",\r\n                \"܏ܒ ܏ܒܫ\",\r\n                \"܏ܓ ܏ܒܫ\",\r\n                \"܏ܕ ܏ܒܫ\",\r\n                \"܏ܗ ܏ܒܫ\",\r\n                \"܏ܥܪܘܒ\",\r\n                \"܏ܫܒ\"\r\n            ],\r\n            months: [\r\n                \"ܟܢܘܢ ܐܚܪܝ\",\r\n                \"ܫܒܛ\",\r\n                \"ܐܕܪ\",\r\n                \"ܢܝܣܢ\",\r\n                \"ܐܝܪ\",\r\n                \"ܚܙܝܪܢ\",\r\n                \"ܬܡܘܙ\",\r\n                \"ܐܒ\",\r\n                \"ܐܝܠܘܠ\",\r\n                \"ܬܫܪܝ ܩܕܝܡ\",\r\n                \"ܬܫܪܝ ܐܚܪܝ\",\r\n                \"ܟܢܘܢ ܩܕܝܡ\"\r\n            ]\r\n        },\r\n        si: { // Sinhala\r\n            today: \"අද\",\r\n            days: [\r\n                \"ඉරිදා\",\r\n                \"සඳුදා\",\r\n                \"කුජදා\",\r\n                \"බුදදා\",\r\n                \"ගුරුදා\",\r\n                \"කිවිදා\",\r\n                \"ශනිදා\"\r\n            ],\r\n            months: [\r\n                \"ජනවාරි\",\r\n                \"පෙබරවාරි\",\r\n                \"මාර්තු\",\r\n                \"අ‌ප්‍රේල්\",\r\n                \"මැයි\",\r\n                \"ජූනි\",\r\n                \"ජූලි\",\r\n                \"අ‌ගෝස්තු\",\r\n                \"සැප්තැම්බර්\",\r\n                \"ඔක්තෝබර්\",\r\n                \"නොවැම්බර්\",\r\n                \"දෙසැම්බර්\"\r\n            ]\r\n        },\r\n        iu: { // Inuktitut\r\n            today: \"ullumi\",\r\n            days: [\r\n                \"Nat\",\r\n                \"Nag\",\r\n                \"Aip\",\r\n                \"Pi\",\r\n                \"Sit\",\r\n                \"Tal\",\r\n                \"Siv\"\r\n            ],\r\n            months: [\r\n                \"Jaannuari\",\r\n                \"Viivvuari\",\r\n                \"Maatsi\",\r\n                \"Iipuri\",\r\n                \"Mai\",\r\n                \"Juuni\",\r\n                \"Julai\",\r\n                \"Aaggiisi\",\r\n                \"Sitipiri\",\r\n                \"Utupiri\",\r\n                \"Nuvipiri\",\r\n                \"Tisipiri\"\r\n            ]\r\n        },\r\n        am: { // Amharic\r\n            today: \"ዛሬ\",\r\n            days: [\r\n                \"እሑድ\",\r\n                \"ሰኞ\",\r\n                \"ማክሰ\",\r\n                \"ረቡዕ\",\r\n                \"ሐሙስ\",\r\n                \"ዓርብ\",\r\n                \"ቅዳሜ\"\r\n            ],\r\n            months: [\r\n                \"ጃንዩወሪ\",\r\n                \"ፌብሩወሪ\",\r\n                \"ማርች\",\r\n                \"ኤፕረል\",\r\n                \"ሜይ\",\r\n                \"ጁን\",\r\n                \"ጁላይ\",\r\n                \"ኦገስት\",\r\n                \"ሴፕቴምበር\",\r\n                \"ኦክተውበር\",\r\n                \"ኖቬምበር\",\r\n                \"ዲሴምበር\"\r\n            ]\r\n        },\r\n        tzm: { // Tamazight\r\n            today: \"assa\",\r\n            days: [\r\n                \"Ace\",\r\n                \"Ari\",\r\n                \"Ara\",\r\n                \"Aha\",\r\n                \"Amh\",\r\n                \"Sem\",\r\n                \"Sed\"\r\n            ],\r\n            months: [\r\n                \"Yenayer\",\r\n                \"Furar\",\r\n                \"Maghres\",\r\n                \"Yebrir\",\r\n                \"Mayu\",\r\n                \"Yunyu\",\r\n                \"Yulyu\",\r\n                \"Ghuct\",\r\n                \"Cutenber\",\r\n                \"Ktuber\",\r\n                \"Wambir\",\r\n                \"Dujanbir\"\r\n            ]\r\n        },\r\n        ne: { // Nepali\r\n            today: \"आज\",\r\n            days: [\r\n                \"आइत\",\r\n                \"सोम\",\r\n                \"मङ्गल\",\r\n                \"बुध\",\r\n                \"बिही\",\r\n                \"शुक्र\",\r\n                \"शनि\"\r\n            ],\r\n            months: [\r\n                \"जनवरी\",\r\n                \"फेब्रुअरी\",\r\n                \"मार्च\",\r\n                \"अप्रिल\",\r\n                \"मे\",\r\n                \"जून\",\r\n                \"जुलाई\",\r\n                \"अगस्त\",\r\n                \"सेप्टेम्बर\",\r\n                \"अक्टोबर\",\r\n                \"नोभेम्बर\",\r\n                \"डिसेम्बर\"\r\n            ]\r\n        },\r\n        fy: { // Frisian\r\n            today: \"hjoed\",\r\n            days: [\r\n                \"Sn\",\r\n                \"Mo\",\r\n                \"Ti\",\r\n                \"Wo\",\r\n                \"To\",\r\n                \"Fr\",\r\n                \"Sn\"\r\n            ],\r\n            months: [\r\n                \"jannewaris\",\r\n                \"febrewaris\",\r\n                \"maart\",\r\n                \"april\",\r\n                \"maaie\",\r\n                \"juny\",\r\n                \"july\",\r\n                \"augustus\",\r\n                \"septimber\",\r\n                \"oktober\",\r\n                \"novimber\",\r\n                \"desimber\"\r\n            ]\r\n        },\r\n        ps: { // Pashto\r\n            today: \"نن ورځ\",\r\n            days: [\r\n                \"الأحد\",\r\n                \"الإثنين\",\r\n                \"الثلاثاء\",\r\n                \"الأربعاء\",\r\n                \"الخميس\",\r\n                \"الجمعة\",\r\n                \"السبت\"\r\n            ],\r\n            months: [\r\n                \"محرم\",\r\n                \"صفر\",\r\n                \"ربيع الأول\",\r\n                \"ربيع الثاني\",\r\n                \"جمادى الأولى\",\r\n                \"جمادى الثانية\",\r\n                \"رجب\",\r\n                \"شعبان\",\r\n                \"رمضان\",\r\n                \"شوال\",\r\n                \"ذو القعدة\",\r\n                \"ذو الحجة\"\r\n            ]\r\n        },\r\n        fil: { // Filipino\r\n            today: \"ngayon\",\r\n            days: [\r\n                \"Lin\",\r\n                \"Lun\",\r\n                \"Mar\",\r\n                \"Mier\",\r\n                \"Hueb\",\r\n                \"Bier\",\r\n                \"Saba\"\r\n            ],\r\n            months: [\r\n                \"Enero\",\r\n                \"Pebrero\",\r\n                \"Marso\",\r\n                \"Abril\",\r\n                \"Mayo\",\r\n                \"Hunyo\",\r\n                \"Hulyo\",\r\n                \"Agosto\",\r\n                \"Septyembre\",\r\n                \"Oktubre\",\r\n                \"Nobyembre\",\r\n                \"Disyembre\"\r\n            ]\r\n        },\r\n        dv: { // Divehi\r\n            today: \"މިއަދު\",\r\n            days: [\r\n                \"އާދީއްތަ\",\r\n                \"ހޯމަ\",\r\n                \"އަންގާރަ\",\r\n                \"ބުދަ\",\r\n                \"ބުރާސްފަތި\",\r\n                \"ހުކުރު\",\r\n                \"ހޮނިހިރު\"\r\n            ],\r\n            months: [\r\n                \"މުޙައްރަމް\",\r\n                \"ޞަފަރު\",\r\n                \"ރަބީޢުލްއައްވަލް\",\r\n                \"ރަބީޢުލްއާޚިރު\",\r\n                \"ޖުމާދަލްއޫލާ\",\r\n                \"ޖުމާދަލްއާޚިރާ\",\r\n                \"ރަޖަބް\",\r\n                \"ޝަޢްބާން\",\r\n                \"ރަމަޟާން\",\r\n                \"ޝައްވާލް\",\r\n                \"ޛުލްޤަޢިދާ\",\r\n                \"ޛުލްޙިއްޖާ\"\r\n            ]\r\n        },\r\n        ha: { // Hausa\r\n            today: \"yau\",\r\n            days: [\r\n                \"Lah\",\r\n                \"Lit\",\r\n                \"Tal\",\r\n                \"Lar\",\r\n                \"Alh\",\r\n                \"Jum\",\r\n                \"Asa\"\r\n            ],\r\n            months: [\r\n                \"Januwaru\",\r\n                \"Febreru\",\r\n                \"Maris\",\r\n                \"Afrilu\",\r\n                \"Mayu\",\r\n                \"Yuni\",\r\n                \"Yuli\",\r\n                \"Agusta\",\r\n                \"Satumba\",\r\n                \"Oktocba\",\r\n                \"Nuwamba\",\r\n                \"Disamba\"\r\n            ]\r\n        },\r\n        yo: { // Yoruba\r\n            today: \"loni\",\r\n            days: [\r\n                \"Aik\",\r\n                \"Aje\",\r\n                \"Ise\",\r\n                \"Ojo\",\r\n                \"Ojo\",\r\n                \"Eti\",\r\n                \"Aba\"\r\n            ],\r\n            months: [\r\n                \"Osu kinni\",\r\n                \"Osu keji\",\r\n                \"Osu keta\",\r\n                \"Osu kerin\",\r\n                \"Osu karun\",\r\n                \"Osu kefa\",\r\n                \"Osu keje\",\r\n                \"Osu kejo\",\r\n                \"Osu kesan\",\r\n                \"Osu kewa\",\r\n                \"Osu kokanla\",\r\n                \"Osu keresi\"\r\n            ]\r\n        },\r\n        quz: { // Quechua\r\n            today: \"kunan\",\r\n            days: [\r\n                \"int\",\r\n                \"kil\",\r\n                \"ati\",\r\n                \"quy\",\r\n                \"Ch'\",\r\n                \"Ill\",\r\n                \"k'u\"\r\n            ],\r\n            months: [\r\n                \"Qulla puquy\",\r\n                \"Hatun puquy\",\r\n                \"Pauqar waray\",\r\n                \"ayriwa\",\r\n                \"Aymuray\",\r\n                \"Inti raymi\",\r\n                \"Anta Sitwa\",\r\n                \"Qhapaq Sitwa\",\r\n                \"Uma raymi\",\r\n                \"Kantaray\",\r\n                \"Ayamarq'a\",\r\n                \"Kapaq Raymi\"\r\n            ]\r\n        },\r\n        nso: { // Sesotho sa Leboa\r\n            today: \"Lehono\",\r\n            days: [\r\n                \"Lam\",\r\n                \"Moš\",\r\n                \"Lbb\",\r\n                \"Lbr\",\r\n                \"Lbn\",\r\n                \"Lbh\",\r\n                \"Mok\"\r\n            ],\r\n            months: [\r\n                \"Pherekgong\",\r\n                \"Hlakola\",\r\n                \"Mopitlo\",\r\n                \"Moranang\",\r\n                \"Mosegamanye\",\r\n                \"Ngoatobošego\",\r\n                \"Phuphu\",\r\n                \"Phato\",\r\n                \"Lewedi\",\r\n                \"Diphalana\",\r\n                \"Dibatsela\",\r\n                \"Manthole\"\r\n            ]\r\n        },\r\n        ba: { // Bashkir\r\n            today: \"бөгөн\",\r\n            days: [\r\n                \"Йш\",\r\n                \"Дш\",\r\n                \"Шш\",\r\n                \"Шр\",\r\n                \"Кс\",\r\n                \"Йм\",\r\n                \"Шб\"\r\n            ],\r\n            months: [\r\n                \"ғинуар\",\r\n                \"февраль\",\r\n                \"март\",\r\n                \"апрель\",\r\n                \"май\",\r\n                \"июнь\",\r\n                \"июль\",\r\n                \"август\",\r\n                \"сентябрь\",\r\n                \"октябрь\",\r\n                \"ноябрь\",\r\n                \"декабрь\"\r\n            ]\r\n        },\r\n        lb: { // Luxembourgish\r\n            today: \"haut\",\r\n            days: [\r\n                \"Son\",\r\n                \"Méi\",\r\n                \"Dën\",\r\n                \"Mët\",\r\n                \"Don\",\r\n                \"Fre\",\r\n                \"Sam\"\r\n            ],\r\n            months: [\r\n                \"Januar\",\r\n                \"Februar\",\r\n                \"Mäerz\",\r\n                \"Abrëll\",\r\n                \"Mee\",\r\n                \"Juni\",\r\n                \"Juli\",\r\n                \"August\",\r\n                \"September\",\r\n                \"Oktober\",\r\n                \"November\",\r\n                \"Dezember\"\r\n            ]\r\n        },\r\n        kl: { // Greenlandic\r\n            today: \"ullumi\",\r\n            days: [\r\n                \"sap\",\r\n                \"ata\",\r\n                \"mar\",\r\n                \"ping\",\r\n                \"sis\",\r\n                \"tal\",\r\n                \"arf\"\r\n            ],\r\n            months: [\r\n                \"januari\",\r\n                \"februari\",\r\n                \"martsi\",\r\n                \"apriili\",\r\n                \"maaji\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"aggusti\",\r\n                \"septembari\",\r\n                \"oktobari\",\r\n                \"novembari\",\r\n                \"decembari\"\r\n            ]\r\n        },\r\n        ig: { // Igbo\r\n            today: \"taa\",\r\n            days: [\r\n                \"Aik\",\r\n                \"Aje\",\r\n                \"Ise\",\r\n                \"Ojo\",\r\n                \"Ojo\",\r\n                \"Eti\",\r\n                \"Aba\"\r\n            ],\r\n            months: [\r\n                \"Onwa mbu\",\r\n                \"Onwa ibua\",\r\n                \"Onwa ato\",\r\n                \"Onwa ano\",\r\n                \"Onwa ise\",\r\n                \"Onwa isi\",\r\n                \"Onwa asa\",\r\n                \"Onwa asato\",\r\n                \"Onwa itolu\",\r\n                \"Onwa iri\",\r\n                \"Onwa iri n'ofu\",\r\n                \"Onwa iri n'ibua\"\r\n            ]\r\n        },\r\n        ii: { // Yi\r\n            today: \"ꀃꑍ\",\r\n            days: [\r\n                \"ꑭꆏ\",\r\n                \"ꆏ꒔\",\r\n                \"ꆏꑍ\",\r\n                \"ꆏꌕ\",\r\n                \"ꆏꇖ\",\r\n                \"ꆏꉬ\",\r\n                \"ꆏꃘ\"\r\n            ],\r\n            months: [\r\n                \"ꋍꆪ\",\r\n                \"ꑍꆪ\",\r\n                \"ꌕꆪ\",\r\n                \"ꇖꆪ\",\r\n                \"ꉬꆪ\",\r\n                \"ꃘꆪ\",\r\n                \"ꏃꆪ\",\r\n                \"ꉆꆪ\",\r\n                \"ꈬꆪ\",\r\n                \"ꊰꆪ\",\r\n                \"ꊯꊪꆪ\",\r\n                \"ꊰꑋꆪ\"\r\n            ]\r\n        },\r\n        arn: { // Mapudungun\r\n            today: \"fachantü\",\r\n            days: [\r\n                \"dom\",\r\n                \"lun\",\r\n                \"mar\",\r\n                \"mié\",\r\n                \"jue\",\r\n                \"vie\",\r\n                \"sáb\"\r\n            ],\r\n            months: [\r\n                \"enero\",\r\n                \"febrero\",\r\n                \"marzo\",\r\n                \"abril\",\r\n                \"mayo\",\r\n                \"junio\",\r\n                \"julio\",\r\n                \"agosto\",\r\n                \"septiembre\",\r\n                \"octubre\",\r\n                \"noviembre\",\r\n                \"diciembre\"\r\n            ]\r\n        },\r\n        moh: { // Mohawk\r\n            today: \"okàra\",\r\n            days: [\r\n                \"Sun\",\r\n                \"Mon\",\r\n                \"Tue\",\r\n                \"Wed\",\r\n                \"Thu\",\r\n                \"Fri\",\r\n                \"Sat\"\r\n            ],\r\n            months: [\r\n                \"Tsothohrkó:Wa\",\r\n                \"Enniska\",\r\n                \"Enniskó:Wa\",\r\n                \"Onerahtókha\",\r\n                \"Onerahtohkó:Wa\",\r\n                \"Ohiari:Ha\",\r\n                \"Ohiarihkó:Wa\",\r\n                \"Seskéha\",\r\n                \"Seskehkó:Wa\",\r\n                \"Kenténha\",\r\n                \"Kentenhkó:Wa\",\r\n                \"Tsothóhrha\"\r\n            ]\r\n        },\r\n        br: { // Breton\r\n            today: \"hiziv\",\r\n            days: [\r\n                \"Sul\",\r\n                \"Lun\",\r\n                \"Meu.\",\r\n                \"Mer.\",\r\n                \"Yaou\",\r\n                \"Gwe.\",\r\n                \"Sad.\"\r\n            ],\r\n            months: [\r\n                \"Genver\",\r\n                \"C'hwevrer\",\r\n                \"Meurzh\",\r\n                \"Ebrel\",\r\n                \"Mae\",\r\n                \"Mezheven\",\r\n                \"Gouere\",\r\n                \"Eost\",\r\n                \"Gwengolo\",\r\n                \"Here\",\r\n                \"Du\",\r\n                \"Kerzu\"\r\n            ]\r\n        },\r\n        ug: { // Uyghur\r\n            today: \"bügün\",\r\n            days: [\r\n                \"يە\",\r\n                \"دۈ\",\r\n                \"سە\",\r\n                \"چا\",\r\n                \"پە\",\r\n                \"جۈ\",\r\n                \"شە\"\r\n            ],\r\n            months: [\r\n                \"1-ئاي\",\r\n                \"2-ئاي\",\r\n                \"3-ئاي\",\r\n                \"4-ئاي\",\r\n                \"5-ئاي\",\r\n                \"6-ئاي\",\r\n                \"7-ئاي\",\r\n                \"8-ئاي\",\r\n                \"9-ئاي\",\r\n                \"10-ئاي\",\r\n                \"11-ئاي\",\r\n                \"12-ئاي\"\r\n            ]\r\n        },\r\n        mi: { // Maori\r\n            today: \"i tenei ra\",\r\n            days: [\r\n                \"Ta\",\r\n                \"Hi\",\r\n                \"Tū\",\r\n                \"Apa\",\r\n                \"Pa\",\r\n                \"Me\",\r\n                \"Ho\"\r\n            ],\r\n            months: [\r\n                \"Kohi-tātea\",\r\n                \"Hui-tanguru\",\r\n                \"Poutū-te-rangi\",\r\n                \"Paenga-whāwhā\",\r\n                \"Haratua\",\r\n                \"Pipiri\",\r\n                \"Hōngongoi\",\r\n                \"Here-turi-kōkā\",\r\n                \"Mahuru\",\r\n                \"Whiringa-ā-nuku\",\r\n                \"Whiringa-ā-rangi\",\r\n                \"Hakihea\"\r\n            ]\r\n        },\r\n        oc: { // Occitan\r\n            today: \"uèi\",\r\n            days: [\r\n                \"dim.\",\r\n                \"lun.\",\r\n                \"mar.\",\r\n                \"mèc.\",\r\n                \"jòu.\",\r\n                \"ven.\",\r\n                \"sab.\"\r\n            ],\r\n            months: [\r\n                \"genier\",\r\n                \"febrier\",\r\n                \"març\",\r\n                \"abril\",\r\n                \"mai\",\r\n                \"junh\",\r\n                \"julh\",\r\n                \"agost\",\r\n                \"setembre\",\r\n                \"octobre\",\r\n                \"novembre\",\r\n                \"desembre\"\r\n            ]\r\n        },\r\n        co: { // Corsican\r\n            today: \"oghje\",\r\n            days: [\r\n                \"dum.\",\r\n                \"lun.\",\r\n                \"mar.\",\r\n                \"mer.\",\r\n                \"ghj.\",\r\n                \"ven.\",\r\n                \"sab.\"\r\n            ],\r\n            months: [\r\n                \"ghjennaghju\",\r\n                \"ferraghju\",\r\n                \"marzu\",\r\n                \"aprile\",\r\n                \"maghju\",\r\n                \"ghjunghju\",\r\n                \"lugliu\",\r\n                \"aostu\",\r\n                \"settembre\",\r\n                \"ottobre\",\r\n                \"nuvembre\",\r\n                \"dicembre\"\r\n            ]\r\n        },\r\n        gsw: { // Alsatian\r\n            today: \"heit\",\r\n            days: [\r\n                \"Su.\",\r\n                \"Mo.\",\r\n                \"Di.\",\r\n                \"Mi.\",\r\n                \"Du.\",\r\n                \"Fr.\",\r\n                \"Sà.\"\r\n            ],\r\n            months: [\r\n                \"Jänner\",\r\n                \"Feverje\",\r\n                \"März\",\r\n                \"Àpril\",\r\n                \"Mai\",\r\n                \"Jüni\",\r\n                \"Jüli\",\r\n                \"Augscht\",\r\n                \"September\",\r\n                \"Oktower\",\r\n                \"Nowember\",\r\n                \"Dezember\"\r\n            ]\r\n        },\r\n        sah: { // Yakut\r\n            today: \"bügün\",\r\n            days: [\r\n                \"Бс\",\r\n                \"Бн\",\r\n                \"Оп\",\r\n                \"Ср\",\r\n                \"Чп\",\r\n                \"Бт\",\r\n                \"Сб\"\r\n            ],\r\n            months: [\r\n                \"Тохсунньу\",\r\n                \"Олунньу\",\r\n                \"Кулун тутар\",\r\n                \"Муус устар\",\r\n                \"Ыам ыйа\",\r\n                \"Бэс ыйа\",\r\n                \"От ыйа\",\r\n                \"Атырдьах ыйа\",\r\n                \"Балаҕан ыйа\",\r\n                \"Алтынньы\",\r\n                \"Сэтинньи\",\r\n                \"Ахсынньы\"\r\n            ]\r\n        },\r\n        qut: { // K'iche\r\n            today: \"[kamik]\",\r\n            days: [\r\n                \"juq\",\r\n                \"kaq\",\r\n                \"oxq\",\r\n                \"kajq\",\r\n                \"joq\",\r\n                \"waqq\",\r\n                \"wuqq\"\r\n            ],\r\n            months: [\r\n                \"nab'e ik'\",\r\n                \"ukab' ik'\",\r\n                \"rox ik'\",\r\n                \"ukaj ik'\",\r\n                \"uro' ik'\",\r\n                \"uwaq ik'\",\r\n                \"uwuq ik'\",\r\n                \"uwajxaq ik'\",\r\n                \"ub'elej ik'\",\r\n                \"ulaj ik'\",\r\n                \"ujulaj ik'\",\r\n                \"ukab'laj ik'\"\r\n            ]\r\n        },\r\n        rw: { // Kinyarwanda\r\n            today: \"uyu munsi\",\r\n            days: [\r\n                \"mbe.\",\r\n                \"kab.\",\r\n                \"gat.\",\r\n                \"kan.\",\r\n                \"gat.\",\r\n                \"gat.\",\r\n                \"cyu.\"\r\n            ],\r\n            months: [\r\n                \"Mutarama\",\r\n                \"Gashyantare\",\r\n                \"Werurwe\",\r\n                \"Mata\",\r\n                \"Gicurasi\",\r\n                \"Kamena\",\r\n                \"Nyakanga\",\r\n                \"Kanama\",\r\n                \"Nzeli\",\r\n                \"Ukwakira\",\r\n                \"Ugushyingo\",\r\n                \"Ukuboza\"\r\n            ]\r\n        },\r\n        wo: { // Wolof\r\n            today: \"tey\",\r\n            days: [\r\n                \"dim.\",\r\n                \"lun.\",\r\n                \"mar.\",\r\n                \"mer.\",\r\n                \"jeu.\",\r\n                \"ven.\",\r\n                \"sam.\"\r\n            ],\r\n            months: [\r\n                \"janvier\",\r\n                \"février\",\r\n                \"mars\",\r\n                \"avril\",\r\n                \"mai\",\r\n                \"juin\",\r\n                \"juillet\",\r\n                \"août\",\r\n                \"septembre\",\r\n                \"octobre\",\r\n                \"novembre\",\r\n                \"décembre\"\r\n            ]\r\n        },\r\n        prs: { // Dari\r\n            today: \"امروز\",\r\n            days: [\r\n                \"الأحد\",\r\n                \"الإثنين\",\r\n                \"الثلاثاء\",\r\n                \"الأربعاء\",\r\n                \"الخميس\",\r\n                \"الجمعة\",\r\n                \"السبت\"\r\n            ],\r\n            months: [\r\n                \"محرم\",\r\n                \"صفر\",\r\n                \"ربيع الأول\",\r\n                \"ربيع الثاني\",\r\n                \"جمادى الأولى\",\r\n                \"جمادى الثانية\",\r\n                \"رجب\",\r\n                \"شعبان\",\r\n                \"رمضان\",\r\n                \"شوال\",\r\n                \"ذو القعدة\",\r\n                \"ذو الحجة\"\r\n            ]\r\n        },\r\n        gd: { // Scottish Gaelic\r\n            today: \"an-diugh\",\r\n            days: [\r\n                \"Dòm\",\r\n                \"Lua\",\r\n                \"Mài\",\r\n                \"Cia\",\r\n                \"Ard\",\r\n                \"Hao\",\r\n                \"Sat\"\r\n            ],\r\n            months: [\r\n                \"Am Faoilleach\",\r\n                \"An Gearran\",\r\n                \"Am Màrt\",\r\n                \"An Giblean\",\r\n                \"An Cèitean\",\r\n                \"An t-Ògmhios\",\r\n                \"An t-Iuchar\",\r\n                \"An Lùnastal\",\r\n                \"An t-Sultain\",\r\n                \"An Dàmhair\",\r\n                \"An t-Samhain\",\r\n                \"An Dùbhlachd\"\r\n            ]\r\n        },\r\n        smn: { // Sami (Inari)\r\n            today: \"onne\",\r\n            days: [\r\n                \"pa\",\r\n                \"vu\",\r\n                \"ma\",\r\n                \"ko\",\r\n                \"tu\",\r\n                \"vá\",\r\n                \"lá\"\r\n            ],\r\n            months: [\r\n                \"uđđâivemáánu\",\r\n                \"kuovâmáánu\",\r\n                \"njuhčâmáánu\",\r\n                \"cuáŋuimáánu\",\r\n                \"vyesimáánu\",\r\n                \"kesimáánu\",\r\n                \"syeinimáánu\",\r\n                \"porgemáánu\",\r\n                \"čohčâmáánu\",\r\n                \"roovvâdmáánu\",\r\n                \"skammâmáánu\",\r\n                \"juovlâmáánu\"\r\n            ]\r\n        },\r\n        sms: { // Sami (Skolt)\r\n            today: \"pei ́vv\",\r\n            days: [\r\n                \"pâ\",\r\n                \"vu\",\r\n                \"mâ\",\r\n                \"se\",\r\n                \"ne\",\r\n                \"pi\",\r\n                \"su\"\r\n            ],\r\n            months: [\r\n                \"ođđee´jjmään\",\r\n                \"tä´lvvmään\",\r\n                \"pâ´zzlâšttammään\",\r\n                \"njuhččmään\",\r\n                \"vue´ssmään\",\r\n                \"ǩie´ssmään\",\r\n                \"suei´nnmään\",\r\n                \"på´rǧǧmään\",\r\n                \"čõhččmään\",\r\n                \"kålggmään\",\r\n                \"skamm´mään\",\r\n                \"rosttovmään\"\r\n            ]\r\n        },\r\n        zh: { // Simplified Chinese \r\n            days: [\r\n                \"星期天\",\r\n                \"星期一\",\r\n                \"星期二\",\r\n                \"星期三\",\r\n                \"星期四\",\r\n                \"星期五\",\r\n                \"星期六\"\r\n            ],\r\n            months: [\r\n                \"一月\",\r\n                \"二月\",\r\n                \"三月\",\r\n                \"四月\",\r\n                \"五月\",\r\n                \"六月\",\r\n                \"七月\",\r\n                \"八月\",\r\n                \"九月\",\r\n                \"十月\",\r\n                \"十一月\",\r\n                \"十二月\"\r\n            ],\r\n            today: \"今天\",\r\n        },\r\n        \"zh-hans\": { //Simplified Chinese, informal\r\n            days: [\r\n                \"周日\",\r\n                \"周一\",\r\n                \"周二\",\r\n                \"周三\",\r\n                \"周四\",\r\n                \"周五\",\r\n                \"周六\"\r\n            ],\r\n            months: [\r\n                \"一月\",\r\n                \"二月\",\r\n                \"三月\",\r\n                \"四月\",\r\n                \"五月\",\r\n                \"六月\",\r\n                \"七月\",\r\n                \"八月\",\r\n                \"九月\",\r\n                \"十月\",\r\n                \"十一月\",\r\n                \"十二月\"\r\n            ],\r\n            today: \"今天\",\r\n        },\r\n        \"zh-hant\": { // Traditional Chinese\r\n            days: [\r\n                \"週日\",\r\n                \"週一\",\r\n                \"週二\",\r\n                \"週三\",\r\n                \"週四\",\r\n                \"週五\",\r\n                \"週六\"\r\n            ],\r\n            months: [\r\n                \"一月\",\r\n                \"二月\",\r\n                \"三月\",\r\n                \"四月\",\r\n                \"五月\",\r\n                \"六月\",\r\n                \"七月\",\r\n                \"八月\",\r\n                \"九月\",\r\n                \"十月\",\r\n                \"十一月\",\r\n                \"十二月\"\r\n            ],\r\n            today: \"今天\",\r\n        },\r\n        nn: { // Norwegian (Nynorsk)\r\n            today: \"i dag\",\r\n            days: [\r\n                \"sø\",\r\n                \"må\",\r\n                \"ty\",\r\n                \"on\",\r\n                \"to\",\r\n                \"fr\",\r\n                \"la\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mars\",\r\n                \"april\",\r\n                \"mai\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"desember\"\r\n            ]\r\n        },\r\n        bs: { // Bosnian\r\n            today: \"danas\",\r\n            days: [\r\n                \"ned\",\r\n                \"pon\",\r\n                \"uto\",\r\n                \"sri\",\r\n                \"čet\",\r\n                \"pet\",\r\n                \"sub\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mart\",\r\n                \"april\",\r\n                \"maj\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"avgust\",\r\n                \"septembar\",\r\n                \"oktobar\",\r\n                \"novembar\",\r\n                \"decembar\"\r\n            ]\r\n        },\r\n        sma: { // Sami (Southern)\r\n            today: \"daenbiejjien\",\r\n            days: [\r\n                \"aej\",\r\n                \"måa\",\r\n                \"dæj\",\r\n                \"gask\",\r\n                \"duar\",\r\n                \"bearj\",\r\n                \"laav\"\r\n            ],\r\n            months: [\r\n                \"tsïengele\",\r\n                \"goevte\",\r\n                \"njoktje\",\r\n                \"voerhtje\",\r\n                \"suehpede\",\r\n                \"ruffie\",\r\n                \"snjaltje\",\r\n                \"mïetske\",\r\n                \"skïerede\",\r\n                \"golke\",\r\n                \"rahka\",\r\n                \"goeve\"\r\n            ]\r\n        },\r\n        nb: { // Norwegian (Bokmål)\r\n            today: \"i dag\",\r\n            days: [\r\n                \"sø\",\r\n                \"ma\",\r\n                \"ti\",\r\n                \"on\",\r\n                \"to\",\r\n                \"fr\",\r\n                \"lø\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mars\",\r\n                \"april\",\r\n                \"mai\",\r\n                \"juni\",\r\n                \"juli\",\r\n                \"august\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"november\",\r\n                \"desember\"\r\n            ]\r\n        },\r\n        sr: { // Serbian\r\n            today: \"данас\",\r\n            days: [\r\n                \"ned\",\r\n                \"pon\",\r\n                \"uto\",\r\n                \"sre\",\r\n                \"čet\",\r\n                \"pet\",\r\n                \"sub\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"mart\",\r\n                \"april\",\r\n                \"maj\",\r\n                \"jun\",\r\n                \"jul\",\r\n                \"avgust\",\r\n                \"septembar\",\r\n                \"oktobar\",\r\n                \"novembar\",\r\n                \"decembar\"\r\n            ]\r\n        },\r\n        dsb: { // Lower Sorbian\r\n            today: \"źinsa\",\r\n            days: [\r\n                \"nje\",\r\n                \"pon\",\r\n                \"wał\",\r\n                \"srj\",\r\n                \"stw\",\r\n                \"pět\",\r\n                \"sob\"\r\n            ],\r\n            months: [\r\n                \"januar\",\r\n                \"februar\",\r\n                \"měrc\",\r\n                \"apryl\",\r\n                \"maj\",\r\n                \"junij\",\r\n                \"julij\",\r\n                \"awgust\",\r\n                \"september\",\r\n                \"oktober\",\r\n                \"nowember\",\r\n                \"december\"\r\n            ]\r\n        },\r\n        smj: { // Sami (Lule)\r\n            today: \"uddni\",\r\n            days: [\r\n                \"ájl\",\r\n                \"mán\",\r\n                \"dis\",\r\n                \"gas\",\r\n                \"duor\",\r\n                \"bier\",\r\n                \"láv\"\r\n            ],\r\n            months: [\r\n                \"ådåjakmánno\",\r\n                \"guovvamánno\",\r\n                \"sjnjuktjamánno\",\r\n                \"vuoratjismánno\",\r\n                \"moarmesmánno\",\r\n                \"biehtsemánno\",\r\n                \"sjnjilltjamánno\",\r\n                \"bårggemánno\",\r\n                \"ragátmánno\",\r\n                \"gålgådismánno\",\r\n                \"basádismánno\",\r\n                \"javllamánno\"\r\n            ]\r\n        }\r\n    }\r\n}\n\nclass Input {\r\n  constructor(input) {\r\n    this.element = input;\r\n    this.element.setAttribute(pickerAppliedAttr, '');\r\n    if (dateInputIsSupported) {\r\n      // this wil both prevent the native datepicker displaying AND allow asigning a value attribute which is not ISO8601 compliant\r\n      this.element.type = 'date-polyfill';\r\n      // this.element.addEventListener('click', preventDefault);\r\n    }\r\n\r\n    let langEl = this.element,\r\n        lang = '';\r\n\r\n    while(langEl.parentNode) {\r\n      lang = langEl.getAttribute('lang');\r\n      if(lang) {\r\n        break;\r\n      }\r\n      langEl = langEl.parentNode;\r\n    }\r\n\r\n    this.setLocaleText(lang);\r\n    if (!this.element.placeholder) {\r\n      this.element.placeholder = this.localeText.format.replace('M', 'mm').replace('D', 'dd').replace('Y', 'yyyy');\r\n    }\r\n    const valuePropDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.element), 'value');\r\n    if (valuePropDescriptor === null) {\r\n      valuePropDescriptor = { get:() => this.element.getAttribute('value'), set() {} };\r\n      console.log(\"nodep-date-input-polyfill: unable to obtain native input[type=date] .value propertyDescriptor\");\r\n    }\r\n    Object.defineProperties(\r\n      this.element,\r\n      {\r\n        'textValue': {\r\n          get: valuePropDescriptor.get,\r\n          set: valuePropDescriptor.set\r\n        },\r\n        'value': {\r\n          get: ()=> this.element.polyfillValue,\r\n          set: val=> {\r\n            if(!/^\\d{4}-\\d{2}-\\d{2}$/.test(val)) {\r\n              this.element.polyfillValue = this.element.textValue  = '';\r\n              this.element.setAttribute('value', '');\r\n              return;\r\n            }\r\n\r\n            this.element.polyfillValue = val;\r\n\r\n            const YMD = val.split(`-`);\r\n            this.element.textValue = this.localeText.format\r\n              .replace(`Y`, YMD[0])\r\n              .replace(`M`, YMD[1])\r\n              .replace(`D`, YMD[2]);\r\n            this.element.setAttribute(\r\n              `value`,\r\n              this.element.textValue\r\n            );\r\n            \r\n          }\r\n        },\r\n        'valueAsDate': {\r\n          get: ()=> {\r\n            if(!this.element.polyfillValue) {\r\n              return null;\r\n            }\r\n\r\n            return new Date(this.element.polyfillValue);\r\n          },\r\n          set: val=> {\r\n            if (val === null || isNaN(val.getTime())) {\r\n              this.element.value = '';\r\n            } else {\r\n              this.element.value = val.toISOString().slice(0,10);\r\n            }\r\n          }\r\n        },\r\n        'valueAsNumber': {\r\n          get: ()=> {\r\n            if(!this.element.value) {\r\n              return NaN;\r\n            }\r\n\r\n            return this.element.valueAsDate.getTime();\r\n          },\r\n          set: val=> {\r\n            this.element.valueAsDate = new Date(val);\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    // Initialize value for display.\r\n    this.element.value = this.element.getAttribute('value');\r\n\r\n    // Open the picker when the input get focus,\r\n    // also on various click events to capture it in all corner cases.\r\n    const showPicker = ()=> {\r\n      Picker.instance.attachTo(this);\r\n    };\r\n    const passiveOpt = { passive: true };\r\n    this.element.addEventListener('focus', showPicker, passiveOpt);\r\n    this.element.addEventListener('mousedown', showPicker, passiveOpt);\r\n    this.element.addEventListener('mouseup', showPicker, passiveOpt);\r\n\r\n    // Update the picker if the date changed manually in the input.\r\n    this.element.addEventListener('keydown', e=> {\r\n      let beginValue = this.element.valueAsDate;\r\n      let requirePing = true;\r\n      let requireParse = false;\r\n      switch(e.keyCode) {\r\n        case 9:\r\n        case 27:\r\n          Picker.instance.hide();\r\n          requirePing = false;\r\n          break;\r\n        case 38:\r\n          if (beginValue === null) { beginValue = new Date(); }\r\n          beginValue.setDate(beginValue.getDate() + 1);\r\n          this.element.valueAsDate = beginValue;\r\n          break;\r\n        case 40:\r\n          if (beginValue === null) { beginValue = new Date(); }\r\n          beginValue.setDate(beginValue.getDate() - 1);\r\n          this.element.valueAsDate = beginValue;\r\n          break;\r\n        default:\r\n          requireParse = true;\r\n      }\r\n      if (requirePing) {\r\n        if (requireParse) {\r\n          const self = this;\r\n          setTimeout(() => {\r\n            const parseDt = self.localeText.parseLocale(self.element.textValue);\r\n            if (parseDt) {\r\n              parseDt.setTime(parseDt.getTime() - parseDt.getTimezoneOffset() * 60000);\r\n            }\r\n            if (+parseDt !== +self.element.valueAsDate) {\r\n              self.element.valueAsDate = parseDt;\r\n              Picker.instance.pingInput();\r\n              Picker.instance.sync();\r\n            }\r\n          }, 1);\r\n        } else {\r\n          Picker.instance.pingInput();\r\n          Picker.instance.sync();\r\n        }\r\n      }\r\n    }, passiveOpt);\r\n  }\r\n\r\n  setLocaleText(elementLang) {\r\n    let preferredLocales = window.navigator.languages\r\n      ? [...window.navigator.languages]\r\n      : [ window.navigator.userLanguage || window.navigator.language ];\r\n    // user browser preference 1st then element language - arguably should unshift here, or could get complex and \r\n    // differentiate element language only (length===2) from language and culture both defined on a containing element\r\n    if (elementLang) { preferredLocales.push(elementLang); }\r\n\r\n    const li = getLanguageInfo(preferredLocales);\r\n    // First, look for an exact match to the provided locale.\r\n    // for (const pl of preferredLocales) { - with current core-js polyfills this will import Symbol polyfill, which is unnecessary bloat\r\n\r\n    this.locale = li.locale;\r\n    this.localeText = li;\r\n  }\r\n\r\n  static pendingDateInputs() {\r\n    '[data-nodep-date-input-polyfill-debug]';\r\n  }\r\n}\n\nfunction addPickers({ watchForInsert = false, allowForcePicker = false } = {}) {\r\n    Picker.instance = new Picker();\r\n    const findHelper = new FindInputsHelper({ allowForcePicker });\r\n        // Get and loop all the input[type=\"date\"]s in the page that do not have `[data-has-picker]` yet.\r\n    findHelper.getAllInputsForPolyfilling().forEach((di) => new Input(di));\r\n    if (watchForInsert) {\r\n        const observer = new MutationObserver((mutations) => \r\n            mutations.forEach((m) => {\r\n                if(m.type === 'childList') {\r\n                    m.addedNodes.forEach((el) => {\r\n                        if (el.nodeType === Node.ELEMENT_NODE) {\r\n                            // [el, ...el.querySelectorAll('input[type=date]')] should do, but some problem with transpilling\r\n                            // firefox fine with same transpile, but IE somehow tries to implement es.string.iterator rather than nodelist!\r\n                            const nodes = Array.from(el.querySelectorAll('input[type=date]'));\r\n                            nodes.push(el);\r\n                            nodes.forEach((inpt) => {\r\n                                if (findHelper.requiresPolyfilling(inpt)) {\r\n                                    new Input(inpt);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        );\r\n        // call `observe` on that MutationObserver instance, \r\n        // passing it the element to observe, and the options object\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            attributes: false,\r\n            subtree: true,\r\n        });\r\n\r\n        // this might not be the best way to handle this as it will not add placeholder until clicked\r\n        /*\r\n        document.body.addEventListener('mousedown', (evt)=> {\r\n            if (findHelper.requiresPolyfilling(evt.target)) {\r\n                return new Input(evt.target);\r\n            }\r\n        }, { passive: true });\r\n        */\r\n    }\r\n}\n\nexport { addPickers };\n//# sourceMappingURL=addPickers-08ced8bc.mjs.map\n"],"names":["definePropertyModule","defineProperties","create","IE_PROTO","CORRECT_PROTOTYPE_GETTER","getPrototypeOf","IteratorPrototype","require$$0","returnThis","IteratorsCore","BUGGY_SAFARI_ITERATORS","ITERATOR","setPrototypeOf","InternalStateModule","USES_TO_LENGTH","SPECIES","defineProperty","assign","setInternalState","MATCH","UNSUPPORTED_Y","stickyHelpers","isRegExp","getFlags","RegExpPrototype","flags","correctIsRegExpLogic","notARegExp","repeat","WEBKIT_BUG","exec","createMethod","max","fixRegExpWellKnownSymbolLogic","regExpExec","min","callRegExpExec","ArrayIteratorMethods","DOMIterables"],"mappings":"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}