// @license MIT - https://github.com/brianblakely/nodep-date-input-polyfill
var datePolyfill=function(e){"use strict";var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function n(e,t){return e(t={exports:{}},t.exports),t.exports}var a=function(e){return e&&e.Math==Math&&e},r=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof t&&t)||Function("return this")(),o=function(e){try{return!!e()}catch(e){return!0}},i=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),u={}.propertyIsEnumerable,s=Object.getOwnPropertyDescriptor,l={f:s&&!u.call({1:2},1)?function(e){var t=s(this,e);return!!t&&t.enumerable}:u},c=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},d={}.toString,m=function(e){return d.call(e).slice(8,-1)},h="".split,y=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==m(e)?h.call(e,""):Object(e)}:Object,f=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},p=function(e){return y(f(e))},b=function(e){return"object"==typeof e?null!==e:"function"==typeof e},g=function(e,t){if(!b(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!b(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!b(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!b(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")},v={}.hasOwnProperty,_=function(e,t){return v.call(e,t)},j=r.document,k=b(j)&&b(j.createElement),w=function(e){return k?j.createElement(e):{}},S=!i&&!o((function(){return 7!=Object.defineProperty(w("div"),"a",{get:function(){return 7}}).a})),M=Object.getOwnPropertyDescriptor,A={f:i?M:function(e,t){if(e=p(e),t=g(t,!0),S)try{return M(e,t)}catch(e){}if(_(e,t))return c(!l.f.call(e,t),e[t])}},x=function(e){if(!b(e))throw TypeError(String(e)+" is not an object");return e},E=Object.defineProperty,O={f:i?E:function(e,t,n){if(x(e),t=g(t,!0),x(n),S)try{return E(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},z=i?function(e,t,n){return O.f(e,t,c(1,n))}:function(e,t,n){return e[t]=n,e},D=function(e,t){try{z(r,e,t)}catch(n){r[e]=t}return t},T=r["__core-js_shared__"]||D("__core-js_shared__",{}),P=Function.toString;"function"!=typeof T.inspectSource&&(T.inspectSource=function(e){return P.call(e)});var N,C,L,I=T.inspectSource,R=r.WeakMap,q="function"==typeof R&&/native code/.test(I(R)),F=n((function(e){(e.exports=function(e,t){return T[e]||(T[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.4",mode:"global",copyright:"Â© 2020 Denis Pushkarev (zloirock.ru)"})})),J=0,Y=Math.random(),H=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++J+Y).toString(36)},K=F("keys"),W=function(e){return K[e]||(K[e]=H(e))},$={},U=r.WeakMap;if(q){var G=new U,B=G.get,V=G.has,X=G.set;N=function(e,t){return X.call(G,e,t),t},C=function(e){return B.call(G,e)||{}},L=function(e){return V.call(G,e)}}else{var Q=W("state");$[Q]=!0,N=function(e,t){return z(e,Q,t),t},C=function(e){return _(e,Q)?e[Q]:{}},L=function(e){return _(e,Q)}}var Z,ee,te={set:N,get:C,has:L,enforce:function(e){return L(e)?C(e):N(e,{})},getterFor:function(e){return function(t){var n;if(!b(t)||(n=C(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},ne=n((function(e){var t=te.get,n=te.enforce,a=String(String).split("String");(e.exports=function(e,t,o,i){var u=!!i&&!!i.unsafe,s=!!i&&!!i.enumerable,l=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof t||_(o,"name")||z(o,"name",t),n(o).source=a.join("string"==typeof t?t:"")),e!==r?(u?!l&&e[t]&&(s=!0):delete e[t],s?e[t]=o:z(e,t,o)):s?e[t]=o:D(t,o)})(Function.prototype,"toString",(function(){return"function"==typeof this&&t(this).source||I(this)}))})),ae=r,re=function(e){return"function"==typeof e?e:void 0},oe=function(e,t){return arguments.length<2?re(ae[e])||re(r[e]):ae[e]&&ae[e][t]||r[e]&&r[e][t]},ie=Math.ceil,ue=Math.floor,se=function(e){return isNaN(e=+e)?0:(e>0?ue:ie)(e)},le=Math.min,ce=function(e){return e>0?le(se(e),9007199254740991):0},de=Math.max,me=Math.min,he=function(e,t){var n=se(e);return n<0?de(n+t,0):me(n,t)},ye=function(e){return function(t,n,a){var r,o=p(t),i=ce(o.length),u=he(a,i);if(e&&n!=n){for(;i>u;)if((r=o[u++])!=r)return!0}else for(;i>u;u++)if((e||u in o)&&o[u]===n)return e||u||0;return!e&&-1}},fe={includes:ye(!0),indexOf:ye(!1)},pe=fe.indexOf,be=function(e,t){var n,a=p(e),r=0,o=[];for(n in a)!_($,n)&&_(a,n)&&o.push(n);for(;t.length>r;)_(a,n=t[r++])&&(~pe(o,n)||o.push(n));return o},ge=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],ve=ge.concat("length","prototype"),_e={f:Object.getOwnPropertyNames||function(e){return be(e,ve)}},je={f:Object.getOwnPropertySymbols},ke=oe("Reflect","ownKeys")||function(e){var t=_e.f(x(e)),n=je.f;return n?t.concat(n(e)):t},we=function(e,t){for(var n=ke(t),a=O.f,r=A.f,o=0;o<n.length;o++){var i=n[o];_(e,i)||a(e,i,r(t,i))}},Se=/#|\.prototype\./,Me=function(e,t){var n=xe[Ae(e)];return n==Oe||n!=Ee&&("function"==typeof t?o(t):!!t)},Ae=Me.normalize=function(e){return String(e).replace(Se,".").toLowerCase()},xe=Me.data={},Ee=Me.NATIVE="N",Oe=Me.POLYFILL="P",ze=Me,De=A.f,Te=function(e,t){var n,a,o,i,u,s=e.target,l=e.global,c=e.stat;if(n=l?r:c?r[s]||D(s,{}):(r[s]||{}).prototype)for(a in t){if(i=t[a],o=e.noTargetGet?(u=De(n,a))&&u.value:n[a],!ze(l?a:s+(c?".":"#")+a,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;we(i,o)}(e.sham||o&&o.sham)&&z(i,"sham",!0),ne(n,a,i,e)}},Pe=Array.isArray||function(e){return"Array"==m(e)},Ne=function(e){return Object(f(e))},Ce=function(e,t,n){var a=g(t);a in e?O.f(e,a,c(0,n)):e[a]=n},Le=!!Object.getOwnPropertySymbols&&!o((function(){return!String(Symbol())})),Ie=Le&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Re=F("wks"),qe=r.Symbol,Fe=Ie?qe:qe&&qe.withoutSetter||H,Je=function(e){return _(Re,e)||(Le&&_(qe,e)?Re[e]=qe[e]:Re[e]=Fe("Symbol."+e)),Re[e]},Ye=Je("species"),He=function(e,t){var n;return Pe(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!Pe(n.prototype)?b(n)&&null===(n=n[Ye])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},Ke=oe("navigator","userAgent")||"",We=r.process,$e=We&&We.versions,Ue=$e&&$e.v8;Ue?ee=(Z=Ue.split("."))[0]+Z[1]:Ke&&(!(Z=Ke.match(/Edge\/(\d+)/))||Z[1]>=74)&&(Z=Ke.match(/Chrome\/(\d+)/))&&(ee=Z[1]);var Ge=ee&&+ee,Be=Je("species"),Ve=function(e){return Ge>=51||!o((function(){var t=[];return(t.constructor={})[Be]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Xe=Je("isConcatSpreadable"),Qe=Ge>=51||!o((function(){var e=[];return e[Xe]=!1,e.concat()[0]!==e})),Ze=Ve("concat"),et=function(e){if(!b(e))return!1;var t=e[Xe];return void 0!==t?!!t:Pe(e)};Te({target:"Array",proto:!0,forced:!Qe||!Ze},{concat:function(e){var t,n,a,r,o,i=Ne(this),u=He(i,0),s=0;for(t=-1,a=arguments.length;t<a;t++)if(o=-1===t?i:arguments[t],et(o)){if(s+(r=ce(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<r;n++,s++)n in o&&Ce(u,s,o[n])}else{if(s>=9007199254740991)throw TypeError("Maximum allowed index exceeded");Ce(u,s++,o)}return u.length=s,u}});var tt,nt,at=[].join,rt=y!=Object,ot=(tt=",",!!(nt=[]["join"])&&o((function(){nt.call(null,tt||function(){throw 1},1)})));Te({target:"Array",proto:!0,forced:rt||!ot},{join:function(e){return at.call(p(this),void 0===e?",":e)}});var it=Object.defineProperty,ut={},st=function(e){throw e},lt=function(e,t){if(_(ut,e))return ut[e];t||(t={});var n=[][e],a=!!_(t,"ACCESSORS")&&t.ACCESSORS,r=_(t,0)?t[0]:st,u=_(t,1)?t[1]:void 0;return ut[e]=!!n&&!o((function(){if(a&&!i)return!0;var e={length:-1};a?it(e,1,{enumerable:!0,get:st}):e[1]=1,n.call(e,r,u)}))},ct=Ve("slice"),dt=lt("slice",{ACCESSORS:!0,0:0,1:2}),mt=Je("species"),ht=[].slice,yt=Math.max;function ft(e){return(ft="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function pt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function bt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function gt(e,t,n){return t&&bt(e.prototype,t),n&&bt(e,n),e}function vt(e){return function(e){if(Array.isArray(e))return _t(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return _t(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _t(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}Te({target:"Array",proto:!0,forced:!ct||!dt},{slice:function(e,t){var n,a,r,o=p(this),i=ce(o.length),u=he(e,i),s=he(void 0===t?i:t,i);if(Pe(o)&&("function"!=typeof(n=o.constructor)||n!==Array&&!Pe(n.prototype)?b(n)&&null===(n=n[mt])&&(n=void 0):n=void 0,n===Array||void 0===n))return ht.call(o,u,s);for(a=new(void 0===n?Array:n)(yt(s-u,0)),r=0;u<s;u++,r++)u in o&&Ce(a,r,o[u]);return a.length=r,a}}),function(e){if(e&&"undefined"!=typeof window){var t=document.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e,document.head.appendChild(t)}}("date-input-polyfill {\n  background: #fff;\n  color: #000;\n  text-shadow: none;\n  border: 0;\n  padding: 0;\n  height: auto;\n  width: auto;\n  line-height: normal;\n  border-radius: 0;\n  font-family: sans-serif;\n  font-size: 14px;\n  position: absolute !important;\n  text-align: center;\n  box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 12px 17px 2px rgba(0, 0, 0, 0.14), 0 5px 22px 4px rgba(0, 0, 0, 0.12);\n  cursor: default;\n  z-index: 1;\n}\ndate-input-polyfill[data-open=false] {\n  display: none;\n}\ndate-input-polyfill[data-open=true] {\n  display: block;\n}\ndate-input-polyfill select, date-input-polyfill table, date-input-polyfill th, date-input-polyfill td {\n  background: #fff;\n  color: #000;\n  text-shadow: none;\n  border: 0;\n  padding: 0;\n  height: auto;\n  width: auto;\n  line-height: normal;\n  border-radius: 0;\n  font-family: sans-serif;\n  font-size: 14px;\n  box-shadow: none;\n}\ndate-input-polyfill select, date-input-polyfill button {\n  border: 0;\n  border-bottom: 1px solid #E0E0E0;\n  height: 24px;\n  vertical-align: top;\n}\ndate-input-polyfill select {\n  width: 50%;\n}\ndate-input-polyfill select:first-of-type {\n  border-right: 1px solid #E0E0E0;\n  width: 30%;\n}\ndate-input-polyfill button {\n  padding: 0;\n  width: 20%;\n  background: #E0E0E0;\n}\ndate-input-polyfill table {\n  border-collapse: collapse;\n}\ndate-input-polyfill th, date-input-polyfill td {\n  width: 32px;\n  padding: 4px;\n  text-align: center;\n}\ndate-input-polyfill td[data-day] {\n  cursor: pointer;\n}\ndate-input-polyfill td[data-day]:hover {\n  background: #E0E0E0;\n}\ndate-input-polyfill [data-selected] {\n  font-weight: bold;\n  background: #D8EAF6;\n}\n\ninput[data-has-picker]::-ms-clear {\n  display: none;\n}");var jt=function(){function e(){var t=this;if(pt(this,e),e.instance)return e.instance;this.date=new Date,this.input=null,this.isOpen=!1,this.container=document.createElement("date-input-polyfill"),this.year=document.createElement("select"),e.createRangeSelect(this.year,this.date.getFullYear()-80,this.date.getFullYear()+20),this.year.className="yearSelect",this.year.addEventListener("change",(function(){t.date.setYear(t.year.value),t.refreshDaysMatrix()})),this.container.appendChild(this.year),this.month=document.createElement("select"),this.month.className="monthSelect",this.month.addEventListener("change",(function(){t.date.setMonth(t.month.value),t.refreshDaysMatrix()})),this.container.appendChild(this.month),this.today=document.createElement("button"),this.today.textContent="Today",this.today.addEventListener("click",(function(){t.date=new Date,t.setInput()})),this.container.appendChild(this.today);var n=document.createElement("table");this.daysHead=document.createElement("thead"),this.days=document.createElement("tbody"),this.days.addEventListener("click",(function(e){var n=e.target;if(!n.hasAttribute("data-day"))return!1;var a=t.days.querySelector("[data-selected]");a&&a.removeAttribute("data-selected"),n.setAttribute("data-selected",""),t.date.setDate(parseInt(n.textContent)),t.setInput()})),n.appendChild(this.daysHead),n.appendChild(this.days),this.container.appendChild(n),this.hide(),document.body.appendChild(this.container),document.addEventListener("click",(function(e){for(var n=e.target,a=n===t.container;!a&&(n=n.parentNode);)a=n===t.container;"date"!==e.target.getAttribute("type")&&!a&&t.hide()}))}return gt(e,[{key:"hide",value:function(){this.container.setAttribute("data-open",this.isOpen=!1)}},{key:"show",value:function(){this.container.setAttribute("data-open",this.isOpen=!0)}},{key:"goto",value:function(e){var t=e.getBoundingClientRect();this.container.style.top="".concat(t.top+t.height+(document.documentElement.scrollTop||document.body.scrollTop),"px"),this.container.style.left="".concat(t.left+(document.documentElement.scrollLeft||document.body.scrollLeft),"px"),this.show()}},{key:"attachTo",value:function(e){if(e===this.input&&this.isOpen)return!1;this.input=e,this.sync(),this.goto(this.input.element)}},{key:"sync",value:function(){this.input.element.valueAsDate?this.date=e.absoluteDate(this.input.element.valueAsDate):this.date=new Date,this.year.value=this.date.getFullYear(),this.month.value=this.date.getMonth(),this.refreshDaysMatrix()}},{key:"setInput",value:function(){var e=this;this.input.element.value="".concat(this.date.getFullYear(),"-").concat("0".concat(this.date.getMonth()+1).slice(-2),"-").concat("0".concat(this.date.getDate()).slice(-2)),this.input.element.focus(),setTimeout((function(){e.hide()}),100),this.pingInput()}},{key:"refreshLocale",value:function(){if(this.locale===this.input.locale)return!1;this.locale=this.input.locale;for(var t=["<tr>"],n=0,a=this.input.localeText.days.length;n<a;++n)t.push('<th scope="col">'.concat(this.input.localeText.days[n],"</th>"));this.daysHead.innerHTML=t.join(""),e.createRangeSelect(this.month,0,11,this.input.localeText.months,this.date.getMonth()),this.today.textContent=this.input.localeText.today}},{key:"refreshDaysMatrix",value:function(){this.refreshLocale();for(var t=this.date.getFullYear(),n=this.date.getMonth(),a=new Date(t,n,1).getDay(),r=new Date(this.date.getFullYear(),n+1,0).getDate(),o=e.absoluteDate(this.input.element.valueAsDate)||!1,i=o&&t===o.getFullYear()&&n===o.getMonth(),u=[],s=0;s<r+a;++s)if(s%7==0&&u.push("\n          ".concat(0!==s?"</tr>":"","\n          <tr>\n        ")),s+1<=a)u.push("<td></td>");else{var l=s+1-a,c=i&&o.getDate()===l;u.push("<td data-day ".concat(c?"data-selected":"",">\n          ").concat(l,"\n        </td>"))}this.days.innerHTML=u.join("")}},{key:"pingInput",value:function(){var e,t;try{e=new Event("input"),t=new Event("change")}catch(n){(e=document.createEvent("KeyboardEvent")).initEvent("input",!0,!1),(t=document.createEvent("KeyboardEvent")).initEvent("change",!0,!1)}this.input.element.dispatchEvent(e),this.input.element.dispatchEvent(t)}}],[{key:"createRangeSelect",value:function(e,t,n,a,r){e.innerHTML="";for(var o=t;o<=n;++o){var i=document.createElement("option");e.appendChild(i);var u=a?a[o-t]:o;i.text=u,i.value=o,o===r&&(i.selected="selected")}return e}},{key:"absoluteDate",value:function(e){return e&&new Date(e.getTime()+6e4*e.getTimezoneOffset())}}]),e}();jt.instance=null;var kt=A.f,wt=o((function(){kt(1)}));Te({target:"Object",stat:!0,forced:!i||wt,sham:!i},{getOwnPropertyDescriptor:function(e,t){return kt(p(e),t)}});var St=!o((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Mt=W("IE_PROTO"),At=Object.prototype,xt=St?Object.getPrototypeOf:function(e){return e=Ne(e),_(e,Mt)?e[Mt]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?At:null};Te({target:"Object",stat:!0,forced:o((function(){xt(1)})),sham:!St},{getPrototypeOf:function(e){return xt(Ne(e))}});var Et=function(){var e=x(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t};function Ot(e,t){return RegExp(e,t)}var zt,Dt,Tt={UNSUPPORTED_Y:o((function(){var e=Ot("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),BROKEN_CARET:o((function(){var e=Ot("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},Pt=RegExp.prototype.exec,Nt=String.prototype.replace,Ct=Pt,Lt=(zt=/a/,Dt=/b*/g,Pt.call(zt,"a"),Pt.call(Dt,"a"),0!==zt.lastIndex||0!==Dt.lastIndex),It=Tt.UNSUPPORTED_Y||Tt.BROKEN_CARET,Rt=void 0!==/()??/.exec("")[1];(Lt||Rt||It)&&(Ct=function(e){var t,n,a,r,o=this,i=It&&o.sticky,u=Et.call(o),s=o.source,l=0,c=e;return i&&(-1===(u=u.replace("y","")).indexOf("g")&&(u+="g"),c=String(e).slice(o.lastIndex),o.lastIndex>0&&(!o.multiline||o.multiline&&"\n"!==e[o.lastIndex-1])&&(s="(?: "+s+")",c=" "+c,l++),n=new RegExp("^(?:"+s+")",u)),Rt&&(n=new RegExp("^"+s+"$(?!\\s)",u)),Lt&&(t=o.lastIndex),a=Pt.call(i?n:o,c),i?a?(a.input=a.input.slice(l),a[0]=a[0].slice(l),a.index=o.lastIndex,o.lastIndex+=a[0].length):o.lastIndex=0:Lt&&a&&(o.lastIndex=o.global?a.index+a[0].length:t),Rt&&a&&a.length>1&&Nt.call(a[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(a[r]=void 0)})),a});var qt=Ct;Te({target:"RegExp",proto:!0,forced:/./.exec!==qt},{exec:qt});var Ft=Je("species"),Jt=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),Yt="$0"==="a".replace(/./,"$0"),Ht=Je("replace"),Kt=!!/./[Ht]&&""===/./[Ht]("a","$0"),Wt=!o((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),$t=function(e,t,n,a){var r=Je(e),i=!o((function(){var t={};return t[r]=function(){return 7},7!=""[e](t)})),u=i&&!o((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[Ft]=function(){return n},n.flags="",n[r]=/./[r]),n.exec=function(){return t=!0,null},n[r](""),!t}));if(!i||!u||"replace"===e&&(!Jt||!Yt||Kt)||"split"===e&&!Wt){var s=/./[r],l=n(r,""[e],(function(e,t,n,a,r){return t.exec===qt?i&&!r?{done:!0,value:s.call(t,n,a)}:{done:!0,value:e.call(n,t,a)}:{done:!1}}),{REPLACE_KEEPS_$0:Yt,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:Kt}),c=l[0],d=l[1];ne(String.prototype,e,c),ne(RegExp.prototype,r,2==t?function(e,t){return d.call(e,this,t)}:function(e){return d.call(e,this)})}a&&z(RegExp.prototype[r],"sham",!0)},Ut=function(e){return function(t,n){var a,r,o=String(f(t)),i=se(n),u=o.length;return i<0||i>=u?e?"":void 0:(a=o.charCodeAt(i))<55296||a>56319||i+1===u||(r=o.charCodeAt(i+1))<56320||r>57343?e?o.charAt(i):a:e?o.slice(i,i+2):r-56320+(a-55296<<10)+65536}},Gt={codeAt:Ut(!1),charAt:Ut(!0)}.charAt,Bt=function(e,t,n){return t+(n?Gt(e,t).length:1)},Vt=function(e,t){var n=e.exec;if("function"==typeof n){var a=n.call(e,t);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==m(e))throw TypeError("RegExp#exec called on incompatible receiver");return qt.call(e,t)},Xt=Math.max,Qt=Math.min,Zt=Math.floor,en=/\$([$&'`]|\d\d?|<[^>]*>)/g,tn=/\$([$&'`]|\d\d?)/g;$t("replace",2,(function(e,t,n,a){var r=a.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,o=a.REPLACE_KEEPS_$0,i=r?"$":"$0";return[function(n,a){var r=f(this),o=null==n?void 0:n[e];return void 0!==o?o.call(n,r,a):t.call(String(r),n,a)},function(e,a){if(!r&&o||"string"==typeof a&&-1===a.indexOf(i)){var s=n(t,e,this,a);if(s.done)return s.value}var l=x(e),c=String(this),d="function"==typeof a;d||(a=String(a));var m=l.global;if(m){var h=l.unicode;l.lastIndex=0}for(var y=[];;){var f=Vt(l,c);if(null===f)break;if(y.push(f),!m)break;""===String(f[0])&&(l.lastIndex=Bt(c,ce(l.lastIndex),h))}for(var p,b="",g=0,v=0;v<y.length;v++){f=y[v];for(var _=String(f[0]),j=Xt(Qt(se(f.index),c.length),0),k=[],w=1;w<f.length;w++)k.push(void 0===(p=f[w])?p:String(p));var S=f.groups;if(d){var M=[_].concat(k,j,c);void 0!==S&&M.push(S);var A=String(a.apply(void 0,M))}else A=u(_,c,j,k,S,a);j>=g&&(b+=c.slice(g,j)+A,g=j+_.length)}return b+c.slice(g)}];function u(e,n,a,r,o,i){var u=a+e.length,s=r.length,l=tn;return void 0!==o&&(o=Ne(o),l=en),t.call(i,l,(function(t,i){var l;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,a);case"'":return n.slice(u);case"<":l=o[i.slice(1,-1)];break;default:var c=+i;if(0===c)return t;if(c>s){var d=Zt(c/10);return 0===d?t:d<=s?void 0===r[d-1]?i.charAt(1):r[d-1]+i.charAt(1):t}l=r[c-1]}return void 0===l?"":l}))}}));var nn=Je("match"),an=function(e){var t;return b(e)&&(void 0!==(t=e[nn])?!!t:"RegExp"==m(e))},rn=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},on=Je("species"),un=[].push,sn=Math.min,ln=!o((function(){return!RegExp(4294967295,"y")}));$t("split",2,(function(e,t,n){var a;return a="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var a=String(f(this)),r=void 0===n?4294967295:n>>>0;if(0===r)return[];if(void 0===e)return[a];if(!an(e))return t.call(a,e,r);for(var o,i,u,s=[],l=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),c=0,d=new RegExp(e.source,l+"g");(o=qt.call(d,a))&&!((i=d.lastIndex)>c&&(s.push(a.slice(c,o.index)),o.length>1&&o.index<a.length&&un.apply(s,o.slice(1)),u=o[0].length,c=i,s.length>=r));)d.lastIndex===o.index&&d.lastIndex++;return c===a.length?!u&&d.test("")||s.push(""):s.push(a.slice(c)),s.length>r?s.slice(0,r):s}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var r=f(this),o=null==t?void 0:t[e];return void 0!==o?o.call(t,r,n):a.call(String(r),t,n)},function(e,r){var o=n(a,e,this,r,a!==t);if(o.done)return o.value;var i=x(e),u=String(this),s=function(e,t){var n,a=x(e).constructor;return void 0===a||null==(n=x(a)[on])?t:rn(n)}(i,RegExp),l=i.unicode,c=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(ln?"y":"g"),d=new s(ln?i:"^(?:"+i.source+")",c),m=void 0===r?4294967295:r>>>0;if(0===m)return[];if(0===u.length)return null===Vt(d,u)?[u]:[];for(var h=0,y=0,f=[];y<u.length;){d.lastIndex=ln?y:0;var p,b=Vt(d,ln?u:u.slice(y));if(null===b||(p=sn(ce(d.lastIndex+(ln?0:y)),u.length))===h)y=Bt(u,y,l);else{if(f.push(u.slice(h,y)),f.length===m)return f;for(var g=1;g<=b.length-1;g++)if(f.push(b[g]),f.length===m)return f;y=h=p}}return f.push(u.slice(h)),f}]}),!ln);var cn="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",dn="["+cn+"]",mn=RegExp("^"+dn+dn+"*"),hn=RegExp(dn+dn+"*$"),yn=function(e){return function(t){var n=String(f(t));return 1&e&&(n=n.replace(mn,"")),2&e&&(n=n.replace(hn,"")),n}},fn={start:yn(1),end:yn(2),trim:yn(3)},pn=fn.trim;Te({target:"String",proto:!0,forced:function(e){return o((function(){return!!cn[e]()||"âÂá "!="âÂá "[e]()||cn[e].name!==e}))}("trim")},{trim:function(){return pn(this)}});var bn=Object.keys||function(e){return be(e,ge)},gn=Object.assign,vn=Object.defineProperty,_n=!gn||o((function(){if(i&&1!==gn({b:1},gn(vn({},"a",{enumerable:!0,get:function(){vn(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=gn({},e)[n]||"abcdefghijklmnopqrst"!=bn(gn({},t)).join("")}))?function(e,t){for(var n=Ne(e),a=arguments.length,r=1,o=je.f,u=l.f;a>r;)for(var s,c=y(arguments[r++]),d=o?bn(c).concat(o(c)):bn(c),m=d.length,h=0;m>h;)s=d[h++],i&&!u.call(c,s)||(n[s]=c[s]);return n}:gn;Te({target:"Object",stat:!0,forced:Object.assign!==_n},{assign:_n});var jn,kn=[].push,wn=function(e){var t=1==e,n=2==e,a=3==e,r=4==e,o=6==e,i=5==e||o;return function(u,s,l,c){for(var d,m,h=Ne(u),f=y(h),p=function(e,t,n){if(rn(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,a){return e.call(t,n,a)};case 3:return function(n,a,r){return e.call(t,n,a,r)}}return function(){return e.apply(t,arguments)}}(s,l,3),b=ce(f.length),g=0,v=c||He,_=t?v(u,b):n?v(u,0):void 0;b>g;g++)if((i||g in f)&&(m=p(d=f[g],g,h),e))if(t)_[g]=m;else if(m)switch(e){case 3:return!0;case 5:return d;case 6:return g;case 2:kn.call(_,d)}else if(r)return!1;return o?-1:a||r?r:_}},Sn={forEach:wn(0),map:wn(1),filter:wn(2),some:wn(3),every:wn(4),find:wn(5),findIndex:wn(6)},Mn=i?Object.defineProperties:function(e,t){x(e);for(var n,a=bn(t),r=a.length,o=0;r>o;)O.f(e,n=a[o++],t[n]);return e},An=oe("document","documentElement"),xn=W("IE_PROTO"),En=function(){},On=function(e){return"<script>"+e+"<\/script>"},zn=function(){try{jn=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;zn=jn?function(e){e.write(On("")),e.close();var t=e.parentWindow.Object;return e=null,t}(jn):((t=w("iframe")).style.display="none",An.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(On("document.F=Object")),e.close(),e.F);for(var n=ge.length;n--;)delete zn.prototype[ge[n]];return zn()};$[xn]=!0;var Dn=Object.create||function(e,t){var n;return null!==e?(En.prototype=x(e),n=new En,En.prototype=null,n[xn]=e):n=zn(),void 0===t?n:Mn(n,t)},Tn=Je("unscopables"),Pn=Array.prototype;null==Pn[Tn]&&O.f(Pn,Tn,{configurable:!0,value:Dn(null)});var Nn=function(e){Pn[Tn][e]=!0},Cn=Sn.find,Ln=!0,In=lt("find");"find"in[]&&Array(1).find((function(){Ln=!1})),Te({target:"Array",proto:!0,forced:Ln||!In},{find:function(e){return Cn(this,e,arguments.length>1?arguments[1]:void 0)}}),Nn("find");var Rn=fe.includes;Te({target:"Array",proto:!0,forced:!lt("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return Rn(this,e,arguments.length>1?arguments[1]:void 0)}}),Nn("includes");var qn=Sn.map,Fn=Ve("map"),Jn=lt("map");Te({target:"Array",proto:!0,forced:!Fn||!Jn},{map:function(e){return qn(this,e,arguments.length>1?arguments[1]:void 0)}});var Yn=function(e){if(an(e))throw TypeError("The method doesn't accept regular expressions");return e},Hn=Je("match");function Kn(e){var t=e.replace(/-[a-z0-9]+$/,"");return t&&t!==e?t:null}function Wn(e){for(var t,n={ar:{today:"Ø§ÙÙÙÙ",days:["Ø§ÙØ£Ø­Ø¯","Ø§ÙØ¥Ø«ÙÙÙ","Ø§ÙØ«ÙØ§Ø«Ø§Ø¡","Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡","Ø§ÙØ®ÙÙØ³","Ø§ÙØ¬ÙØ¹Ø©","Ø§ÙØ³Ø¨Øª"],months:["ÙØ­Ø±Ù","ØµÙØ±","Ø±Ø¨ÙØ¹Â Ø§ÙØ£ÙÙ","Ø±Ø¨ÙØ¹Â Ø§ÙØ«Ø§ÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ£ÙÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ«Ø§ÙÙØ©","Ø±Ø¬Ø¨","Ø´Ø¹Ø¨Ø§Ù","Ø±ÙØ¶Ø§Ù","Ø´ÙØ§Ù","Ø°ÙÂ Ø§ÙÙØ¹Ø¯Ø©","Ø°ÙÂ Ø§ÙØ­Ø¬Ø©"]},bg:{today:"Ð´Ð½ÐµÑ",days:["Ð½ÐµÐ´","Ð¿Ð¾Ð½","Ð²Ñ","ÑÑ","ÑÐµÑÐ²","Ð¿ÐµÑ","ÑÑÐ±"],months:["ÑÐ½ÑÐ°ÑÐ¸","ÑÐµÐ²ÑÑÐ°ÑÐ¸","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐ¸Ð»","Ð¼Ð°Ð¹","ÑÐ½Ð¸","ÑÐ»Ð¸","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸","Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸","Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸","Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸"]},ca:{today:"avui",days:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],months:["gener","febrer","marÃ§","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"]},cs:{today:"dnes",days:["ne","po","Ãºt","st","Ät","pÃ¡","so"],months:["leden","Ãºnor","bÅezen","duben","kvÄten","Äerven","Äervenec","srpen","zÃ¡ÅÃ­","ÅÃ­jen","listopad","prosinec"]},da:{today:"i dag",days:["sÃ¸","ma","ti","on","to","fr","lÃ¸"],months:["januar","februar","marts","april","maj","juni","juli","august","september","oktober","november","december"]},de:{today:"heute",days:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]},el:{today:"ÏÎ®Î¼ÎµÏÎ±",days:["ÎÏÏ","ÎÎµÏ","Î¤ÏÎ¹","Î¤ÎµÏ","Î ÎµÎ¼","Î Î±Ï","Î£Î±Î²"],months:["ÎÎ±Î½Î¿ÏÎ¬ÏÎ¹Î¿Ï","Î¦ÎµÎ²ÏÎ¿ÏÎ¬ÏÎ¹Î¿Ï","ÎÎ¬ÏÏÎ¹Î¿Ï","ÎÏÏÎ¯Î»Î¹Î¿Ï","ÎÎ¬Î¹Î¿Ï","ÎÎ¿ÏÎ½Î¹Î¿Ï","ÎÎ¿ÏÎ»Î¹Î¿Ï","ÎÏÎ³Î¿ÏÏÏÎ¿Ï","Î£ÎµÏÏÎ­Î¼Î²ÏÎ¹Î¿Ï","ÎÎºÏÏÎ²ÏÎ¹Î¿Ï","ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï","ÎÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï"]},en:{today:"today",days:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"]},es:{today:"hoy",days:["dom","lun","mar","miÃ©","jue","vie","sÃ¡b"],months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},fi:{today:"tÃ¤nÃ¤Ã¤n",days:["su","ma","ti","ke","to","pe","la"],months:["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesÃ¤kuu","heinÃ¤kuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"]},fr:{today:"aujourd'hui",days:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],months:["janvier","fÃ©vrier","mars","avril","mai","juin","juillet","aoÃ»t","septembre","octobre","novembre","dÃ©cembre"]},he:{today:"××××",days:["×××Â ×","×××Â ×","×××Â ×","×××Â ×","×××Â ×","×××Â ×","×©××ª"],months:["×× ×××¨","×¤××¨×××¨","××¨×¥","××¤×¨××","×××","××× ×","××××","×××××¡×","×¡×¤××××¨","×××§××××¨","× ×××××¨","××¦×××¨"]},hu:{today:"Ma",days:["V","H","K","Sze","Cs","P","Szo"],months:["januÃ¡r","februÃ¡r","mÃ¡rcius","Ã¡prilis","mÃ¡jus","jÃºnius","jÃºlius","augusztus","szeptember","oktÃ³ber","november","december"]},is:{today:"Ã dag",days:["sun.","mÃ¡n.","Ã¾ri.","miÃ°.","fim.","fÃ¶s.","lau."],months:["janÃºar","febrÃºar","mars","aprÃ­l","maÃ­","jÃºnÃ­","jÃºlÃ­","Ã¡gÃºst","september","oktÃ³ber","nÃ³vember","desember"]},it:{today:"oggi",days:["dom","lun","mar","mer","gio","ven","sab"],months:["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"]},ja:{today:"ä»æ¥",days:["æ¥","æ","ç«","æ°´","æ¨","é","å"],months:["1æ","2æ","3æ","4æ","5æ","6æ","7æ","8æ","9æ","10æ","11æ","12æ"]},ko:{today:"ì¤ë",days:["ì¼","ì","í","ì","ëª©","ê¸","í "],months:["1ì","2ì","3ì","4ì","5ì","6ì","7ì","8ì","9ì","10ì","11ì","12ì"]},nl:{today:"vandaag",days:["zo","ma","di","wo","do","vr","za"],months:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"]},no:{today:"i dag",days:["sÃ¸","ma","ti","on","to","fr","lÃ¸"],months:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"]},pl:{today:"dzisiaj",days:["N","Pn","Wt","År","Cz","Pt","So"],months:["styczeÅ","luty","marzec","kwiecieÅ","maj","czerwiec","lipiec","sierpieÅ","wrzesieÅ","paÅºdziernik","listopad","grudzieÅ"]},pt:{today:"hoje",days:["dom","seg","ter","qua","qui","sex","sÃ¡b"],months:["janeiro","fevereiro","marÃ§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"]},rm:{today:"oz",days:["du","gli","ma","me","gie","ve","so"],months:["schaner","favrer","mars","avrigl","matg","zercladur","fanadur","avust","settember","october","november","december"]},ro:{today:"astÄzi",days:["D","L","Ma","Mi","J","V","S"],months:["ianuarie","februarie","martie","aprilie","mai","iunie","iulie","august","septembrie","octombrie","noiembrie","decembrie"]},ru:{today:"CÐµÐ³Ð¾Ð´Ð½Ñ",days:["ÐÑ","ÐÐ½","ÐÑ","Ð¡Ñ","Ð§Ñ","ÐÑ","Ð¡Ð±"],months:["Ð¯Ð½Ð²Ð°ÑÑ","Ð¤ÐµÐ²ÑÐ°Ð»Ñ","ÐÐ°ÑÑ","ÐÐ¿ÑÐµÐ»Ñ","ÐÐ°Ð¹","ÐÑÐ½Ñ","ÐÑÐ»Ñ","ÐÐ²Ð³ÑÑÑ","Ð¡ÐµÐ½ÑÑÐ±ÑÑ","ÐÐºÑÑÐ±ÑÑ","ÐÐ¾ÑÐ±ÑÑ","ÐÐµÐºÐ°Ð±ÑÑ"]},hr:{today:"danas",days:["ned","pon","uto","sri","Äet","pet","sub"],months:["sijeÄanj","veljaÄa","oÅ¾ujak","travanj","svibanj","lipanj","srpanj","kolovoz","rujan","listopad","studeni","prosinac"]},sk:{today:"dnes",days:["ne","po","ut","st","Å¡t","pi","so"],months:["januÃ¡r","februÃ¡r","marec","aprÃ­l","mÃ¡j","jÃºn","jÃºl","august","september","oktÃ³ber","november","december"]},sq:{today:"sot",days:["Die","HÃ«n","Mar","MÃ«r","Enj","Pre","Sht"],months:["janar","shkurt","mars","prill","maj","qershor","korrik","gusht","shtator","tetor","nÃ«ntor","dhjetor"]},sv:{today:"i dag",days:["sÃ¶","mÃ¥","ti","on","to","fr","lÃ¶"],months:["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"]},th:{today:"à¹à¸à¸§à¸±à¸à¸à¸µà¹",days:["à¸­à¸².","à¸.","à¸­.","à¸.","à¸à¸¤.","à¸¨.","à¸ª."],months:["à¸¡à¸à¸£à¸²à¸à¸¡","à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹","à¸¡à¸µà¸à¸²à¸à¸¡","à¹à¸¡à¸©à¸²à¸¢à¸","à¸à¸¤à¸©à¸ à¸²à¸à¸¡","à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸","à¸à¸£à¸à¸à¸²à¸à¸¡","à¸ªà¸´à¸à¸«à¸²à¸à¸¡","à¸à¸±à¸à¸¢à¸²à¸¢à¸","à¸à¸¸à¸¥à¸²à¸à¸¡","à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸","à¸à¸±à¸à¸§à¸²à¸à¸¡"]},tr:{today:"bugÃ¼n",days:["Paz","Pzt","Sal","Ãar","Per","Cum","Cmt"],months:["Ocak","Åubat","Mart","Nisan","MayÄ±s","Haziran","Temmuz","AÄustos","EylÃ¼l","Ekim","KasÄ±m","AralÄ±k"]},ur:{today:"Ø¢Ø¬",days:["Ø§ØªÙØ§Ø±","Ù¾ÙØ±","ÙÙÚ¯Ù","Ø¨Ø¯Ú¾","Ø¬ÙØ¹Ø±Ø§Øª","Ø¬ÙØ¹Ù","ÙÙØªÙ"],months:["Ø¬ÙÙØ±Û","ÙØ±ÙØ±Û","ÙØ§Ø±Ú","Ø§Ù¾Ø±ÛÙ","ÙØ¦Û","Ø¬ÙÙ","Ø¬ÙÙØ§Ø¦Û","Ø§Ú¯Ø³Øª","Ø³ØªÙØ¨Ø±","Ø§Ú©ØªÙØ¨Ø±","ÙÙÙØ¨Ø±","Ø¯Ø³ÙØ¨Ø±"]},id:{today:"hari ini",days:["Minggu","Sen","Sel","Rabu","Kamis","Jumat","Sabtu"],months:["Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","Nopember","Desember"]},uk:{today:"ÑÑÐ¾Ð³Ð¾Ð´Ð½Ñ",days:["ÐÐ´","ÐÐ½","ÐÑ","Ð¡Ñ","Ð§Ñ","ÐÑ","Ð¡Ð±"],months:["Ð¡ÑÑÐµÐ½Ñ","ÐÑÑÐ¸Ð¹","ÐÐµÑÐµÐ·ÐµÐ½Ñ","ÐÐ²ÑÑÐµÐ½Ñ","Ð¢ÑÐ°Ð²ÐµÐ½Ñ","Ð§ÐµÑÐ²ÐµÐ½Ñ","ÐÐ¸Ð¿ÐµÐ½Ñ","Ð¡ÐµÑÐ¿ÐµÐ½Ñ","ÐÐµÑÐµÑÐµÐ½Ñ","ÐÐ¾Ð²ÑÐµÐ½Ñ","ÐÐ¸ÑÑÐ¾Ð¿Ð°Ð´","ÐÑÑÐ´ÐµÐ½Ñ"]},be:{today:"ÑÑÐ½Ð½Ñ",days:["Ð½Ð´","Ð¿Ð½","Ð°Ñ","ÑÑ","ÑÑ","Ð¿Ñ","ÑÐ±"],months:["Ð¡ÑÑÐ´Ð·ÐµÐ½Ñ","ÐÑÑÑ","Ð¡Ð°ÐºÐ°Ð²ÑÐº","ÐÑÐ°ÑÐ°Ð²ÑÐº","ÐÐ°Ð¹","Ð§ÑÑÐ²ÐµÐ½Ñ","ÐÑÐ¿ÐµÐ½Ñ","ÐÐ½ÑÐ²ÐµÐ½Ñ","ÐÐµÑÐ°ÑÐµÐ½Ñ","ÐÐ°ÑÑÑÑÑÐ½ÑÐº","ÐÑÑÑÐ°Ð¿Ð°Ð´","Ð¡Ð½ÐµÐ¶Ð°Ð½Ñ"]},sl:{today:"danes",days:["ned","pon","tor","sre","Äet","pet","sob"],months:["januar","februar","marec","april","maj","junij","julij","avgust","september","oktober","november","december"]},et:{today:"tÃ¤na",days:["P","E","T","K","N","R","L"],months:["jaanuar","veebruar","mÃ¤rts","aprill","mai","juuni","juuli","august","september","oktoober","november","detsember"]},lv:{today:"Å¡odien",days:["sv","pr","ot","tr","ce","pk","se"],months:["janvÄris","februÄris","marts","aprÄ«lis","maijs","jÅ«nijs","jÅ«lijs","augusts","septembris","oktobris","novembris","decembris"]},lt:{today:"Å¡iandien",days:["Sk","Pr","An","Tr","Kt","Pn","Å t"],months:["sausis","vasaris","kovas","balandis","geguÅ¾Ä","birÅ¾elis","liepa","rugpjÅ«tis","rugsÄjis","spalis","lapkritis","gruodis"]},tg:{today:"Ð¸Ð¼ÑÓ¯Ð·",days:["Ð¯Ñ","ÐÑ","Ð¡Ñ","Ð§Ñ","ÐÑ","Ò¶Ð¼","Ð¨Ð½"],months:["Ð¯Ð½Ð²Ð°Ñ","Ð¤ÐµÐ²ÑÐ°Ð»","ÐÐ°ÑÑ","ÐÐ¿ÑÐµÐ»","ÐÐ°Ð¹","ÐÑÐ½","ÐÑÐ»","ÐÐ²Ð³ÑÑÑ","Ð¡ÐµÐ½ÑÑÐ±Ñ","ÐÐºÑÑÐ±Ñ","ÐÐ¾ÑÐ±Ñ","ÐÐµÐºÐ°Ð±Ñ"]},fa:{today:"Ø§ÙØ±ÙØ²",days:["Ø§ÙØ£Ø­Ø¯","Ø§ÙØ¥Ø«ÙÙÙ","Ø§ÙØ«ÙØ§Ø«Ø§Ø¡","Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡","Ø§ÙØ®ÙÙØ³","Ø§ÙØ¬ÙØ¹Ø©","Ø§ÙØ³Ø¨Øª"],months:["Ø¬Ø§ÙÙÙÙÙ","ÙÙÙØ±ÙÙÙ","ÙØ§Ø±Ø³","Ø£ÙØ±ÙÙ","ÙÙ","Ø¬ÙØ§Ù","Ø¬ÙÙÙÙ","Ø£ÙØª","Ø³Ø¨ØªÙØ¨Ø±","Ø§ÙØªÙØ¨Ø±","ÙÙÙÙØ¨Ø±","Ø¯ÙØ³ÙØ¨Ø±"]},vi:{today:"hÃ´m nay",days:["CN","Hai","Ba","TÆ°","NÄm","SaÌu","BaÌy"],months:["ThaÌng GiÃªng","ThaÌng Hai","ThaÌng Ba","ThaÌng TÆ°","ThaÌng NÄm","ThaÌng SaÌu","ThaÌng BaÌy","ThaÌng TaÌm","ThaÌng ChiÌn","ThaÌng MÆ°Æ¡Ìi","ThaÌng MÆ°Æ¡Ìi MÃ´Ì£t","ThaÌng MÆ°Æ¡Ìi Hai"]},hy:{today:"Õ¡ÕµÕ½ÖÖ",days:["Ô¿Õ«Ö","ÔµÖÕ¯","ÔµÖÖ","ÕÖÖ","ÕÕ¶Õ£","ÕÕÖ","ÕÕ¢Õ©"],months:["ÕÕ¸ÖÕ¶Õ¾Õ¡Ö","ÕÕ¥Õ¿ÖÕ¾Õ¡Ö","ÕÕ¡ÖÕ¿","Ô±ÕºÖÕ«Õ¬","ÕÕ¡ÕµÕ«Õ½","ÕÕ¸ÖÕ¶Õ«Õ½","ÕÕ¸ÖÕ¬Õ«Õ½","ÕÕ£Õ¸Õ½Õ¿Õ¸Õ½","ÕÕ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö","ÕÕ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö","ÕÕ¸ÕµÕ¥Õ´Õ¢Õ¥Ö","Ô´Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö"]},az:{today:"bugÃ¼n",days:["B","Be","Ãa","Ã","Ca","C","Å"],months:["Yanvar","Fevral","Mart","Aprel","May","Ä°yun","Ä°yul","Avgust","Sentyabr","Oktyabr","Noyabr","Dekabr"]},eu:{today:"gaur",days:["ig.","al.","as.","az.","og.","or.","lr."],months:["urtarrila","otsaila","martxoa","apirila","maiatza","ekaina","uztaila","abuztua","iraila","urria","azaroa","abendua"]},hsb:{today:"dÅºensa",days:["nje","pÃ³n","wut","srj","Å¡tw","pja","sob"],months:["januar","februar","mÄrc","apryl","meja","junij","julij","awgust","september","oktober","nowember","december"]},mk:{today:"Ð´ÐµÐ½ÐµÑ",days:["Ð½ÐµÐ´","Ð¿Ð¾Ð½","Ð²ÑÑ","ÑÑÐ´","ÑÐµÑ","Ð¿ÐµÑ","ÑÐ°Ð±"],months:["ÑÐ°Ð½ÑÐ°ÑÐ¸","ÑÐµÐ²ÑÑÐ°ÑÐ¸","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐ¸Ð»","Ð¼Ð°Ñ","ÑÑÐ½Ð¸","ÑÑÐ»Ð¸","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸","Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸","Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸","Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸"]},tn:{today:"Gompieno",days:["Ltp.","Mos.","Lbd.","Lbr.","Lbn.","Lbt.","Lmt."],months:["Ferikgong","Tlhakole","Mopitloe","Moranang","Motsheganong","Seetebosigo","Phukwi","Phatwe","Lwetse","Diphalane","Ngwanatsele","Sedimothole"]},xh:{today:"namhlanje",days:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["Mqungu","Mdumba","Kwindla","Tshazimpuzi","Canzibe","Silimela","Khala","Thupha","Msintsi","Dwarha","Nkanga","Mnga"]},zu:{today:"namhlanje",days:["Son.","Mso.","Bi.","Tha.","Ne.","Hla.","Mgq."],months:["uMasingana","uNhlolanja","uNdasa","uMbaso","uNhlaba","uNhlangulana","uNtulikazi","uNcwaba","uMandulo","uMfumfu","uLwezi","uZibandlela"]},af:{today:"vandag",days:["Son","Maan","Dins","Woen","Dond","Vry","Sat"],months:["Januarie","Februarie","Maart","April","Mei","Junie","Julie","Augustus","September","Oktober","November","Desember"]},ka:{today:"áá¦áá¡",days:["áááá á","áá á¨ááááá","á¡ááá¨ááááá","ááá®á¨ááááá","á®á£áá¨ááááá","ááá áá¡áááá","á¨ááááá"],months:["áááááá á","ááááá áááá","ááá á¢á","ááá ááá","áááá¡á","ááááá¡á","ááááá¡á","ááááá¡á¢á","á¡áá¥á¢ááááá á","áá¥á¢ááááá á","ááááááá á","áááááááá á"]},fo:{today:"Ã­ dag",days:["sun","mÃ¡n","tÃ½s","mik","hÃ³s","frÃ­","leyg"],months:["januar","februar","mars","aprÃ­l","mai","juni","juli","august","september","oktober","november","desember"]},hi:{today:"à¤à¤",days:["à¤°à¤µà¤¿.","à¤¸à¥à¤®.","à¤®à¤à¤à¤².","à¤¬à¥à¤§.","à¤à¥à¤°à¥.","à¤¶à¥à¤à¥à¤°.","à¤¶à¤¨à¤¿."],months:["à¤à¤¨à¤µà¤°à¥","à¤«à¤°à¤µà¤°à¥","à¤®à¤¾à¤°à¥à¤","à¤à¤ªà¥à¤°à¥à¤²","à¤®à¤","à¤à¥à¤¨","à¤à¥à¤²à¤¾à¤","à¤à¤à¤¸à¥à¤¤","à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°","à¤à¤à¥à¤¤à¥à¤¬à¤°","à¤¨à¤µà¤®à¥à¤¬à¤°","à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°"]},mt:{today:"illum",days:["Ä¦ad","Tne","Tli","Erb","Ä¦am","Ä im","Sib"],months:["Jannar","Frar","Marzu","April","Mejju","Ä unju","Lulju","Awissu","Settembru","Ottubru","Novembru","DiÄembru"]},se:{today:"odne",days:["sotn","vuos","maÅ","gask","duor","bear","lÃ¡v"],months:["oÄÄajagemÃ¡nnu","guovvamÃ¡nnu","njukÄamÃ¡nnu","cuoÅomÃ¡nnu","miessemÃ¡nnu","geassemÃ¡nnu","suoidnemÃ¡nnu","borgemÃ¡nnu","ÄakÄamÃ¡nnu","golggotmÃ¡nnu","skÃ¡bmamÃ¡nnu","juovlamÃ¡nnu"]},ga:{today:"inniu",days:["Domh","Luan","MÃ¡ir","CÃ©ad","DÃ©ar","Aoi","Sath"],months:["EanÃ¡ir","Feabhra","MÃ¡rta","AibreÃ¡n","Bealtaine","Meitheamh","IÃºil","LÃºnasa","MeÃ¡n FÃ³mhair","Deireadh FÃ³mhair","Samhain","Nollaig"]},ms:{today:"hari ini",days:["Ahad","Isnin","Sel","Rabu","Khamis","Jumaat","Sabtu"],months:["Januari","Februari","Mac","April","Mei","Jun","Julai","Ogos","September","Oktober","November","Disember"]},kk:{today:"Ð±Ò¯Ð³ÑÐ½",days:["ÐÐº","ÐÑ","Ð¡Ñ","Ð¡Ñ","ÐÑ","ÐÐ¼","Ð¡Ð½"],months:["ÒÐ°Ò£ÑÐ°Ñ","Ð°ÒÐ¿Ð°Ð½","Ð½Ð°ÑÑÑÐ·","ÑÓÑÑÑ","Ð¼Ð°Ð¼ÑÑ","Ð¼Ð°ÑÑÑÐ¼","ÑÑÐ»Ð´Ðµ","ÑÐ°Ð¼ÑÐ·","ÒÑÑÐºÒ¯Ð¹ÐµÐº","ÒÐ°Ð·Ð°Ð½","ÒÐ°ÑÐ°ÑÐ°","Ð¶ÐµÐ»ÑÐ¾ÒÑÐ°Ð½"]},ky:{today:"Ð±Ò¯Ð³Ò¯Ð½",days:["ÐÑ","ÐÑ","Ð¨Ñ","Ð¨Ñ","ÐÑ","ÐÐ¼","ÐÑ"],months:["Ð¯Ð½Ð²Ð°ÑÑ","Ð¤ÐµÐ²ÑÐ°Ð»Ñ","ÐÐ°ÑÑ","ÐÐ¿ÑÐµÐ»Ñ","ÐÐ°Ð¹","ÐÑÐ½Ñ","ÐÑÐ»Ñ","ÐÐ²Ð³ÑÑÑ","Ð¡ÐµÐ½ÑÑÐ±ÑÑ","ÐÐºÑÑÐ±ÑÑ","ÐÐ¾ÑÐ±ÑÑ","ÐÐµÐºÐ°Ð±ÑÑ"]},sw:{today:"leo",days:["Jumap.","Jumat.","Juman.","Jumat.","Alh.","Iju.","Jumam."],months:["Januari","Februari","Machi","Aprili","Mei","Juni","Julai","Agosti","Septemba","Oktoba","Novemba","Decemba"]},tk:{today:"bugÃ¼n",days:["Db","Sb","Ãb","Pb","An","Åb","Ãb"],months:["Ãanwar","Fewral","Mart","Aprel","MaÃ½","lÃ½un","lÃ½ul","Awgust","SentÃ½abr","OktÃ½abr","NoÃ½abr","Dekabr"]},uz:{today:"Bugun",days:["yak.","dsh.","sesh.","chr.","psh.","jm.","sh."],months:["yanvar","fevral","mart","aprel","may","iyun","iyul","avgust","sentyabr","oktyabr","noyabr","dekabr"]},tt:{today:"Ð±Ò¯Ð³ÐµÐ½",days:["Ð¯ÐºÑ","ÐÒ¯Ñ","Ð¡Ð¸Ñ","Ð§ÓÑÑ","ÐÓÐ½Ò","ÒÐ¾Ð¼","Ð¨Ð¸Ð¼"],months:["ÐÑÐ¹Ð½Ð²Ð°Ñ","Ð¤ÐµÐ²ÑÐ°Ð»Ñ","ÐÐ°ÑÑ","ÐÐ¿ÑÐµÐ»Ñ","ÐÐ°Ð¹","ÐÑÐ½Ñ","ÐÑÐ»Ñ","ÐÐ²Ð³ÑÑÑ","Ð¡ÐµÐ½ÑÑÐ±ÑÑ","ÐÐºÑÑÐ±ÑÑ","ÐÐ¾ÑÐ±ÑÑ","ÐÐµÐºÐ°Ð±ÑÑ"]},bn:{today:"à¦à¦",days:["à¦°à¦¬à¦¿.","à¦¸à§à¦®.","à¦®à¦à§à¦à¦².","à¦¬à§à¦§.","à¦¬à§à¦¹à¦¸à§à¦ªà¦¤à¦¿.","à¦¶à§à¦à§à¦°.","à¦¶à¦¨à¦¿."],months:["à¦à¦¾à¦¨à§à¦¯à¦¼à¦¾à¦°à§","à¦«à§à¦¬à§à¦°à§à¦¯à¦¼à¦¾à¦°à§","à¦®à¦¾à¦°à§à¦","à¦à¦ªà§à¦°à¦¿à¦²","à¦®à§","à¦à§à¦¨","à¦à§à¦²à¦¾à¦","à¦à¦à¦¸à§à¦","à¦¸à§à¦ªà§à¦à§à¦®à§à¦¬à¦°","à¦à¦à§à¦à§à¦¬à¦°","à¦¨à¦­à§à¦®à§à¦¬à¦°","à¦¡à¦¿à¦¸à§à¦®à§à¦¬à¦°"]},pa:{today:"à¨à©±à¨",days:["à¨à¨¤.","à¨¸à©à¨®.","à¨®à©°à¨à¨².","à¨¬à©à©±à¨§.","à¨µà©à¨°.","à¨¶à©à¨à¨°.","à¨¶à¨¨à¨¿à©±à¨à¨°."],months:["à¨à¨¨à¨µà¨°à©","à©à¨°à¨µà¨°à©","à¨®à¨¾à¨°à¨","à¨à¨ªà©à¨°à©à¨²","à¨®à¨","à¨à©à¨¨","à¨à©à¨²à¨¾à¨","à¨à¨à¨¸à¨¤","à¨¸à¨¤à©°à¨¬à¨°","à¨à¨à¨¤à©à¨¬à¨°","à¨¨à¨µà©°à¨¬à¨°","à¨¦à¨¸à©°à¨¬à¨°"]},gu:{today:"àªàªà«",days:["àª°àªµàª¿","àª¸à«àª®","àª®àªàªàª³","àª¬à«àª§","àªà«àª°à«","àª¶à«àªà«àª°","àª¶àª¨àª¿"],months:["àªàª¾àª¨à«àª¯à«àªàª°à«","àª«à«àª¬à«àª°à«àªàª°à«","àª®àª¾àª°à«àª","àªàªªà«àª°àª¿àª²","àª®à«","àªà«àª¨","àªà«àª²àª¾àª","àªàªàª¸à«àª","àª¸àªªà«àªà«àª®à«àª¬àª°","àªàªà«àªà«àª¬àª°","àª¨àªµà«àª®à«àª¬àª°","àª¡àª¿àª¸à«àª®à«àª¬àª°"]},or:{today:"à¬à¬à¬¿",days:["à¬°à¬¬à¬¿.","à¬¸à­à¬¾à¬®.","à¬®à¬à­à¬à¬³.","à¬¬à­à¬§.","à¬à­à¬°à­.","à¬¶à­à¬à­à¬°.","à¬¶à¬¨à¬¿."],months:["à¬à¬¾à¬¨à­à­à¬¾à¬°à­","à¬«à­à¬°à­à¬¬à­à­à¬¾à¬°à­","à¬®à¬¾à¬°à­à¬à­à¬","à¬à¬ªà­à¬°à¬¿à¬²à­â","à¬®à­","à¬à­à¬¨à­â","à¬à­à¬²à¬¾à¬","à¬à¬à¬·à­à¬","à¬¸à­à¬ªà­à¬à­à¬®à­à¬¬à¬°","à¬à¬à­à¬à­à¬¬à¬°","à¬¨à¬­à­à¬®à­à¬¬à¬°","(à¬¡à¬¿à¬¸à­à¬®à­à¬¬à¬°"]},ta:{today:"à®à®©à¯à®±à¯",days:["à®à®¾à®¯à®¿à®±à¯","à®¤à®¿à®à¯à®à®³à¯","à®à¯à®µà¯à®µà®¾à®¯à¯","à®ªà¯à®¤à®©à¯","à®µà®¿à®¯à®¾à®´à®©à¯","à®µà¯à®³à¯à®³à®¿","à®à®©à®¿"],months:["à®à®©à®µà®°à®¿","à®ªà®¿à®ªà¯à®°à®µà®°à®¿","à®®à®¾à®°à¯à®à¯","à®à®ªà¯à®°à®²à¯","à®®à¯","à®à¯à®©à¯","à®à¯à®²à¯","à®à®à®¸à¯à®à¯","à®à¯à®ªà¯à®à®®à¯à®ªà®°à¯","à®à®à¯à®à¯à®ªà®°à¯","à®¨à®µà®®à¯à®ªà®°à¯","à®à®¿à®à®®à¯à®ªà®°à¯"]},te:{today:"à°¨à±à°¡à±",days:["à°à°¦à°¿.","à°¸à±à°®.","à°®à°à°à°³.","à°¬à±à°§.","à°à±à°°à±.","à°¶à±à°à±à°°.","à°¶à°¨à°¿."],months:["à°à°¨à°µà°°à°¿","à°«à°¿à°¬à±à°°à°µà°°à°¿","à°®à°¾à°°à±à°à°¿","à°à°ªà±à°°à°¿à°²à±","à°®à±","à°à±à°¨à±","à°à±à°²à±","à°à°à°¸à±à°à±","à°¸à±à°ªà±à°à±à°à°¬à°°à±","à°à°à±à°à±à°¬à°°à±","à°¨à°µà°à°¬à°°à±","à°¡à°¿à°¸à±à°à°¬à°°à±"]},kn:{today:"à²à²à²¦à³",days:["à²­à²¾à²¨à³.","à²¸à³à²®.","à²®à²à²à²³.","à²¬à³à²§.","à²à³à²°à³.","à²¶à³à²à³à²°.","à²¶à²¨à²¿."],months:["à²à²¨à²µà²°à²¿","à²«à³à²¬à³à²°à²µà²°à²¿","à²®à²¾à²°à³à²à³","à²à²ªà³à²°à²¿à²²à³","à²®à³","à²à³à²¨à³","à²à³à²²à³","à²à²à²¸à³à²à³","à²¸à³à²ªà³à²à²à²¬à²°à³","à²à²à³à²à³à²¬à²°à³","à²¨à²µà³à²à²¬à²°à³","à²¡à²¿à²¸à³à²à²¬à²°à³"]},ml:{today:"à´à´¨àµà´¨àµ",days:["à´à´¾à´¯àµ¼.","à´¤à´¿à´àµà´àµ¾.","à´àµà´µàµà´µ.","à´¬àµà´§àµ».","à´µàµà´¯à´¾à´´à´.","à´µàµà´³àµà´³à´¿.","à´¶à´¨à´¿."],months:["à´à´¨àµà´µà´°à´¿","à´«àµà´¬àµà´±àµà´µà´°à´¿","à´®à´¾à´±àµà´àµà´àµ","à´à´ªàµà´±à´¿à´²àµ","à´®àµà´¯àµ","à´àµà´£àµ","à´àµà´²àµ","à´à´à´¸àµà´±à´±àµ","à´¸àµà´ªàµà´±à´±à´à´¬à´±àµ","à´à´àµà´àµà´¬à´±àµ","à´¨à´µà´à´¬à´±àµ","à´¡à´¿à´¸à´à´¬à´±àµ"]},as:{today:"à¦à¦à¦¿",days:["à¦¸à§à¦®.","à¦®à¦à§à¦à¦².","à¦¬à§à¦§.","à¦¬à§à¦¹.","à¦¶à§à¦à§à¦°.","à¦¶à¦¨à¦¿.","à§°à¦¬à¦¿."],months:["à¦à¦¾à¦¨à§à§±à¦¾à§°à§","à¦«à§à¦¬à§à¦°à§à§±à¦¾à§°à§","à¦®à¦¾à¦°à§à¦","à¦à¦ªà§à¦°à¦¿à¦²","à¦®à§","à¦à§à¦¨","à¦à§à¦²à¦¾à¦","à¦à¦à¦·à§à¦","à¦à§à¦ªà§à¦à§à¦®à§à¦¬à¦°","à¦à¦à§à¦à§à¦¬à¦°","à¦¨à¦¬à§à¦®à§à¦¬à¦°","à¦¡à¦¿à¦à§à¦®à§à¦¬à¦°"]},mr:{today:"à¤à¤",days:["à¤°à¤µà¤¿.","à¤¸à¥à¤®.","à¤®à¤à¤à¤³.","à¤¬à¥à¤§.","à¤à¥à¤°à¥.","à¤¶à¥à¤à¥à¤°.","à¤¶à¤¨à¤¿."],months:["à¤à¤¾à¤¨à¥à¤µà¤¾à¤°à¥","à¤«à¥à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥","à¤®à¤¾à¤°à¥à¤","à¤à¤ªà¥à¤°à¤¿à¤²","à¤®à¥","à¤à¥à¤¨","à¤à¥à¤²à¥","à¤à¤à¤¸à¥à¤","à¤¸à¤ªà¥à¤à¥à¤à¤¬à¤°","à¤à¤à¥à¤à¥à¤¬à¤°","à¤¨à¥à¤µà¥à¤¹à¥à¤à¤¬à¤°","à¤¡à¤¿à¤¸à¥à¤à¤¬à¤°"]},sa:{today:"à¤à¤¦à¥à¤¯",days:["à¤°à¤µà¤¿à¤µà¤¾à¤¸à¤°à¤","à¤¸à¥à¤®à¤µà¤¾à¤¸à¤°à¤","à¤®à¤à¥à¤à¤²à¤µà¤¾à¤¸à¤°à¤","à¤¬à¥à¤§à¤µà¤¾à¤¸à¤°à¤","à¤à¥à¤°à¥à¤µà¤¾à¤¸à¤°à¤","à¤¶à¥à¤à¥à¤°à¤µà¤¾à¤¸à¤°à¤","à¤¶à¤¨à¤¿à¤µà¤¾à¤¸à¤°à¤"],months:["à¤à¤¨à¤µà¤°à¥","à¤«à¤°à¤µà¤°à¥","à¤®à¤¾à¤°à¥à¤","à¤à¤ªà¥à¤°à¥à¤²","à¤®à¤","à¤à¥à¤¨","à¤à¥à¤²à¤¾à¤","à¤à¤à¤¸à¥à¤¤","à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°","à¤à¤à¥à¤¤à¥à¤¬à¤°","à¤¨à¤µà¤®à¥à¤¬à¤°","à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°"]},mn:{today:"Ó©Ð½Ó©Ó©Ð´Ó©Ñ",days:["ÐÑ","ÐÐ°","ÐÑ","ÐÑ","ÐÒ¯","ÐÐ°","ÐÑ"],months:["1Â Ð´Ò¯Ð³ÑÑÑÂ ÑÐ°Ñ","2Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","3Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","4Â Ð´Ò¯Ð³ÑÑÑÂ ÑÐ°Ñ","5Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","6Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","7Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","8Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","9Â Ð´Ò¯Ð³ÑÑÑÂ ÑÐ°Ñ","10Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ","11Â Ð´Ò¯Ð³ÑÑÑÂ ÑÐ°Ñ","12Â Ð´ÑÐ³Ð°Ð°ÑÂ ÑÐ°Ñ"]},bo:{today:"à½à¼à½¢à½²à½",days:["à½à½²à¼à½à¼","à½à¾³à¼à½à¼","à½à½²à½à¼à½à½à½¢à¼","à½£à¾·à½à¼à½à¼","à½à½´à½¢à¼à½à½´à¼","à½à¼à½¦à½à½¦à¼","à½¦à¾¤à½ºà½à¼à½à¼"],months:["à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à¼à½à½¼à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½²à½¦à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½¦à½´à½à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½²à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½£à¾à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à¾²à½´à½à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½´à½à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½¢à¾à¾±à½à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½´à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½´à¼à½à½¼à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½´à¼à½à½à½²à½à¼à½à¼","à½¦à¾¤à¾±à½²à¼à½à¾³à¼à½à½à½´à¼à½à½à½²à½¦à¼à½à¼"]},cy:{today:"heddiw",days:["Sul","Llun","Maw","Mer","Iau","Gwe","Sad"],months:["Ionawr","Chwefror","Mawrth","Ebrill","Mai","Mehefin","Gorffennaf","Awst","Medi","Hydref","Tachwedd","Rhagfyr"]},km:{today:"ááááááá",days:["á¢á¶áá·.","á.","á¢.","áá»","áááá .","áá».","á."],months:["áááá¶","áá»áááá","áá·áá¶","áááá¶","á§ááá¶","áá·áá»áá¶","áááááá¶","áá¸á á¶","ááááá¶","áá»áá¶","áá·áááá·áá¶","áááá¼"]},lo:{today:"à»àºàº¡àº·à»àºàºµà»",days:["àº­àº²àºàº´àº","àºàº±àº","àº­àº±àºàºàº²àº","àºàº¸àº","àºàº°àº«àº±àº","àºªàº¸àº","à»àºªàº»àº²"],months:["àº¡àº±àºàºàº­àº","àºàº¸àº¡àºàº²","àº¡àºµàºàº²","à»àº¡àºªàº²","àºàº¶àºàºªàº°àºàº²","àº¡àº´àºàº¸àºàº²","àºà»àº¥àº°àºàº»àº","àºªàº´àºàº«àº²","àºàº±àºàºàº²","àºàº¸àº¥àº²","àºàº°àºàº´àº","àºàº±àºàº§àº²"]},gl:{today:"hoxe",days:["dom","luns","mar","mÃ©r","xov","ven","sÃ¡b"],months:["xaneiro","febreiro","marzo","abril","maio","xuÃ±o","xullo","agosto","setembro","outubro","novembro","decembro"]},kok:{today:"à¤à¤à¤¿",days:["à¤à¤¯.","à¤¸à¥à¤®.","à¤®à¤à¤à¤³.","à¤¬à¥à¤§.","à¤¬à¤¿à¤°à¥.","à¤¸à¥à¤à¥à¤°.","à¤¶à¥à¤¨."],months:["à¤à¤¾à¤¨à¥à¤µà¤¾à¤°à¥","à¤«à¥à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥","à¤®à¤¾à¤°à¥à¤","à¤à¤ªà¥à¤°à¤¿à¤²","à¤®à¥","à¤à¥à¤¨","à¤à¥à¤²à¥","à¤à¤à¤¸à¥à¤","à¤¸à¤ªà¥à¤à¥à¤à¤¬à¤°","à¤à¤à¥à¤à¥à¤¬à¤°","à¤¨à¥à¤µà¥à¤®à¥à¤¬à¤°","à¤¡à¤¿à¤¸à¥à¤à¤¬à¤°"]},syr:{today:"ÜÜÜ¡Ü",days:["ÜÜÂ ÜÜÜ«","ÜÜÂ ÜÜÜ«","ÜÜÂ ÜÜÜ«","ÜÜÂ ÜÜÜ«","ÜÜÂ ÜÜÜ«","ÜÜ¥ÜªÜÜ","ÜÜ«Ü"],months:["ÜÜ¢ÜÜ¢Â ÜÜÜªÜ","Ü«ÜÜ","ÜÜÜª","Ü¢ÜÜ£Ü¢","ÜÜÜª","ÜÜÜÜªÜ¢","Ü¬Ü¡ÜÜ","ÜÜ","ÜÜÜ ÜÜ ","Ü¬Ü«ÜªÜÂ Ü©ÜÜÜ¡","Ü¬Ü«ÜªÜÂ ÜÜÜªÜ","ÜÜ¢ÜÜ¢Â Ü©ÜÜÜ¡"]},si:{today:"à¶à¶¯",days:["à¶à¶»à·à¶¯à·","à·à¶³à·à¶¯à·","à¶à·à¶¢à¶¯à·","à¶¶à·à¶¯à¶¯à·","à¶à·à¶»à·à¶¯à·","à¶à·à·à·à¶¯à·","à·à¶±à·à¶¯à·"],months:["à¶¢à¶±à·à·à¶»à·","à¶´à·à¶¶à¶»à·à·à¶»à·","à¶¸à·à¶»à·à¶­à·","à¶âà¶´à·âà¶»à·à¶½à·","à¶¸à·à¶ºà·","à¶¢à·à¶±à·","à¶¢à·à¶½à·","à¶âà¶à·à·à·à¶­à·","à·à·à¶´à·à¶­à·à¶¸à·à¶¶à¶»à·","à¶à¶à·à¶­à·à¶¶à¶»à·","à¶±à·à·à·à¶¸à·à¶¶à¶»à·","à¶¯à·à·à·à¶¸à·à¶¶à¶»à·"]},iu:{today:"ullumi",days:["Nat","Nag","Aip","Pi","Sit","Tal","Siv"],months:["Jaannuari","Viivvuari","Maatsi","Iipuri","Mai","Juuni","Julai","Aaggiisi","Sitipiri","Utupiri","Nuvipiri","Tisipiri"]},am:{today:"áá¬",days:["á¥ááµ","á°á","áá­á°","á¨á¡á","áááµ","áá­á¥","áá³á"],months:["ááá©ááª","áá¥á©ááª","áá­á½","á¤áá¨á","áá­","áá","ááá­","á¦ááµáµ","á´áá´áá á­","á¦á­á°áá á­","áá¬áá á­","á²á´áá á­"]},tzm:{today:"assa",days:["Ace","Ari","Ara","Aha","Amh","Sem","Sed"],months:["Yenayer","Furar","Maghres","Yebrir","Mayu","Yunyu","Yulyu","Ghuct","Cutenber","Ktuber","Wambir","Dujanbir"]},ne:{today:"à¤à¤",days:["à¤à¤à¤¤","à¤¸à¥à¤®","à¤®à¤à¥à¤à¤²","à¤¬à¥à¤§","à¤¬à¤¿à¤¹à¥","à¤¶à¥à¤à¥à¤°","à¤¶à¤¨à¤¿"],months:["à¤à¤¨à¤µà¤°à¥","à¤«à¥à¤¬à¥à¤°à¥à¤à¤°à¥","à¤®à¤¾à¤°à¥à¤","à¤à¤ªà¥à¤°à¤¿à¤²","à¤®à¥","à¤à¥à¤¨","à¤à¥à¤²à¤¾à¤","à¤à¤à¤¸à¥à¤¤","à¤¸à¥à¤ªà¥à¤à¥à¤®à¥à¤¬à¤°","à¤à¤à¥à¤à¥à¤¬à¤°","à¤¨à¥à¤­à¥à¤®à¥à¤¬à¤°","à¤¡à¤¿à¤¸à¥à¤®à¥à¤¬à¤°"]},fy:{today:"hjoed",days:["Sn","Mo","Ti","Wo","To","Fr","Sn"],months:["jannewaris","febrewaris","maart","april","maaie","juny","july","augustus","septimber","oktober","novimber","desimber"]},ps:{today:"ÙÙ ÙØ±Ú",days:["Ø§ÙØ£Ø­Ø¯","Ø§ÙØ¥Ø«ÙÙÙ","Ø§ÙØ«ÙØ§Ø«Ø§Ø¡","Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡","Ø§ÙØ®ÙÙØ³","Ø§ÙØ¬ÙØ¹Ø©","Ø§ÙØ³Ø¨Øª"],months:["ÙØ­Ø±Ù","ØµÙØ±","Ø±Ø¨ÙØ¹Â Ø§ÙØ£ÙÙ","Ø±Ø¨ÙØ¹Â Ø§ÙØ«Ø§ÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ£ÙÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ«Ø§ÙÙØ©","Ø±Ø¬Ø¨","Ø´Ø¹Ø¨Ø§Ù","Ø±ÙØ¶Ø§Ù","Ø´ÙØ§Ù","Ø°ÙÂ Ø§ÙÙØ¹Ø¯Ø©","Ø°ÙÂ Ø§ÙØ­Ø¬Ø©"]},fil:{today:"ngayon",days:["Lin","Lun","Mar","Mier","Hueb","Bier","Saba"],months:["Enero","Pebrero","Marso","Abril","Mayo","Hunyo","Hulyo","Agosto","Septyembre","Oktubre","Nobyembre","Disyembre"]},dv:{today:"ÞÞ¨ÞÞ¦ÞÞª",days:["ÞÞ§ÞÞ©ÞÞ°ÞÞ¦","ÞÞ¯ÞÞ¦","ÞÞ¦ÞÞ°ÞÞ§ÞÞ¦","ÞÞªÞÞ¦","ÞÞªÞÞ§ÞÞ°ÞÞ¦ÞÞ¨","ÞÞªÞÞªÞÞª","ÞÞ®ÞÞ¨ÞÞ¨ÞÞª"],months:["ÞÞªÞÞ¦ÞÞ°ÞÞ¦ÞÞ°","ÞÞ¦ÞÞ¦ÞÞª","ÞÞ¦ÞÞ©Þ¢ÞªÞÞ°ÞÞ¦ÞÞ°ÞÞ¦ÞÞ°","ÞÞ¦ÞÞ©Þ¢ÞªÞÞ°ÞÞ§ÞÞ¨ÞÞª","ÞÞªÞÞ§ÞÞ¦ÞÞ°ÞÞ«ÞÞ§","ÞÞªÞÞ§ÞÞ¦ÞÞ°ÞÞ§ÞÞ¨ÞÞ§","ÞÞ¦ÞÞ¦ÞÞ°","ÞÞ¦Þ¢Þ°ÞÞ§ÞÞ°","ÞÞ¦ÞÞ¦ÞÞ§ÞÞ°","ÞÞ¦ÞÞ°ÞÞ§ÞÞ°","ÞÞªÞÞ°Þ¤Þ¦Þ¢Þ¨ÞÞ§","ÞÞªÞÞ°ÞÞ¨ÞÞ°ÞÞ§"]},ha:{today:"yau",days:["Lah","Lit","Tal","Lar","Alh","Jum","Asa"],months:["Januwaru","Febreru","Maris","Afrilu","Mayu","Yuni","Yuli","Agusta","Satumba","Oktocba","Nuwamba","Disamba"]},yo:{today:"loni",days:["Aik","Aje","Ise","Ojo","Ojo","Eti","Aba"],months:["Osu kinni","Osu keji","Osu keta","Osu kerin","Osu karun","Osu kefa","Osu keje","Osu kejo","Osu kesan","Osu kewa","Osu kokanla","Osu keresi"]},quz:{today:"kunan",days:["int","kil","ati","quy","Ch'","Ill","k'u"],months:["Qulla puquy","Hatun puquy","Pauqar waray","ayriwa","Aymuray","Inti raymi","Anta Sitwa","Qhapaq Sitwa","Uma raymi","Kantaray","Ayamarq'a","Kapaq Raymi"]},nso:{today:"Lehono",days:["Lam","MoÅ¡","Lbb","Lbr","Lbn","Lbh","Mok"],months:["Pherekgong","Hlakola","Mopitlo","Moranang","Mosegamanye","NgoatoboÅ¡ego","Phuphu","Phato","Lewedi","Diphalana","Dibatsela","Manthole"]},ba:{today:"Ð±Ó©Ð³Ó©Ð½",days:["ÐÑ","ÐÑ","Ð¨Ñ","Ð¨Ñ","ÐÑ","ÐÐ¼","Ð¨Ð±"],months:["ÒÐ¸Ð½ÑÐ°Ñ","ÑÐµÐ²ÑÐ°Ð»Ñ","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐµÐ»Ñ","Ð¼Ð°Ð¹","Ð¸ÑÐ½Ñ","Ð¸ÑÐ»Ñ","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ½ÑÑÐ±ÑÑ","Ð¾ÐºÑÑÐ±ÑÑ","Ð½Ð¾ÑÐ±ÑÑ","Ð´ÐµÐºÐ°Ð±ÑÑ"]},lb:{today:"haut",days:["Son","MÃ©i","DÃ«n","MÃ«t","Don","Fre","Sam"],months:["Januar","Februar","MÃ¤erz","AbrÃ«ll","Mee","Juni","Juli","August","September","Oktober","November","Dezember"]},kl:{today:"ullumi",days:["sap","ata","mar","ping","sis","tal","arf"],months:["januari","februari","martsi","apriili","maaji","juni","juli","aggusti","septembari","oktobari","novembari","decembari"]},ig:{today:"taa",days:["Aik","Aje","Ise","Ojo","Ojo","Eti","Aba"],months:["Onwa mbu","Onwa ibua","Onwa ato","Onwa ano","Onwa ise","Onwa isi","Onwa asa","Onwa asato","Onwa itolu","Onwa iri","Onwa iri n'ofu","Onwa iri n'ibua"]},ii:{today:"êê",days:["ê­ê","êê","êê","êê","êê","êê¬","êê"],months:["êêª","êêª","êêª","êêª","ê¬êª","êêª","êêª","êêª","ê¬êª","ê°êª","ê¯êªêª","ê°êêª"]},arn:{today:"fachantÃ¼",days:["dom","lun","mar","miÃ©","jue","vie","sÃ¡b"],months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},moh:{today:"okÃ ra",days:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["TsothohrkÃ³:Wa","Enniska","EnniskÃ³:Wa","OnerahtÃ³kha","OnerahtohkÃ³:Wa","Ohiari:Ha","OhiarihkÃ³:Wa","SeskÃ©ha","SeskehkÃ³:Wa","KentÃ©nha","KentenhkÃ³:Wa","TsothÃ³hrha"]},br:{today:"hiziv",days:["Sul","Lun","Meu.","Mer.","Yaou","Gwe.","Sad."],months:["Genver","C'hwevrer","Meurzh","Ebrel","Mae","Mezheven","Gouere","Eost","Gwengolo","Here","Du","Kerzu"]},ug:{today:"bÃ¼gÃ¼n",days:["ÙÛ","Ø¯Û","Ø³Û","ÚØ§","Ù¾Û","Ø¬Û","Ø´Û"],months:["1-Ø¦Ø§Ù","2-Ø¦Ø§Ù","3-Ø¦Ø§Ù","4-Ø¦Ø§Ù","5-Ø¦Ø§Ù","6-Ø¦Ø§Ù","7-Ø¦Ø§Ù","8-Ø¦Ø§Ù","9-Ø¦Ø§Ù","10-Ø¦Ø§Ù","11-Ø¦Ø§Ù","12-Ø¦Ø§Ù"]},mi:{today:"i tenei ra",days:["Ta","Hi","TÅ«","Apa","Pa","Me","Ho"],months:["Kohi-tÄtea","Hui-tanguru","PoutÅ«-te-rangi","Paenga-whÄwhÄ","Haratua","Pipiri","HÅngongoi","Here-turi-kÅkÄ","Mahuru","Whiringa-Ä-nuku","Whiringa-Ä-rangi","Hakihea"]},oc:{today:"uÃ¨i",days:["dim.","lun.","mar.","mÃ¨c.","jÃ²u.","ven.","sab."],months:["genier","febrier","marÃ§","abril","mai","junh","julh","agost","setembre","octobre","novembre","desembre"]},co:{today:"oghje",days:["dum.","lun.","mar.","mer.","ghj.","ven.","sab."],months:["ghjennaghju","ferraghju","marzu","aprile","maghju","ghjunghju","lugliu","aostu","settembre","ottobre","nuvembre","dicembre"]},gsw:{today:"heit",days:["Su.","Mo.","Di.","Mi.","Du.","Fr.","SÃ ."],months:["JÃ¤nner","Feverje","MÃ¤rz","Ãpril","Mai","JÃ¼ni","JÃ¼li","Augscht","September","Oktower","Nowember","Dezember"]},sah:{today:"bÃ¼gÃ¼n",days:["ÐÑ","ÐÐ½","ÐÐ¿","Ð¡Ñ","Ð§Ð¿","ÐÑ","Ð¡Ð±"],months:["Ð¢Ð¾ÑÑÑÐ½Ð½ÑÑ","ÐÐ»ÑÐ½Ð½ÑÑ","ÐÑÐ»ÑÐ½ ÑÑÑÐ°Ñ","ÐÑÑÑ ÑÑÑÐ°Ñ","Ð«Ð°Ð¼ ÑÐ¹Ð°","ÐÑÑ ÑÐ¹Ð°","ÐÑ ÑÐ¹Ð°","ÐÑÑÑÐ´ÑÐ°Ñ ÑÐ¹Ð°","ÐÐ°Ð»Ð°ÒÐ°Ð½ ÑÐ¹Ð°","ÐÐ»ÑÑÐ½Ð½ÑÑ","Ð¡ÑÑÐ¸Ð½Ð½ÑÐ¸","ÐÑÑÑÐ½Ð½ÑÑ"]},qut:{today:"[kamik]",days:["juq","kaq","oxq","kajq","joq","waqq","wuqq"],months:["nab'e ik'","ukab' ik'","rox ik'","ukaj ik'","uro' ik'","uwaq ik'","uwuq ik'","uwajxaq ik'","ub'elej ik'","ulaj ik'","ujulaj ik'","ukab'laj ik'"]},rw:{today:"uyu munsi",days:["mbe.","kab.","gat.","kan.","gat.","gat.","cyu."],months:["Mutarama","Gashyantare","Werurwe","Mata","Gicurasi","Kamena","Nyakanga","Kanama","Nzeli","Ukwakira","Ugushyingo","Ukuboza"]},wo:{today:"tey",days:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],months:["janvier","fÃ©vrier","mars","avril","mai","juin","juillet","aoÃ»t","septembre","octobre","novembre","dÃ©cembre"]},prs:{today:"Ø§ÙØ±ÙØ²",days:["Ø§ÙØ£Ø­Ø¯","Ø§ÙØ¥Ø«ÙÙÙ","Ø§ÙØ«ÙØ§Ø«Ø§Ø¡","Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡","Ø§ÙØ®ÙÙØ³","Ø§ÙØ¬ÙØ¹Ø©","Ø§ÙØ³Ø¨Øª"],months:["ÙØ­Ø±Ù","ØµÙØ±","Ø±Ø¨ÙØ¹Â Ø§ÙØ£ÙÙ","Ø±Ø¨ÙØ¹Â Ø§ÙØ«Ø§ÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ£ÙÙÙ","Ø¬ÙØ§Ø¯ÙÂ Ø§ÙØ«Ø§ÙÙØ©","Ø±Ø¬Ø¨","Ø´Ø¹Ø¨Ø§Ù","Ø±ÙØ¶Ø§Ù","Ø´ÙØ§Ù","Ø°ÙÂ Ø§ÙÙØ¹Ø¯Ø©","Ø°ÙÂ Ø§ÙØ­Ø¬Ø©"]},gd:{today:"an-diugh",days:["DÃ²m","Lua","MÃ i","Cia","Ard","Hao","Sat"],months:["Am Faoilleach","An Gearran","Am MÃ rt","An Giblean","An CÃ¨itean","An t-Ãgmhios","An t-Iuchar","An LÃ¹nastal","An t-Sultain","An DÃ mhair","An t-Samhain","An DÃ¹bhlachd"]},smn:{today:"onne",days:["pa","vu","ma","ko","tu","vÃ¡","lÃ¡"],months:["uÄÄÃ¢ivemÃ¡Ã¡nu","kuovÃ¢mÃ¡Ã¡nu","njuhÄÃ¢mÃ¡Ã¡nu","cuÃ¡ÅuimÃ¡Ã¡nu","vyesimÃ¡Ã¡nu","kesimÃ¡Ã¡nu","syeinimÃ¡Ã¡nu","porgemÃ¡Ã¡nu","ÄohÄÃ¢mÃ¡Ã¡nu","roovvÃ¢dmÃ¡Ã¡nu","skammÃ¢mÃ¡Ã¡nu","juovlÃ¢mÃ¡Ã¡nu"]},sms:{today:"pei Ìvv",days:["pÃ¢","vu","mÃ¢","se","ne","pi","su"],months:["oÄÄeeÂ´jjmÃ¤Ã¤n","tÃ¤Â´lvvmÃ¤Ã¤n","pÃ¢Â´zzlÃ¢Å¡ttammÃ¤Ã¤n","njuhÄÄmÃ¤Ã¤n","vueÂ´ssmÃ¤Ã¤n","Ç©ieÂ´ssmÃ¤Ã¤n","sueiÂ´nnmÃ¤Ã¤n","pÃ¥Â´rÇ§Ç§mÃ¤Ã¤n","ÄÃµhÄÄmÃ¤Ã¤n","kÃ¥lggmÃ¤Ã¤n","skammÂ´mÃ¤Ã¤n","rosttovmÃ¤Ã¤n"]},zh:{days:["ææå¤©","ææä¸","ææäº","ææä¸","ææå","ææäº","ææå­"],months:["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],today:"ä»å¤©"},"zh-hans":{days:["å¨æ¥","å¨ä¸","å¨äº","å¨ä¸","å¨å","å¨äº","å¨å­"],months:["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],today:"ä»å¤©"},"zh-hant":{days:["é±æ¥","é±ä¸","é±äº","é±ä¸","é±å","é±äº","é±å­"],months:["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],today:"ä»å¤©"},nn:{today:"i dag",days:["sÃ¸","mÃ¥","ty","on","to","fr","la"],months:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"]},bs:{today:"danas",days:["ned","pon","uto","sri","Äet","pet","sub"],months:["januar","februar","mart","april","maj","juni","juli","avgust","septembar","oktobar","novembar","decembar"]},sma:{today:"daenbiejjien",days:["aej","mÃ¥a","dÃ¦j","gask","duar","bearj","laav"],months:["tsÃ¯engele","goevte","njoktje","voerhtje","suehpede","ruffie","snjaltje","mÃ¯etske","skÃ¯erede","golke","rahka","goeve"]},nb:{today:"i dag",days:["sÃ¸","ma","ti","on","to","fr","lÃ¸"],months:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"]},sr:{today:"Ð´Ð°Ð½Ð°Ñ",days:["ned","pon","uto","sre","Äet","pet","sub"],months:["januar","februar","mart","april","maj","jun","jul","avgust","septembar","oktobar","novembar","decembar"]},dsb:{today:"Åºinsa",days:["nje","pon","waÅ","srj","stw","pÄt","sob"],months:["januar","februar","mÄrc","apryl","maj","junij","julij","awgust","september","oktober","nowember","december"]},smj:{today:"uddni",days:["Ã¡jl","mÃ¡n","dis","gas","duor","bier","lÃ¡v"],months:["Ã¥dÃ¥jakmÃ¡nno","guovvamÃ¡nno","sjnjuktjamÃ¡nno","vuoratjismÃ¡nno","moarmesmÃ¡nno","biehtsemÃ¡nno","sjnjilltjamÃ¡nno","bÃ¥rggemÃ¡nno","ragÃ¡tmÃ¡nno","gÃ¥lgÃ¥dismÃ¡nno","basÃ¡dismÃ¡nno","javllamÃ¡nno"]}},a=function(e){for(var t=[["D. M. Y","_dsb_dsb-de_hsb_hsb-de_sk_sk-sk_"],["D.M.Y","_az_az-cyrl_az-cyrl-az_az-latn_az-latn-az_ba_ba-ru_be_be-by_bs_bs-cyrl_bs-cyrl-ba_bs-latn_bs-latn-ba_cs_cs-cz_de_de-at_de-ch_de-de_de-li_de-lu_et_et-ee_fi_fi-fi_fr-ch_hy_hy-am_is_is-is_it-ch_ka_ka-ge_kk_kk-kz_ky_ky-kg_mk_mk-mk_nb_nb-no_nn_nn-no_no_ro_ro-ro_ru_ru-ru_se_se-fi_se-no_sl_sl-si_sma-no_smj-no_smn_smn-fi_sms_sms-fi_sr_sr-cyrl_sr-cyrl-ba_sr-cyrl-cs_sr-cyrl-me_sr-cyrl-rs_sr-latn_sr-latn-ba_sr-latn-cs_sr-latn-me_sr-latn-rs_sv-fi_tg_tg-cyrl_tg-cyrl-tj_tk_tk-tm_tr_tr-tr_tt_tt-ru_uk_uk-ua_uz-cyrl_uz-cyrl-uz_"],["D.M.Y 'Ð³.'","_bg_bg-bg_"],["D.M.Y.","_hr_hr-ba_hr-hr_"],["D/M Y","_uz_uz-latn_uz-latn-uz_"],["D/M/Y","_am_am-et_ar_ar-ae_ar-bh_ar-eg_ar-iq_ar-jo_ar-kw_ar-lb_ar-ly_ar-om_ar-qa_ar-sa_ar-sy_ar-ye_br_br-fr_ca_ca-es_co_co-fr_cy_cy-gb_dv_dv-mv_el_el-gr_en-au_en-bz_en-ca_en-gb_en-ie_en-jm_en-my_en-nz_en-sg_en-tt_es_es-ar_es-bo_es-co_es-cr_es-do_es-ec_es-es_es-gt_es-hn_es-mx_es-ni_es-pe_es-pr_es-py_es-sv_es-uy_es-ve_fr_fr-be_fr-fr_fr-lu_fr-mc_ga_ga-ie_gd_gd-gb_gl_gl-es_gsw_gsw-fr_ha_ha-latn_ha-latn-ng_he_he-il_id_id-id_ig_ig-ng_it_it-it_iu_iu-cans_iu-cans-ca_iu-latn_iu-latn-ca_lb_lb-lu_lo_lo-la_mi_mi-nz_ms_ms-bn_ms-my_mt_mt-mt_nl-be_oc_oc-fr_prs_prs-af_ps_ps-af_pt_pt-br_qut_qut-gt_quz_quz-bo_quz-ec_quz-pe_rm_rm-ch_syr_syr-sy_th_th-th_ur_ur-pk_vi_vi-vn_wo_wo-sn_yo_yo-ng_zh-cht_zh-hant_zh-hk_zh-mo_zh-sg_"],["D-M-Y","_ar-dz_ar-ma_arn_arn-cl_ar-tn_as_as-in_bn_bn-bd_bn-in_da_da-dk_en-in_es-cl_fo_fo-fo_fy_fy-nl_gu_gu-in_hi_hi-in_kl_kl-gl_kn_kn-in_kok_kok-in_ml_ml-in_mr_mr-in_nl_nl-nl_or_or-in_pa_pa-in_pt-pt_sa_sa-in_ta_ta-in_te_te-in_tzm_tzm-latn_tzm-latn-dz_"],["M.D.Y","_sah_sah-ru_"],["M/D/Y","_en_en-029_en-ph_en-us_en-zw_es-pa_es-us_fa_fa-ir_fil_fil-ph_moh_moh-ca_ne_ne-np_rw_rw-rw_sw_sw-ke_"],["Y.M.D","_lt_lt-lt_mn_mn-cyrl_mn-mn_"],["Y.M.D.","_hu_hu-hu_lv_lv-lv_"],["Y/M/D","_af_af-za_bo_bo-cn_en-za_eu_eu-es_ii_ii-cn_ja_ja-jp_mn-mong_mn-mong-cn_nso_nso-za_tn_tn-za_xh_xh-za_zh_zh-chs_zh-cn_zh-hans_zh-tw_zu_zu-za_"],["Y-M-D","_fr-ca_km_km-kh_ko_ko-kr_pl_pl-pl_se-se_si_si-lk_sma_sma-se_smj_smj-se_sq_sq-al_sv_sv-se_ug_ug-cn_"]],n=e.map((function(e){return e.toLowerCase()})),a=function(e){var a="_"+n[e]+"_",r=t.find((function(e){return e[1].includes(a)}));if(r)return{v:{locale:n[e],format:r[0]}};var o=Kn(n[e]);o&&n.push(o)},r=0;r<n.length;++r){var o=a(r);if("object"===ft(o))return o.v}return{locale:"en",format:"Y-M-D"}}(e),r=a.locale;!(t=n[r]);)r=Kn(r);return t||(t=n.en),Object.assign(a,t)}Te({target:"String",proto:!0,forced:!function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[Hn]=!1,"/./"[e](t)}catch(e){}}return!1}("includes")},{includes:function(e){return!!~String(f(this)).indexOf(Yn(e),arguments.length>1?arguments[1]:void 0)}});var $n=function(){function e(t){var n=this;pt(this,e),this.element=t,this.element.setAttribute("data-has-picker","");for(var a=this.element,r="";a.parentNode&&!(r=a.getAttribute("lang"));)a=a.parentNode;this.setLocaleText(r),this.element.placeholder||(this.element.placeholder=this.localeText.format.replace("M","mm").replace("D","dd").replace("Y","yyyy")),Object.defineProperties(this.element,{textValue:{get:Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.element),"value").get},value:{get:function(){return n.element.polyfillValue},set:function(e){if(!/^\d{4}-\d{2}-\d{2}$/.test(e))return n.element.polyfillValue="",void n.element.setAttribute("value","");if(n.element.polyfillValue=e,"NaN"===e||""===e)n.element.setAttribute("value","");else{var t=e.split("-");n.element.setAttribute("value",n.localeText.format.replace("Y",t[0]).replace("M",t[1]).replace("D",t[2]))}}},valueAsDate:{get:function(){return n.element.polyfillValue?new Date(n.element.polyfillValue):null},set:function(e){null===e?n.element.value="":isNaN(e.getTime())?n.element.value="NaN":n.element.value=e.toISOString().slice(0,10)}},valueAsNumber:{get:function(){return n.element.value?n.element.valueAsDate.getTime():NaN},set:function(e){n.element.valueAsDate=new Date(e)}}}),this.element.value=this.element.getAttribute("value");var o=function(){jt.instance.attachTo(n)};this.element.addEventListener("focus",o),this.element.addEventListener("mousedown",o),this.element.addEventListener("mouseup",o),this.element.addEventListener("keydown",(function(e){var t=new Date;switch(console.log(n.element),console.log(n.element.textValue),e.keyCode){case 9:case 27:jt.instance.hide();break;case 38:n.element.valueAsDate&&(t.setDate(n.element.valueAsDate.getDate()+1),n.element.valueAsDate=t,jt.instance.pingInput());break;case 40:n.element.valueAsDate&&(t.setDate(n.element.valueAsDate.getDate()-1),n.element.valueAsDate=t,jt.instance.pingInput())}setTimeout((function(){""===n.element.textValue.trim()&&(n.element.valueAsDate=null),jt.instance.sync()}),1)}))}return gt(e,[{key:"setLocaleText",value:function(e){var t=window.navigator.languages?vt(window.navigator.languages):[window.navigator.userLanguage||window.navigator.language];e&&t.push(e);var n=Wn(t);this.locale=n.locale,this.localeText=n}}],[{key:"addPickerToDateInputs",value:function(){var t=document.querySelectorAll('input[type="date"]:not([data-has-picker]):not([readonly])'),n=t.length;if(!n)return!1;for(var a=0;a<n;++a)new e(t[a])}}]),e}();return e.addPickers=function(){jt.instance=new jt,$n.addPickerToDateInputs()},e}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
